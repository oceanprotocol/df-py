{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatokenAddress",
          "type": "address"
        }
      ],
      "name": "DispenserActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAllowedSwapper",
          "type": "address"
        }
      ],
      "name": "DispenserAllowedSwapperChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "allowedSwapper",
          "type": "address"
        }
      ],
      "name": "DispenserCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatokenAddress",
          "type": "address"
        }
      ],
      "name": "DispenserDeactivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OwnerWithdrawed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensDispensed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxBalance",
          "type": "uint256"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxBalance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "allowedSwapper",
          "type": "address"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "datatokensList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        }
      ],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "dispense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        }
      ],
      "name": "ownerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAllowedSwapper",
          "type": "address"
        }
      ],
      "name": "setAllowedSwapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        }
      ],
      "name": "status",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isMinter",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "maxTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "allowedSwapper",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
    "2": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
    "21": "contracts/oceanv4/interfaces/IDispenser.sol",
    "22": "contracts/oceanv4/interfaces/IERC20.sol",
    "23": "contracts/oceanv4/interfaces/IERC20Template.sol",
    "24": "contracts/oceanv4/interfaces/IERC721Template.sol",
    "39": "contracts/oceanv4/pools/dispenser/Dispenser.sol",
    "47": "contracts/oceanv4/utils/ERC721/Address.sol",
    "62": "contracts/oceanv4/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/oceanv4/pools/dispenser/Dispenser.sol",
    "exportedSymbols": {
      "Address": [
        21881
      ],
      "Dispenser": [
        12050
      ],
      "IDispenser": [
        3001
      ],
      "IERC20": [
        3084
      ],
      "IERC20Template": [
        3402
      ],
      "IERC721Template": [
        3697
      ],
      "ReentrancyGuard": [
        27765
      ],
      "SafeERC20": [
        25826
      ],
      "SafeMath": [
        28379
      ]
    },
    "id": 12051,
    "license": "(Apache-2.0 AND CC-BY-4.0)",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11316,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:39"
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IDispenser.sol",
        "file": "../../interfaces/IDispenser.sol",
        "id": 11317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 3002,
        "src": "186:41:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 11318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 3085,
        "src": "228:37:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IERC20Template.sol",
        "file": "../../interfaces/IERC20Template.sol",
        "id": 11319,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 3403,
        "src": "266:45:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IERC721Template.sol",
        "file": "../../interfaces/IERC721Template.sol",
        "id": 11320,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 3698,
        "src": "312:46:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "id": 11321,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 28380,
        "src": "359:85:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/utils/SafeERC20.sol",
        "file": "../../utils/SafeERC20.sol",
        "id": 11322,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 25827,
        "src": "446:35:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "id": 11323,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12051,
        "sourceUnit": 27766,
        "src": "482:90:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11324,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27765,
              "src": "596:15:39"
            },
            "id": 11325,
            "nodeType": "InheritanceSpecifier",
            "src": "596:15:39"
          },
          {
            "baseName": {
              "id": 11326,
              "name": "IDispenser",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3001,
              "src": "613:10:39"
            },
            "id": 11327,
            "nodeType": "InheritanceSpecifier",
            "src": "613:10:39"
          }
        ],
        "canonicalName": "Dispenser",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12050,
        "linearizedBaseContracts": [
          12050,
          3001,
          27765
        ],
        "name": "Dispenser",
        "nameLocation": "583:9:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11330,
            "libraryName": {
              "id": 11328,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28379,
              "src": "635:8:39"
            },
            "nodeType": "UsingForDirective",
            "src": "629:27:39",
            "typeName": {
              "id": 11329,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 11334,
            "libraryName": {
              "id": 11331,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25826,
              "src": "667:9:39"
            },
            "nodeType": "UsingForDirective",
            "src": "661:27:39",
            "typeName": {
              "id": 11333,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11332,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3084,
                "src": "681:6:39"
              },
              "referencedDeclaration": 3084,
              "src": "681:6:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3084",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f887ea40",
            "id": 11336,
            "mutability": "mutable",
            "name": "router",
            "nameLocation": "708:6:39",
            "nodeType": "VariableDeclaration",
            "scope": 12050,
            "src": "693:21:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11335,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "693:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Dispenser.DataToken",
            "id": 11347,
            "members": [
              {
                "constant": false,
                "id": 11338,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "753:6:39",
                "nodeType": "VariableDeclaration",
                "scope": 11347,
                "src": "748:11:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11337,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "748:4:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11340,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "827:5:39",
                "nodeType": "VariableDeclaration",
                "scope": 11347,
                "src": "819:13:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11339,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "819:7:39",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11342,
                "mutability": "mutable",
                "name": "maxTokens",
                "nameLocation": "877:9:39",
                "nodeType": "VariableDeclaration",
                "scope": 11347,
                "src": "869:17:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11341,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "869:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11344,
                "mutability": "mutable",
                "name": "maxBalance",
                "nameLocation": "930:10:39",
                "nodeType": "VariableDeclaration",
                "scope": 11347,
                "src": "922:18:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11343,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11346,
                "mutability": "mutable",
                "name": "allowedSwapper",
                "nameLocation": "988:14:39",
                "nodeType": "VariableDeclaration",
                "scope": 11347,
                "src": "980:22:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11345,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "980:7:39",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DataToken",
            "nameLocation": "728:9:39",
            "nodeType": "StructDefinition",
            "scope": 12050,
            "src": "721:349:39",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11352,
            "mutability": "mutable",
            "name": "datatokens",
            "nameLocation": "1105:10:39",
            "nodeType": "VariableDeclaration",
            "scope": 12050,
            "src": "1075:40:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
              "typeString": "mapping(address => struct Dispenser.DataToken)"
            },
            "typeName": {
              "id": 11351,
              "keyType": {
                "id": 11348,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1083:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:29:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                "typeString": "mapping(address => struct Dispenser.DataToken)"
              },
              "valueType": {
                "id": 11350,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11349,
                  "name": "DataToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11347,
                  "src": "1094:9:39"
                },
                "referencedDeclaration": 11347,
                "src": "1094:9:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DataToken_$11347_storage_ptr",
                  "typeString": "struct Dispenser.DataToken"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "3398086a",
            "id": 11355,
            "mutability": "mutable",
            "name": "datatokensList",
            "nameLocation": "1138:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 12050,
            "src": "1121:31:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11353,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1121:7:39",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11354,
              "nodeType": "ArrayTypeName",
              "src": "1121:9:39",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 11367,
            "name": "DispenserCreated",
            "nameLocation": "1174:16:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11357,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatokenAddress",
                  "nameLocation": "1255:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11367,
                  "src": "1239:32:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11359,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1297:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11367,
                  "src": "1281:21:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11361,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nameLocation": "1320:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11367,
                  "src": "1312:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11363,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxBalance",
                  "nameLocation": "1347:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11367,
                  "src": "1339:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11365,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allowedSwapper",
                  "nameLocation": "1375:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11367,
                  "src": "1367:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1190:205:39"
            },
            "src": "1168:228:39"
          },
          {
            "anonymous": false,
            "id": 11371,
            "name": "DispenserActivated",
            "nameLocation": "1407:18:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11369,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatokenAddress",
                  "nameLocation": "1492:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11371,
                  "src": "1476:32:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1425:89:39"
            },
            "src": "1401:114:39"
          },
          {
            "anonymous": false,
            "id": 11375,
            "name": "DispenserDeactivated",
            "nameLocation": "1527:20:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatokenAddress",
                  "nameLocation": "1615:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11375,
                  "src": "1599:32:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:90:39"
            },
            "src": "1521:117:39"
          },
          {
            "anonymous": false,
            "id": 11381,
            "name": "DispenserAllowedSwapperChanged",
            "nameLocation": "1649:30:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11377,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "1746:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11381,
                  "src": "1730:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11379,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAllowedSwapper",
                  "nameLocation": "1781:17:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11381,
                  "src": "1765:33:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:120:39"
            },
            "src": "1643:157:39"
          },
          {
            "anonymous": false,
            "id": 11389,
            "name": "TokensDispensed",
            "nameLocation": "1816:15:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11383,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatokenAddress",
                  "nameLocation": "1902:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11389,
                  "src": "1886:32:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11385,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "1944:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11389,
                  "src": "1928:27:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11387,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1973:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11389,
                  "src": "1965:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1831:154:39"
            },
            "src": "1810:176:39"
          },
          {
            "anonymous": false,
            "id": 11397,
            "name": "OwnerWithdrawed",
            "nameLocation": "1998:15:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11391,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "2039:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11397,
                  "src": "2023:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11393,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2074:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11397,
                  "src": "2058:21:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11395,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2097:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11397,
                  "src": "2089:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2013:96:39"
            },
            "src": "1992:118:39"
          },
          {
            "body": {
              "id": 11408,
              "nodeType": "Block",
              "src": "2138:83:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11400,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2156:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2156:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11402,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11336,
                          "src": "2170:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2156:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370656e7365723a206f6e6c7920726f75746572",
                        "id": 11404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2178:24:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b310148a0908042b73fb2b553b21afe0309eaa5ea229da262fa74adadf20797",
                          "typeString": "literal_string \"Dispenser: only router\""
                        },
                        "value": "Dispenser: only router"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b310148a0908042b73fb2b553b21afe0309eaa5ea229da262fa74adadf20797",
                          "typeString": "literal_string \"Dispenser: only router\""
                        }
                      ],
                      "id": 11399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2148:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2148:55:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11406,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:55:39"
                },
                {
                  "id": 11407,
                  "nodeType": "PlaceholderStatement",
                  "src": "2213:1:39"
                }
              ]
            },
            "id": 11409,
            "name": "onlyRouter",
            "nameLocation": "2125:10:39",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2135:2:39"
            },
            "src": "2116:105:39",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11452,
              "nodeType": "Block",
              "src": "2265:427:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11414,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11411,
                          "src": "2347:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2368:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2360:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11415,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2360:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2360:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2347:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2326:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11422,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:100:39"
                },
                {
                  "assignments": [
                    11425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11425,
                      "mutability": "mutable",
                      "name": "dt",
                      "nameLocation": "2451:2:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11452,
                      "src": "2436:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Template_$3402",
                        "typeString": "contract IERC20Template"
                      },
                      "typeName": {
                        "id": 11424,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11423,
                          "name": "IERC20Template",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3402,
                          "src": "2436:14:39"
                        },
                        "referencedDeclaration": 3402,
                        "src": "2436:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11429,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11427,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11411,
                        "src": "2471:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11426,
                      "name": "IERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "2456:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Template_$3402_$",
                        "typeString": "type(contract IERC20Template)"
                      }
                    },
                    "id": 11428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2456:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Template_$3402",
                      "typeString": "contract IERC20Template"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2436:45:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 11433,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2531:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2531:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 11431,
                              "name": "dt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11425,
                              "src": "2512:2:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Template_$3402",
                                "typeString": "contract IERC20Template"
                              }
                            },
                            "id": 11432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isERC20Deployer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3367,
                            "src": "2512:18:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 11435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2512:30:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 11442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2606:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 11437,
                                        "name": "dt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11425,
                                        "src": "2575:2:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                                          "typeString": "contract IERC20Template"
                                        }
                                      },
                                      "id": 11438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getERC721Address",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3360,
                                      "src": "2575:19:39",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 11439,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2575:21:39",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 11436,
                                  "name": "IERC721Template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3697,
                                  "src": "2559:15:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                    "typeString": "type(contract IERC721Template)"
                                  }
                                },
                                "id": 11440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2559:38:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                  "typeString": "contract IERC721Template"
                                }
                              },
                              "id": 11441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3499,
                              "src": "2559:46:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 11443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2559:49:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 11444,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2612:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2612:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2559:63:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2512:110:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f776e6572",
                        "id": 11448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2649:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
                          "typeString": "literal_string \"Invalid owner\""
                        },
                        "value": "Invalid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
                          "typeString": "literal_string \"Invalid owner\""
                        }
                      ],
                      "id": 11430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2491:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:183:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11450,
                  "nodeType": "ExpressionStatement",
                  "src": "2491:183:39"
                },
                {
                  "id": 11451,
                  "nodeType": "PlaceholderStatement",
                  "src": "2684:1:39"
                }
              ]
            },
            "id": 11453,
            "name": "onlyOwner",
            "nameLocation": "2236:9:39",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11411,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "2254:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11453,
                  "src": "2246:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2245:19:39"
            },
            "src": "2227:465:39",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11501,
              "nodeType": "Block",
              "src": "2747:466:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11458,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11455,
                          "src": "2829:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2850:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2842:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11459,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2842:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2842:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2829:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2866:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2808:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2808:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11466,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:100:39"
                },
                {
                  "assignments": [
                    11469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11469,
                      "mutability": "mutable",
                      "name": "dt",
                      "nameLocation": "2933:2:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11501,
                      "src": "2918:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Template_$3402",
                        "typeString": "contract IERC20Template"
                      },
                      "typeName": {
                        "id": 11468,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11467,
                          "name": "IERC20Template",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3402,
                          "src": "2918:14:39"
                        },
                        "referencedDeclaration": 3402,
                        "src": "2918:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11473,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11471,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11455,
                        "src": "2953:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11470,
                      "name": "IERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "2938:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Template_$3402_$",
                        "typeString": "type(contract IERC20Template)"
                      }
                    },
                    "id": 11472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Template_$3402",
                      "typeString": "contract IERC20Template"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2918:45:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 11491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 11477,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3013:3:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 11478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3013:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 11475,
                                "name": "dt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11469,
                                "src": "2994:2:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Template_$3402",
                                  "typeString": "contract IERC20Template"
                                }
                              },
                              "id": 11476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isERC20Deployer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3367,
                              "src": "2994:18:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 11479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2994:30:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 11490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 11486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3088:1:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 11481,
                                          "name": "dt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11469,
                                          "src": "3057:2:39",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20Template_$3402",
                                            "typeString": "contract IERC20Template"
                                          }
                                        },
                                        "id": 11482,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getERC721Address",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3360,
                                        "src": "3057:19:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 11483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3057:21:39",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 11480,
                                    "name": "IERC721Template",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3697,
                                    "src": "3041:15:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                      "typeString": "type(contract IERC721Template)"
                                    }
                                  },
                                  "id": 11484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3041:38:39",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                    "typeString": "contract IERC721Template"
                                  }
                                },
                                "id": 11485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3499,
                                "src": "3041:46:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 11487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3041:49:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 11488,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3094:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3094:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3041:63:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2994:110:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11492,
                            "name": "datatoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11455,
                            "src": "3120:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 11493,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3133:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3133:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3120:23:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2994:149:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f776e6572",
                        "id": 11497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3170:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
                          "typeString": "literal_string \"Invalid owner\""
                        },
                        "value": "Invalid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
                          "typeString": "literal_string \"Invalid owner\""
                        }
                      ],
                      "id": 11474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2973:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:222:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11499,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:222:39"
                },
                {
                  "id": 11500,
                  "nodeType": "PlaceholderStatement",
                  "src": "3205:1:39"
                }
              ]
            },
            "id": 11502,
            "name": "onlyOwnerAndTemplate",
            "nameLocation": "2707:20:39",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11455,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "2736:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11502,
                  "src": "2728:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:19:39"
            },
            "src": "2698:515:39",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11521,
              "nodeType": "Block",
              "src": "3253:108:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11508,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11504,
                          "src": "3271:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3290:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3282:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11509,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3282:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3282:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3271:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370656e7365723a2057726f6e6720526f757465722061646472657373",
                        "id": 11514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3294:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_037890516369207dce0ad17c0e4eb96c4973b123b43ac9031b0aeb4f9d04de67",
                          "typeString": "literal_string \"Dispenser: Wrong Router address\""
                        },
                        "value": "Dispenser: Wrong Router address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_037890516369207dce0ad17c0e4eb96c4973b123b43ac9031b0aeb4f9d04de67",
                          "typeString": "literal_string \"Dispenser: Wrong Router address\""
                        }
                      ],
                      "id": 11507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3263:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:65:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11516,
                  "nodeType": "ExpressionStatement",
                  "src": "3263:65:39"
                },
                {
                  "expression": {
                    "id": 11519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11517,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11336,
                      "src": "3338:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11518,
                      "name": "_router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11504,
                      "src": "3347:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3338:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11520,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:16:39"
                }
              ]
            },
            "id": 11522,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11504,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "3244:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11522,
                  "src": "3236:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3235:17:39"
            },
            "returnParameters": {
              "id": 11506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3253:0:39"
            },
            "scope": 12050,
            "src": "3224:137:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3000
            ],
            "body": {
              "id": 11530,
              "nodeType": "Block",
              "src": "3605:25:39",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 11528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3622:1:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 11527,
                  "id": 11529,
                  "nodeType": "Return",
                  "src": "3615:8:39"
                }
              ]
            },
            "documentation": {
              "id": 11523,
              "nodeType": "StructuredDocumentation",
              "src": "3367:188:39",
              "text": " @dev getId\n      Return template id in case we need different ABIs. \n      If you construct your own template, please make sure to change the hardcoded value"
            },
            "functionSelector": "5d1ca631",
            "id": 11531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getId",
            "nameLocation": "3569:5:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3574:2:39"
            },
            "returnParameters": {
              "id": 11527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11531,
                  "src": "3598:5:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11525,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3597:7:39"
            },
            "scope": 12050,
            "src": "3560:70:39",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2947
            ],
            "body": {
              "id": 11623,
              "nodeType": "Block",
              "src": "4466:562:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11552,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11534,
                          "src": "4497:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4518:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4510:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11553,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4510:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4497:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4534:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4476:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11560,
                  "nodeType": "ExpressionStatement",
                  "src": "4476:100:39"
                },
                {
                  "expression": {
                    "id": 11566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11561,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11537,
                      "src": "4586:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11562,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "4595:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11564,
                        "indexExpression": {
                          "id": 11563,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11534,
                          "src": "4606:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4595:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11565,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11338,
                      "src": "4595:28:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4586:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11567,
                  "nodeType": "ExpressionStatement",
                  "src": "4586:37:39"
                },
                {
                  "expression": {
                    "id": 11573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11568,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11539,
                      "src": "4633:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11569,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "4641:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11571,
                        "indexExpression": {
                          "id": 11570,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11534,
                          "src": "4652:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4641:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11572,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11340,
                      "src": "4641:27:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4633:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11574,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:35:39"
                },
                {
                  "expression": {
                    "id": 11580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11575,
                      "name": "maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11543,
                      "src": "4678:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11576,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "4690:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11578,
                        "indexExpression": {
                          "id": 11577,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11534,
                          "src": "4701:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4690:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "maxTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11342,
                      "src": "4690:31:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4678:43:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11581,
                  "nodeType": "ExpressionStatement",
                  "src": "4678:43:39"
                },
                {
                  "expression": {
                    "id": 11587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11582,
                      "name": "maxBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11545,
                      "src": "4731:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11583,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "4744:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11585,
                        "indexExpression": {
                          "id": 11584,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11534,
                          "src": "4755:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4744:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11586,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "maxBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11344,
                      "src": "4744:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4731:45:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11588,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:45:39"
                },
                {
                  "assignments": [
                    11591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11591,
                      "mutability": "mutable",
                      "name": "tokenInstance",
                      "nameLocation": "4801:13:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11623,
                      "src": "4786:28:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Template_$3402",
                        "typeString": "contract IERC20Template"
                      },
                      "typeName": {
                        "id": 11590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11589,
                          "name": "IERC20Template",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3402,
                          "src": "4786:14:39"
                        },
                        "referencedDeclaration": 3402,
                        "src": "4786:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11595,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11593,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11534,
                        "src": "4832:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11592,
                      "name": "IERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "4817:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Template_$3402_$",
                        "typeString": "type(contract IERC20Template)"
                      }
                    },
                    "id": 11594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4817:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Template_$3402",
                      "typeString": "contract IERC20Template"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4786:56:39"
                },
                {
                  "expression": {
                    "id": 11604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11596,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11547,
                      "src": "4852:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11601,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4894:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dispenser_$12050",
                                "typeString": "contract Dispenser"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dispenser_$12050",
                                "typeString": "contract Dispenser"
                              }
                            ],
                            "id": 11600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4886:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11599,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4886:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:13:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11597,
                          "name": "tokenInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "4862:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Template_$3402",
                            "typeString": "contract IERC20Template"
                          }
                        },
                        "id": 11598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3167,
                        "src": "4862:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 11603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4862:38:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4852:48:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11605,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:48:39"
                },
                {
                  "expression": {
                    "id": 11614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11606,
                      "name": "isMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11541,
                      "src": "4910:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11611,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4952:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dispenser_$12050",
                                "typeString": "contract Dispenser"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dispenser_$12050",
                                "typeString": "contract Dispenser"
                              }
                            ],
                            "id": 11610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4944:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11609,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4944:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4944:13:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11607,
                          "name": "tokenInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "4921:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Template_$3402",
                            "typeString": "contract IERC20Template"
                          }
                        },
                        "id": 11608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMinter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3219,
                        "src": "4921:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 11613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4921:37:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4910:48:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11615,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:48:39"
                },
                {
                  "expression": {
                    "id": 11621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11616,
                      "name": "allowedSwapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11549,
                      "src": "4968:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11617,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "4985:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11619,
                        "indexExpression": {
                          "id": 11618,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11534,
                          "src": "4996:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4985:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowedSwapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11346,
                      "src": "4985:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4968:53:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11622,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:53:39"
                }
              ]
            },
            "documentation": {
              "id": 11532,
              "nodeType": "StructuredDocumentation",
              "src": "3635:636:39",
              "text": " @dev status\n      Get information about a datatoken dispenser\n @param datatoken refers to datatoken address.\n @return active - if the dispenser is active for this datatoken\n @return owner - owner of this dispenser\n @return isMinter  - check the datatoken contract if the dispenser has mint roles\n @return maxTokens - max tokens to dispense\n @return maxBalance - max balance of requester. If the balance is higher, the dispense is rejected\n @return balance - internal balance of the contract (if any)\n @return allowedSwapper - address allowed to request DT if != 0"
            },
            "functionSelector": "645b8b1b",
            "id": 11624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "status",
            "nameLocation": "4285:6:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11534,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "4300:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4292:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4292:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4291:19:39"
            },
            "returnParameters": {
              "id": 11550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11537,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "4348:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4343:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4343:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11539,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4363:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4355:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4355:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11541,
                  "mutability": "mutable",
                  "name": "isMinter",
                  "nameLocation": "4379:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4374:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11540,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4374:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11543,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nameLocation": "4396:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4388:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11545,
                  "mutability": "mutable",
                  "name": "maxBalance",
                  "nameLocation": "4414:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4406:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4406:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11547,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4434:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4426:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11549,
                  "mutability": "mutable",
                  "name": "allowedSwapper",
                  "nameLocation": "4451:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "4443:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4342:124:39"
            },
            "scope": 12050,
            "src": "4276:752:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2960
            ],
            "body": {
              "id": 11724,
              "nodeType": "Block",
              "src": "5499:741:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11641,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11627,
                          "src": "5530:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5551:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5543:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11642,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5543:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5543:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5530:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5567:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5509:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5509:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11649,
                  "nodeType": "ExpressionStatement",
                  "src": "5509:100:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 11651,
                                "name": "datatokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11352,
                                "src": "5640:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                                  "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                                }
                              },
                              "id": 11653,
                              "indexExpression": {
                                "id": 11652,
                                "name": "datatoken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11627,
                                "src": "5651:9:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5640:21:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                                "typeString": "struct Dispenser.DataToken storage ref"
                              }
                            },
                            "id": 11654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11340,
                            "src": "5640:27:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 11657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5679:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 11656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5671:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11655,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5671:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5671:10:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5640:41:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 11660,
                                "name": "datatokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11352,
                                "src": "5685:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                                  "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                                }
                              },
                              "id": 11662,
                              "indexExpression": {
                                "id": 11661,
                                "name": "datatoken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11627,
                                "src": "5696:9:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5685:21:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                                "typeString": "struct Dispenser.DataToken storage ref"
                              }
                            },
                            "id": 11663,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11340,
                            "src": "5685:27:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 11664,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11633,
                            "src": "5716:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5685:36:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5640:81:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44617461746f6b656e20616c72656164792063726561746564",
                        "id": 11667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5735:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ec193572a83ebf12697f00e71bc64eadca9d1a4f55451cf60c7b7289f85a02c",
                          "typeString": "literal_string \"Datatoken already created\""
                        },
                        "value": "Datatoken already created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ec193572a83ebf12697f00e71bc64eadca9d1a4f55451cf60c7b7289f85a02c",
                          "typeString": "literal_string \"Datatoken already created\""
                        }
                      ],
                      "id": 11650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5619:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5619:153:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11669,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:153:39"
                },
                {
                  "expression": {
                    "id": 11675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11670,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "5782:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11672,
                        "indexExpression": {
                          "id": 11671,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11627,
                          "src": "5793:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5782:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11673,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11338,
                      "src": "5782:28:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5813:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5782:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11676,
                  "nodeType": "ExpressionStatement",
                  "src": "5782:35:39"
                },
                {
                  "expression": {
                    "id": 11682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11677,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "5827:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11679,
                        "indexExpression": {
                          "id": 11678,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11627,
                          "src": "5838:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5827:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11680,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11340,
                      "src": "5827:27:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11681,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11633,
                      "src": "5857:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5827:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11683,
                  "nodeType": "ExpressionStatement",
                  "src": "5827:35:39"
                },
                {
                  "expression": {
                    "id": 11689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11684,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "5872:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11686,
                        "indexExpression": {
                          "id": 11685,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11627,
                          "src": "5883:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5872:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11687,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11342,
                      "src": "5872:31:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11688,
                      "name": "maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11629,
                      "src": "5906:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5872:43:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11690,
                  "nodeType": "ExpressionStatement",
                  "src": "5872:43:39"
                },
                {
                  "expression": {
                    "id": 11696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11691,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "5925:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11693,
                        "indexExpression": {
                          "id": 11692,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11627,
                          "src": "5936:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5925:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11694,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11344,
                      "src": "5925:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11695,
                      "name": "maxBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11631,
                      "src": "5960:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5925:45:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11697,
                  "nodeType": "ExpressionStatement",
                  "src": "5925:45:39"
                },
                {
                  "expression": {
                    "id": 11703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11698,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "5980:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11700,
                        "indexExpression": {
                          "id": 11699,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11627,
                          "src": "5991:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5980:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allowedSwapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11346,
                      "src": "5980:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11702,
                      "name": "allowedSwapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11635,
                      "src": "6019:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5980:53:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11704,
                  "nodeType": "ExpressionStatement",
                  "src": "5980:53:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11708,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11627,
                        "src": "6063:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11705,
                        "name": "datatokensList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11355,
                        "src": "6043:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6043:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 11709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6043:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11710,
                  "nodeType": "ExpressionStatement",
                  "src": "6043:30:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11712,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11627,
                        "src": "6105:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11713,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11633,
                        "src": "6116:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11714,
                        "name": "maxTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11629,
                        "src": "6123:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11715,
                        "name": "maxBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11631,
                        "src": "6134:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11716,
                        "name": "allowedSwapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11635,
                        "src": "6146:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11711,
                      "name": "DispenserCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11367,
                      "src": "6088:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 11717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6088:73:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11718,
                  "nodeType": "EmitStatement",
                  "src": "6083:78:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11720,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11627,
                        "src": "6207:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11721,
                        "name": "allowedSwapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11635,
                        "src": "6218:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11719,
                      "name": "DispenserAllowedSwapperChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11381,
                      "src": "6176:30:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6176:57:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11723,
                  "nodeType": "EmitStatement",
                  "src": "6171:62:39"
                }
              ]
            },
            "documentation": {
              "id": 11625,
              "nodeType": "StructuredDocumentation",
              "src": "5034:321:39",
              "text": " @dev create\n      Create a new dispenser\n @param datatoken refers to datatoken address.\n @param maxTokens - max tokens to dispense\n @param maxBalance - max balance of requester.\n @param owner - owner\n @param allowedSwapper - if !=0, only this address can request DTs"
            },
            "functionSelector": "24ce2917",
            "id": 11725,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11638,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11637,
                  "name": "onlyRouter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11409,
                  "src": "5489:10:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "5489:10:39"
              }
            ],
            "name": "create",
            "nameLocation": "5369:6:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11627,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "5384:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11725,
                  "src": "5376:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5376:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11629,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nameLocation": "5402:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11725,
                  "src": "5394:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11631,
                  "mutability": "mutable",
                  "name": "maxBalance",
                  "nameLocation": "5421:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11725,
                  "src": "5413:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5413:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11633,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5441:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11725,
                  "src": "5433:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5433:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11635,
                  "mutability": "mutable",
                  "name": "allowedSwapper",
                  "nameLocation": "5456:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11725,
                  "src": "5448:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5448:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5375:96:39"
            },
            "returnParameters": {
              "id": 11639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5499:0:39"
            },
            "scope": 12050,
            "src": "5360:880:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2969
            ],
            "body": {
              "id": 11769,
              "nodeType": "Block",
              "src": "6586:244:39",
              "statements": [
                {
                  "expression": {
                    "id": 11743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11738,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "6596:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11740,
                        "indexExpression": {
                          "id": 11739,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11728,
                          "src": "6607:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6596:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11338,
                      "src": "6596:28:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6627:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6596:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11744,
                  "nodeType": "ExpressionStatement",
                  "src": "6596:35:39"
                },
                {
                  "expression": {
                    "id": 11750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11745,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "6641:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11747,
                        "indexExpression": {
                          "id": 11746,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11728,
                          "src": "6652:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6641:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11748,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11342,
                      "src": "6641:31:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11749,
                      "name": "maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11730,
                      "src": "6675:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6641:43:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11751,
                  "nodeType": "ExpressionStatement",
                  "src": "6641:43:39"
                },
                {
                  "expression": {
                    "id": 11757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11752,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "6694:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11754,
                        "indexExpression": {
                          "id": 11753,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11728,
                          "src": "6705:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6694:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11755,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11344,
                      "src": "6694:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11756,
                      "name": "maxBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11732,
                      "src": "6729:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6694:45:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11758,
                  "nodeType": "ExpressionStatement",
                  "src": "6694:45:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11762,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11728,
                        "src": "6769:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11759,
                        "name": "datatokensList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11355,
                        "src": "6749:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6749:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 11763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6749:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11764,
                  "nodeType": "ExpressionStatement",
                  "src": "6749:30:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11766,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11728,
                        "src": "6813:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11765,
                      "name": "DispenserActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11371,
                      "src": "6794:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6794:29:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11768,
                  "nodeType": "EmitStatement",
                  "src": "6789:34:39"
                }
              ]
            },
            "documentation": {
              "id": 11726,
              "nodeType": "StructuredDocumentation",
              "src": "6245:224:39",
              "text": " @dev activate\n      Activate a new dispenser\n @param datatoken refers to datatoken address.\n @param maxTokens - max tokens to dispense\n @param maxBalance - max balance of requester."
            },
            "functionSelector": "938d71d0",
            "id": 11770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11735,
                    "name": "datatoken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11728,
                    "src": "6576:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11736,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11734,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11453,
                  "src": "6566:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "6566:20:39"
              }
            ],
            "name": "activate",
            "nameLocation": "6483:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11728,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "6500:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11770,
                  "src": "6492:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6492:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11730,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nameLocation": "6518:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11770,
                  "src": "6510:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6510:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11732,
                  "mutability": "mutable",
                  "name": "maxBalance",
                  "nameLocation": "6537:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11770,
                  "src": "6529:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6529:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6491:57:39"
            },
            "returnParameters": {
              "id": 11737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6586:0:39"
            },
            "scope": 12050,
            "src": "6474:356:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2974
            ],
            "body": {
              "id": 11790,
              "nodeType": "Block",
              "src": "7041:99:39",
              "statements": [
                {
                  "expression": {
                    "id": 11784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11779,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "7051:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11781,
                        "indexExpression": {
                          "id": 11780,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11773,
                          "src": "7062:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7051:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11782,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11338,
                      "src": "7051:28:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 11783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7082:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7051:36:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11785,
                  "nodeType": "ExpressionStatement",
                  "src": "7051:36:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11787,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11773,
                        "src": "7123:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11786,
                      "name": "DispenserDeactivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11375,
                      "src": "7102:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:31:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11789,
                  "nodeType": "EmitStatement",
                  "src": "7097:36:39"
                }
              ]
            },
            "documentation": {
              "id": 11771,
              "nodeType": "StructuredDocumentation",
              "src": "6836:132:39",
              "text": " @dev deactivate\n      Deactivate an existing dispenser\n @param datatoken refers to datatoken address."
            },
            "functionSelector": "3ea053eb",
            "id": 11791,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11776,
                    "name": "datatoken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11773,
                    "src": "7031:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11777,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11775,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11453,
                  "src": "7021:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "7021:20:39"
              }
            ],
            "name": "deactivate",
            "nameLocation": "6982:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11773,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "7001:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11791,
                  "src": "6993:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6993:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6992:19:39"
            },
            "returnParameters": {
              "id": 11778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7041:0:39"
            },
            "scope": 12050,
            "src": "6973:167:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2995
            ],
            "body": {
              "id": 11814,
              "nodeType": "Block",
              "src": "7450:147:39",
              "statements": [
                {
                  "expression": {
                    "id": 11807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11802,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "7460:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11804,
                        "indexExpression": {
                          "id": 11803,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11794,
                          "src": "7471:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7460:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11805,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allowedSwapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11346,
                      "src": "7460:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11806,
                      "name": "newAllowedSwapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11796,
                      "src": "7498:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7460:55:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11808,
                  "nodeType": "ExpressionStatement",
                  "src": "7460:55:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11810,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11794,
                        "src": "7561:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11811,
                        "name": "newAllowedSwapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11796,
                        "src": "7572:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11809,
                      "name": "DispenserAllowedSwapperChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11381,
                      "src": "7530:30:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7530:60:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11813,
                  "nodeType": "EmitStatement",
                  "src": "7525:65:39"
                }
              ]
            },
            "documentation": {
              "id": 11792,
              "nodeType": "StructuredDocumentation",
              "src": "7146:197:39",
              "text": " @dev setAllowedSwapper\n      Sets a new allowedSwapper\n @param datatoken refers to datatoken address.\n @param newAllowedSwapper refers to the new allowedSwapper"
            },
            "functionSelector": "45d6646b",
            "id": 11815,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11799,
                    "name": "datatoken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11794,
                    "src": "7440:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11800,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11798,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11453,
                  "src": "7430:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "7430:20:39"
              }
            ],
            "name": "setAllowedSwapper",
            "nameLocation": "7357:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11794,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "7383:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11815,
                  "src": "7375:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7375:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11796,
                  "mutability": "mutable",
                  "name": "newAllowedSwapper",
                  "nameLocation": "7402:17:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11815,
                  "src": "7394:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7394:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7374:46:39"
            },
            "returnParameters": {
              "id": 11801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7450:0:39"
            },
            "scope": 12050,
            "src": "7348:249:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2983
            ],
            "body": {
              "id": 11974,
              "nodeType": "Block",
              "src": "8092:1485:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11828,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11818,
                          "src": "8123:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8144:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8136:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8136:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8136:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8123:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8160:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8102:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8102:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11836,
                  "nodeType": "ExpressionStatement",
                  "src": "8102:100:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 11838,
                            "name": "datatokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11352,
                            "src": "8233:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                              "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                            }
                          },
                          "id": 11840,
                          "indexExpression": {
                            "id": 11839,
                            "name": "datatoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11818,
                            "src": "8244:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8233:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                            "typeString": "struct Dispenser.DataToken storage ref"
                          }
                        },
                        "id": 11841,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11338,
                        "src": "8233:28:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370656e736572206e6f7420616374697665",
                        "id": 11842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8275:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad22fc5ad027c7c8b01eef1a92f40801532cfc3acc4dec7288322ef61342b858",
                          "typeString": "literal_string \"Dispenser not active\""
                        },
                        "value": "Dispenser not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad22fc5ad027c7c8b01eef1a92f40801532cfc3acc4dec7288322ef61342b858",
                          "typeString": "literal_string \"Dispenser not active\""
                        }
                      ],
                      "id": 11837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8212:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8212:95:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11844,
                  "nodeType": "ExpressionStatement",
                  "src": "8212:95:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11846,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11820,
                          "src": "8338:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8347:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8338:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207a65726f20616d6f756e74",
                        "id": 11849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8362:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e58cd0dd15e69c386ad46aeaec0637af7b133b0b08192a22e891c7d736d3ac8",
                          "typeString": "literal_string \"Invalid zero amount\""
                        },
                        "value": "Invalid zero amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e58cd0dd15e69c386ad46aeaec0637af7b133b0b08192a22e891c7d736d3ac8",
                          "typeString": "literal_string \"Invalid zero amount\""
                        }
                      ],
                      "id": 11845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8317:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8317:76:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11851,
                  "nodeType": "ExpressionStatement",
                  "src": "8317:76:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 11853,
                              "name": "datatokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11352,
                              "src": "8424:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                                "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                              }
                            },
                            "id": 11855,
                            "indexExpression": {
                              "id": 11854,
                              "name": "datatoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11818,
                              "src": "8435:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8424:21:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                              "typeString": "struct Dispenser.DataToken storage ref"
                            }
                          },
                          "id": 11856,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11342,
                          "src": "8424:31:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 11857,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11820,
                          "src": "8459:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8424:41:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f6f2068696768",
                        "id": 11859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8479:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                          "typeString": "literal_string \"Amount too high\""
                        },
                        "value": "Amount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                          "typeString": "literal_string \"Amount too high\""
                        }
                      ],
                      "id": 11852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8403:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8403:103:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11861,
                  "nodeType": "ExpressionStatement",
                  "src": "8403:103:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 11862,
                          "name": "datatokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "8519:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                            "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                          }
                        },
                        "id": 11864,
                        "indexExpression": {
                          "id": 11863,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11818,
                          "src": "8530:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8519:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                          "typeString": "struct Dispenser.DataToken storage ref"
                        }
                      },
                      "id": 11865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowedSwapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11346,
                      "src": "8519:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8567:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8559:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8559:7:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8559:10:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8519:50:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11883,
                  "nodeType": "IfStatement",
                  "src": "8516:229:39",
                  "trueBody": {
                    "id": 11882,
                    "nodeType": "Block",
                    "src": "8570:175:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 11878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 11872,
                                    "name": "datatokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11352,
                                    "src": "8609:10:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                                      "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                                    }
                                  },
                                  "id": 11874,
                                  "indexExpression": {
                                    "id": 11873,
                                    "name": "datatoken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11818,
                                    "src": "8620:9:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8609:21:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                                    "typeString": "struct Dispenser.DataToken storage ref"
                                  }
                                },
                                "id": 11875,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowedSwapper",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11346,
                                "src": "8609:36:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 11876,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8649:3:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 11877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8649:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8609:50:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546869732061646472657373206973206e6f7420616c6c6f77656420746f2072657175657374204454",
                              "id": 11879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8677:43:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_295ce587f00bf3396e1400a3d501e9a76ab81ddfbb69eae312a5c3838ba3b010",
                                "typeString": "literal_string \"This address is not allowed to request DT\""
                              },
                              "value": "This address is not allowed to request DT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_295ce587f00bf3396e1400a3d501e9a76ab81ddfbb69eae312a5c3838ba3b010",
                                "typeString": "literal_string \"This address is not allowed to request DT\""
                              }
                            ],
                            "id": 11871,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8584:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 11880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8584:150:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11881,
                        "nodeType": "ExpressionStatement",
                        "src": "8584:150:39"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    11886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11886,
                      "mutability": "mutable",
                      "name": "tokenInstance",
                      "nameLocation": "8778:13:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11974,
                      "src": "8763:28:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Template_$3402",
                        "typeString": "contract IERC20Template"
                      },
                      "typeName": {
                        "id": 11885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11884,
                          "name": "IERC20Template",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3402,
                          "src": "8763:14:39"
                        },
                        "referencedDeclaration": 3402,
                        "src": "8763:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11890,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11888,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11818,
                        "src": "8809:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11887,
                      "name": "IERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "8794:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Template_$3402_$",
                        "typeString": "type(contract IERC20Template)"
                      }
                    },
                    "id": 11889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8794:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Template_$3402",
                      "typeString": "contract IERC20Template"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8763:56:39"
                },
                {
                  "assignments": [
                    11892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11892,
                      "mutability": "mutable",
                      "name": "callerBalance",
                      "nameLocation": "8837:13:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11974,
                      "src": "8829:21:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8829:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11897,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11895,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11822,
                        "src": "8877:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11893,
                        "name": "tokenInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11886,
                        "src": "8853:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "id": 11894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3167,
                      "src": "8853:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8853:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8829:60:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11899,
                          "name": "callerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11892,
                          "src": "8920:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 11900,
                              "name": "datatokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11352,
                              "src": "8934:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DataToken_$11347_storage_$",
                                "typeString": "mapping(address => struct Dispenser.DataToken storage ref)"
                              }
                            },
                            "id": 11902,
                            "indexExpression": {
                              "id": 11901,
                              "name": "datatoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11818,
                              "src": "8945:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8934:21:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DataToken_$11347_storage",
                              "typeString": "struct Dispenser.DataToken storage ref"
                            }
                          },
                          "id": 11903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11344,
                          "src": "8934:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8920:46:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722062616c616e636520746f6f2068696768",
                        "id": 11905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8980:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_036daf442604eb31ad74da9a69fe5dbd62aabfebb2991e7c7d29a1f2fe39919a",
                          "typeString": "literal_string \"Caller balance too high\""
                        },
                        "value": "Caller balance too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_036daf442604eb31ad74da9a69fe5dbd62aabfebb2991e7c7d29a1f2fe39919a",
                          "typeString": "literal_string \"Caller balance too high\""
                        }
                      ],
                      "id": 11898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8899:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8899:116:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11907,
                  "nodeType": "ExpressionStatement",
                  "src": "8899:116:39"
                },
                {
                  "assignments": [
                    11909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11909,
                      "mutability": "mutable",
                      "name": "ourBalance",
                      "nameLocation": "9033:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11974,
                      "src": "9025:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9025:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11917,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11914,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9078:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dispenser_$12050",
                              "typeString": "contract Dispenser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dispenser_$12050",
                              "typeString": "contract Dispenser"
                            }
                          ],
                          "id": 11913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9070:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9070:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9070:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11910,
                        "name": "tokenInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11886,
                        "src": "9046:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "id": 11911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3167,
                      "src": "9046:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9046:38:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9025:59:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11918,
                        "name": "ourBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11909,
                        "src": "9097:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 11919,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11820,
                        "src": "9108:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9097:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11925,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9149:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dispenser_$12050",
                                "typeString": "contract Dispenser"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dispenser_$12050",
                                "typeString": "contract Dispenser"
                              }
                            ],
                            "id": 11924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9141:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9141:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9141:13:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11921,
                          "name": "tokenInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11886,
                          "src": "9118:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Template_$3402",
                            "typeString": "contract IERC20Template"
                          }
                        },
                        "id": 11922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMinter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3219,
                        "src": "9118:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 11927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9118:37:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9097:58:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11952,
                  "nodeType": "IfStatement",
                  "src": "9094:261:39",
                  "trueBody": {
                    "id": 11951,
                    "nodeType": "Block",
                    "src": "9156:199:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 11934,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9253:4:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dispenser_$12050",
                                    "typeString": "contract Dispenser"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dispenser_$12050",
                                    "typeString": "contract Dispenser"
                                  }
                                ],
                                "id": 11933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9245:7:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11932,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9245:7:39",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9245:13:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 11936,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11820,
                                "src": "9259:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 11937,
                                "name": "ourBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11909,
                                "src": "9268:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9259:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11929,
                              "name": "tokenInstance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11886,
                              "src": "9226:13:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Template_$3402",
                                "typeString": "contract IERC20Template"
                              }
                            },
                            "id": 11931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3212,
                            "src": "9226:18:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 11939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9226:53:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11940,
                        "nodeType": "ExpressionStatement",
                        "src": "9226:53:39"
                      },
                      {
                        "expression": {
                          "id": 11949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11941,
                            "name": "ourBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11909,
                            "src": "9293:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 11946,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "9338:4:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Dispenser_$12050",
                                      "typeString": "contract Dispenser"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Dispenser_$12050",
                                      "typeString": "contract Dispenser"
                                    }
                                  ],
                                  "id": 11945,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9330:7:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 11944,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9330:7:39",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 11947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9330:13:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 11942,
                                "name": "tokenInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11886,
                                "src": "9306:13:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Template_$3402",
                                  "typeString": "contract IERC20Template"
                                }
                              },
                              "id": 11943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3167,
                              "src": "9306:23:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 11948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9306:38:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9293:51:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11950,
                        "nodeType": "ExpressionStatement",
                        "src": "9293:51:39"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11954,
                          "name": "ourBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11909,
                          "src": "9385:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 11955,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11820,
                          "src": "9397:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9385:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207265736572766573",
                        "id": 11957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9417:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b90a513fa74c2a8dc35fe1591468e10fc67c299dc0f325ea992d29212514d24",
                          "typeString": "literal_string \"Not enough reserves\""
                        },
                        "value": "Not enough reserves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b90a513fa74c2a8dc35fe1591468e10fc67c299dc0f325ea992d29212514d24",
                          "typeString": "literal_string \"Not enough reserves\""
                        }
                      ],
                      "id": 11953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9364:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9364:84:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11959,
                  "nodeType": "ExpressionStatement",
                  "src": "9364:84:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11961,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11818,
                        "src": "9479:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11962,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11822,
                        "src": "9490:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11963,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11820,
                        "src": "9503:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11960,
                      "name": "TokensDispensed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11389,
                      "src": "9463:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9463:47:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11965,
                  "nodeType": "EmitStatement",
                  "src": "9458:52:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11970,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11822,
                        "src": "9551:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11971,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11820,
                        "src": "9563:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11967,
                            "name": "datatoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11818,
                            "src": "9527:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11966,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3084,
                          "src": "9520:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 11968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9520:17:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3084",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25633,
                      "src": "9520:30:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9520:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11973,
                  "nodeType": "ExpressionStatement",
                  "src": "9520:50:39"
                }
              ]
            },
            "documentation": {
              "id": 11816,
              "nodeType": "StructuredDocumentation",
              "src": "7609:375:39",
              "text": " @dev dispense\n  Dispense datatokens to caller. \n  The dispenser must be active, hold enough DT (or be able to mint more) \n  and respect maxTokens/maxBalance requirements\n @param datatoken refers to datatoken address.\n @param amount amount of datatokens required.\n @param destination refers to who will receive the tokens"
            },
            "functionSelector": "1d746d83",
            "id": 11975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11825,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11824,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "8072:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "8072:12:39"
              }
            ],
            "name": "dispense",
            "nameLocation": "7998:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11818,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "8015:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11975,
                  "src": "8007:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8007:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11820,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8034:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11975,
                  "src": "8026:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8026:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11822,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "8050:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11975,
                  "src": "8042:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8042:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8006:56:39"
            },
            "returnParameters": {
              "id": 11826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8092:0:39"
            },
            "scope": 12050,
            "src": "7989:1588:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2988
            ],
            "body": {
              "id": 12000,
              "nodeType": "Block",
              "src": "9867:152:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11987,
                          "name": "datatoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11978,
                          "src": "9898:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9919:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9911:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11988,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9911:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9911:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9898:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9935:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9877:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9877:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11995,
                  "nodeType": "ExpressionStatement",
                  "src": "9877:100:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11997,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11978,
                        "src": "10002:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11996,
                      "name": "_ownerWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12049,
                      "src": "9987:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9987:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11999,
                  "nodeType": "ExpressionStatement",
                  "src": "9987:25:39"
                }
              ]
            },
            "documentation": {
              "id": 11976,
              "nodeType": "StructuredDocumentation",
              "src": "9583:183:39",
              "text": " @dev ownerWithdraw\n      Withdraw all datatokens in this dispenser balance to ERC20.getPaymentCollector()\n @param datatoken refers to datatoken address."
            },
            "functionSelector": "f9bfaa7d",
            "id": 12001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11981,
                    "name": "datatoken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11978,
                    "src": "9843:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11982,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11980,
                  "name": "onlyOwnerAndTemplate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11502,
                  "src": "9822:20:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "9822:31:39"
              },
              {
                "id": 11984,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11983,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "9854:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "9854:12:39"
              }
            ],
            "name": "ownerWithdraw",
            "nameLocation": "9780:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11978,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "9802:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 12001,
                  "src": "9794:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9793:19:39"
            },
            "returnParameters": {
              "id": 11985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9867:0:39"
            },
            "scope": 12050,
            "src": "9771:248:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12048,
              "nodeType": "Block",
              "src": "10076:383:39",
              "statements": [
                {
                  "assignments": [
                    12008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12008,
                      "mutability": "mutable",
                      "name": "tokenInstance",
                      "nameLocation": "10101:13:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 12048,
                      "src": "10086:28:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Template_$3402",
                        "typeString": "contract IERC20Template"
                      },
                      "typeName": {
                        "id": 12007,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12006,
                          "name": "IERC20Template",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3402,
                          "src": "10086:14:39"
                        },
                        "referencedDeclaration": 3402,
                        "src": "10086:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12012,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12010,
                        "name": "datatoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12003,
                        "src": "10132:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12009,
                      "name": "IERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "10117:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Template_$3402_$",
                        "typeString": "type(contract IERC20Template)"
                      }
                    },
                    "id": 12011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10117:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Template_$3402",
                      "typeString": "contract IERC20Template"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10086:56:39"
                },
                {
                  "assignments": [
                    12014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12014,
                      "mutability": "mutable",
                      "name": "destination",
                      "nameLocation": "10160:11:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 12048,
                      "src": "10152:19:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12013,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10152:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12018,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12015,
                        "name": "tokenInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12008,
                        "src": "10174:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "id": 12016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPaymentCollector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3401,
                      "src": "10174:33:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 12017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10174:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10152:57:39"
                },
                {
                  "assignments": [
                    12020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12020,
                      "mutability": "mutable",
                      "name": "ourBalance",
                      "nameLocation": "10227:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 12048,
                      "src": "10219:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10219:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12028,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12025,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10272:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dispenser_$12050",
                              "typeString": "contract Dispenser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dispenser_$12050",
                              "typeString": "contract Dispenser"
                            }
                          ],
                          "id": 12024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10264:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10264:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10264:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12021,
                        "name": "tokenInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12008,
                        "src": "10240:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$3402",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "id": 12022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3167,
                      "src": "10240:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10240:38:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10219:59:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12029,
                      "name": "ourBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12020,
                      "src": "10291:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10302:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10291:12:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12047,
                  "nodeType": "IfStatement",
                  "src": "10288:165:39",
                  "trueBody": {
                    "id": 12046,
                    "nodeType": "Block",
                    "src": "10304:149:39",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 12033,
                              "name": "datatoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12003,
                              "src": "10339:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12034,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12014,
                              "src": "10350:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12035,
                              "name": "ourBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12020,
                              "src": "10363:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 12032,
                            "name": "OwnerWithdrawed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11397,
                            "src": "10323:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 12036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10323:51:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12037,
                        "nodeType": "EmitStatement",
                        "src": "10318:56:39"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12042,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12014,
                              "src": "10419:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12043,
                              "name": "ourBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12020,
                              "src": "10431:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12039,
                                  "name": "datatoken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12003,
                                  "src": "10395:9:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12038,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "10388:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 12040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10388:17:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3084",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25633,
                            "src": "10388:30:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 12044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10388:54:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12045,
                        "nodeType": "ExpressionStatement",
                        "src": "10388:54:39"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 12049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ownerWithdraw",
            "nameLocation": "10034:14:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12003,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "10057:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 12049,
                  "src": "10049:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10049:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10048:19:39"
            },
            "returnParameters": {
              "id": 12005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10076:0:39"
            },
            "scope": 12050,
            "src": "10025:434:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 12051,
        "src": "574:9887:39",
        "usedErrors": []
      }
    ],
    "src": "0:10461:39"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051611b68380380611b6883398101604081905261002f916100b3565b60016000556001600160a01b03811661008e5760405162461bcd60e51b815260206004820152601f60248201527f44697370656e7365723a2057726f6e6720526f75746572206164647265737300604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556100e3565b6000602082840312156100c557600080fd5b81516001600160a01b03811681146100dc57600080fd5b9392505050565b611a76806100f26000396000f3fe6080604052600436106100915760003560e01c80635d1ca631116100595780635d1ca63114610148578063645b8b1b14610164578063938d71d0146101c7578063f887ea40146101e7578063f9bfaa7d1461020757600080fd5b80631d746d831461009657806324ce2917146100ab5780633398086a146100cb5780633ea053eb1461010857806345d6646b14610128575b600080fd5b6100a96100a43660046117a5565b610227565b005b3480156100b757600080fd5b506100a96100c63660046117e7565b6107a5565b3480156100d757600080fd5b506100eb6100e6366004611846565b6109d8565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011457600080fd5b506100a961012336600461185f565b610a02565b34801561013457600080fd5b506100a961014336600461187c565b610be1565b34801561015457600080fd5b50604051600181526020016100ff565b34801561017057600080fd5b5061018461017f36600461185f565b610dd1565b6040805197151588526001600160a01b039687166020890152941515948701949094526060860192909252608085015260a08401521660c082015260e0016100ff565b3480156101d357600080fd5b506100a96101e23660046118b5565b610f3a565b3480156101f357600080fd5b506001546100eb906001600160a01b031681565b34801561021357600080fd5b506100a961022236600461185f565b61116c565b6002600054141561027f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556001600160a01b0383166102aa5760405162461bcd60e51b8152600401610276906118ea565b6001600160a01b03831660009081526002602052604090205460ff166103095760405162461bcd60e51b815260206004820152601460248201527344697370656e736572206e6f742061637469766560601b6044820152606401610276565b6000821161034f5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081e995c9bc8185b5bdd5b9d606a1b6044820152606401610276565b6001600160a01b0383166000908152600260205260409020600101548211156103ac5760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b6044820152606401610276565b6001600160a01b03838116600090815260026020526040902060030154161561044d576001600160a01b0383811660009081526002602052604090206003015416331461044d5760405162461bcd60e51b815260206004820152602960248201527f546869732061646472657373206973206e6f7420616c6c6f77656420746f2072604482015268195c5d595cdd08111560ba1b6064820152608401610276565b6040516370a0823160e01b81526001600160a01b03828116600483015284916000918316906370a0823190602401602060405180830381865afa158015610498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bc9190611921565b6001600160a01b03861660009081526002602081905260409091200154909150811061052a5760405162461bcd60e51b815260206004820152601760248201527f43616c6c65722062616c616e636520746f6f20686967680000000000000000006044820152606401610276565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190611921565b9050848110801561060957506040516355138f0d60e11b81523060048201526001600160a01b0384169063aa271e1a90602401602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610609919061193a565b156106f1576001600160a01b0383166340c10f1930610628848961195c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201526001600160a01b03861692506370a082319150602401602060405180830381865afa1580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190611921565b90505b848110156107375760405162461bcd60e51b81526020600482015260136024820152724e6f7420656e6f75676820726573657276657360681b6044820152606401610276565b836001600160a01b0316866001600160a01b03167f63e223ff524bd93d4cbff98ef34405b39f63ded87f5a8d85e39ccda966f135438760405161077c91815260200190565b60405180910390a36107986001600160a01b03871685876113a4565b5050600160005550505050565b6001546001600160a01b031633146107f85760405162461bcd60e51b81526020600482015260166024820152752234b9b832b739b2b91d1037b7363c903937baba32b960511b6044820152606401610276565b6001600160a01b03851661081e5760405162461bcd60e51b8152600401610276906118ea565b6001600160a01b03858116600090815260026020526040902054610100900416158061086b57506001600160a01b0385811660009081526002602052604090205461010090048116908316145b6108b75760405162461bcd60e51b815260206004820152601960248201527f44617461746f6b656e20616c72656164792063726561746564000000000000006044820152606401610276565b6001600160a01b038581166000818152600260208181526040808420805489881661010081026001600160a81b031990921691909117600190811783558083018d90559482018b905560039182018054988a166001600160a01b0319998a16811790915582549586018355919095527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90930180549096168517909555845189815290810188905293840152917f7d0aa581e6eb87e15f58588ff20c39ff6622fc796ec9bb664df6ed3eb02442c99060600160405180910390a3806001600160a01b0316856001600160a01b03167fac5c7317d52e88de62aff4ba6869a4882a4556557b761158934d2fd32a8b2ca560405160405180910390a35050505050565b600381815481106109e857600080fd5b6000918252602090912001546001600160a01b0316905081565b806001600160a01b038116610a295760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a93919061193a565b80610b7a5750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190611981565b6001600160a01b0316145b610b965760405162461bcd60e51b81526004016102769061199e565b6001600160a01b038316600081815260026020526040808220805460ff19169055517f393f01061139648745ea000bb047bbe1785bd3a19d3a9c90f6747e1d2357d2b89190a2505050565b816001600160a01b038116610c085760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c72919061193a565b80610d595750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e9190611981565b6001600160a01b0316145b610d755760405162461bcd60e51b81526004016102769061199e565b6001600160a01b0384811660008181526002602052604080822060030180546001600160a01b0319169488169485179055517fac5c7317d52e88de62aff4ba6869a4882a4556557b761158934d2fd32a8b2ca59190a350505050565b60008080808080806001600160a01b038816610dff5760405162461bcd60e51b8152600401610276906118ea565b6001600160a01b0388811660008181526002602081905260409182902080546001820154919092015492516370a0823160e01b815230600482015260ff83169c506101009092049094169950929650945089916370a0823190602401602060405180830381865afa158015610e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9c9190611921565b6040516355138f0d60e11b81523060048201529093506001600160a01b0382169063aa271e1a90602401602060405180830381865afa158015610ee3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f07919061193a565b6001600160a01b03998a16600090815260026020526040902060030154989a979990989597949650929490921692915050565b826001600160a01b038116610f615760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb919061193a565b806110b25750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa158015611018573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103c9190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a79190611981565b6001600160a01b0316145b6110ce5760405162461bcd60e51b81526004016102769061199e565b6001600160a01b0385166000818152600260208190526040808320805460ff1916600190811782558181018a9055920187905560038054928301815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b03191684179055517fe9372084cb52c5392afee4b9d79d131e04b1e65676088d50a8f39fffb16a87459190a25050505050565b806001600160a01b0381166111935760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa1580156111d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fd919061193a565b806112e45750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e9190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa1580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190611981565b6001600160a01b0316145b806112f757506001600160a01b03821633145b6113135760405162461bcd60e51b81526004016102769061199e565b600260005414156113665760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610276565b60026000556001600160a01b0383166113915760405162461bcd60e51b8152600401610276906118ea565b61139a836113fb565b5050600160005550565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113f6908490611541565b505050565b60008190506000816001600160a01b031663e487c2e86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114649190611981565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190611921565b9050801561153b57816001600160a01b0316846001600160a01b03167f03185212530fcdce6b38fbf62ed27ab29b1b047f59b76b17401388a70a95f41b8360405161151f91815260200190565b60405180910390a361153b6001600160a01b03851683836113a4565b50505050565b6000611596826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116139092919063ffffffff16565b8051909150156113f657808060200190518101906115b4919061193a565b6113f65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610276565b6060611622848460008561162c565b90505b9392505050565b60608247101561168d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610276565b843b6116db5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610276565b600080866001600160a01b031685876040516116f791906119f1565b60006040518083038185875af1925050503d8060008114611734576040519150601f19603f3d011682016040523d82523d6000602084013e611739565b606091505b5091509150611749828286611754565b979650505050505050565b60608315611763575081611625565b8251156117735782518084602001fd5b8160405162461bcd60e51b81526004016102769190611a0d565b6001600160a01b03811681146117a257600080fd5b50565b6000806000606084860312156117ba57600080fd5b83356117c58161178d565b92506020840135915060408401356117dc8161178d565b809150509250925092565b600080600080600060a086880312156117ff57600080fd5b853561180a8161178d565b9450602086013593506040860135925060608601356118288161178d565b915060808601356118388161178d565b809150509295509295909350565b60006020828403121561185857600080fd5b5035919050565b60006020828403121561187157600080fd5b81356116258161178d565b6000806040838503121561188f57600080fd5b823561189a8161178d565b915060208301356118aa8161178d565b809150509250929050565b6000806000606084860312156118ca57600080fd5b83356118d58161178d565b95602085013595506040909401359392505050565b6020808252601e908201527f496e76616c696420746f6b656e20636f6e747261637420616464726573730000604082015260600190565b60006020828403121561193357600080fd5b5051919050565b60006020828403121561194c57600080fd5b8151801515811461162557600080fd5b60008282101561197c57634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561199357600080fd5b81516116258161178d565b6020808252600d908201526c24b73b30b634b21037bbb732b960991b604082015260600190565b60005b838110156119e05781810151838201526020016119c8565b8381111561153b5750506000910152565b60008251611a038184602087016119c5565b9190910192915050565b6020815260008251806020840152611a2c8160408501602087016119c5565b601f01601f1916919091016040019291505056fea264697066735822122009bd0b3e04c01144e62725e69286163444f0e8395824f39aaeccb9b0845d822064736f6c634300080c0033",
  "bytecodeSha1": "2a9401f7fa0488b967952e0af5704016d77bca31",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Dispenser",
  "coverageMap": {
    "branches": {
      "11": {},
      "2": {
        "Dispenser.ownerWithdraw": {
          "76": [
            2259,
            2278,
            true
          ]
        }
      },
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "39": {
        "Dispenser._ownerWithdraw": {
          "72": [
            10291,
            10303,
            false
          ]
        },
        "Dispenser.activate": {
          "65": [
            2347,
            2370,
            true
          ],
          "66": [
            2512,
            2542,
            true
          ],
          "67": [
            2559,
            2622,
            true
          ]
        },
        "Dispenser.create": {
          "61": [
            5530,
            5553,
            true
          ],
          "62": [
            5640,
            5681,
            true
          ],
          "63": [
            5685,
            5721,
            true
          ]
        },
        "Dispenser.dispense": {
          "51": [
            8123,
            8146,
            true
          ],
          "52": [
            8233,
            8261,
            true
          ],
          "53": [
            8338,
            8348,
            true
          ],
          "54": [
            8424,
            8465,
            true
          ],
          "55": [
            8519,
            8569,
            false
          ],
          "56": [
            8609,
            8659,
            true
          ],
          "57": [
            8920,
            8966,
            true
          ],
          "58": [
            9097,
            9114,
            false
          ],
          "59": [
            9118,
            9155,
            false
          ],
          "60": [
            9385,
            9403,
            true
          ]
        },
        "Dispenser.ownerWithdraw": {
          "68": [
            2829,
            2852,
            true
          ],
          "69": [
            2994,
            3024,
            true
          ],
          "70": [
            3041,
            3104,
            true
          ],
          "71": [
            9898,
            9921,
            true
          ]
        },
        "Dispenser.status": {
          "64": [
            4497,
            4520,
            true
          ]
        }
      },
      "47": {
        "Address._verifyCallResult": {
          "74": [
            7249,
            7256,
            false
          ],
          "75": [
            7390,
            7411,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "73": [
            4782,
            4812,
            true
          ]
        }
      },
      "62": {
        "SafeERC20._callOptionalReturn": {
          "77": [
            3674,
            3695,
            false
          ],
          "78": [
            3758,
            3788,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "2": {},
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "39": {
        "Dispenser._ownerWithdraw": {
          "42": [
            10318,
            10374
          ],
          "43": [
            10388,
            10442
          ]
        },
        "Dispenser.activate": {
          "34": [
            6596,
            6631
          ],
          "35": [
            6641,
            6684
          ],
          "36": [
            6694,
            6739
          ],
          "37": [
            6749,
            6779
          ],
          "38": [
            6789,
            6823
          ]
        },
        "Dispenser.create": {
          "12": [
            5509,
            5609
          ],
          "13": [
            5619,
            5772
          ],
          "14": [
            5782,
            5817
          ],
          "15": [
            5827,
            5862
          ],
          "16": [
            5872,
            5915
          ],
          "17": [
            5925,
            5970
          ],
          "18": [
            5980,
            6033
          ],
          "19": [
            6043,
            6073
          ],
          "20": [
            6083,
            6161
          ],
          "21": [
            6171,
            6233
          ]
        },
        "Dispenser.deactivate": {
          "22": [
            7051,
            7087
          ],
          "23": [
            7097,
            7133
          ]
        },
        "Dispenser.dispense": {
          "1": [
            8102,
            8202
          ],
          "2": [
            8212,
            8307
          ],
          "3": [
            8317,
            8393
          ],
          "4": [
            8403,
            8506
          ],
          "5": [
            8584,
            8734
          ],
          "6": [
            8899,
            9015
          ],
          "7": [
            9226,
            9279
          ],
          "8": [
            9293,
            9344
          ],
          "9": [
            9364,
            9448
          ],
          "10": [
            9458,
            9510
          ],
          "11": [
            9520,
            9570
          ]
        },
        "Dispenser.getId": {
          "0": [
            3615,
            3623
          ]
        },
        "Dispenser.ownerWithdraw": {
          "39": [
            9877,
            9977
          ],
          "40": [
            9987,
            10012
          ]
        },
        "Dispenser.setAllowedSwapper": {
          "24": [
            7460,
            7515
          ],
          "25": [
            7525,
            7590
          ]
        },
        "Dispenser.status": {
          "26": [
            4476,
            4576
          ],
          "27": [
            4586,
            4623
          ],
          "28": [
            4678,
            4721
          ],
          "29": [
            4731,
            4776
          ],
          "30": [
            4852,
            4900
          ],
          "31": [
            4633,
            4668
          ],
          "32": [
            4910,
            4958
          ],
          "33": [
            4968,
            5021
          ]
        }
      },
      "47": {
        "Address._verifyCallResult": {
          "49": [
            7272,
            7289
          ],
          "50": [
            7780,
            7800
          ]
        },
        "Address.functionCall": {
          "45": [
            3723,
            3782
          ]
        },
        "Address.functionCallWithValue": {
          "46": [
            4774,
            4855
          ],
          "47": [
            4865,
            4925
          ],
          "48": [
            5080,
            5139
          ]
        }
      },
      "62": {
        "SafeERC20._callOptionalReturn": {
          "44": [
            3750,
            3835
          ]
        },
        "SafeERC20.safeTransfer": {
          "41": [
            752,
            838
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "IDispenser",
    "IERC20",
    "IERC20Template",
    "IERC721Template",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ReentrancyGuard",
    "SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100915760003560e01c80635d1ca631116100595780635d1ca63114610148578063645b8b1b14610164578063938d71d0146101c7578063f887ea40146101e7578063f9bfaa7d1461020757600080fd5b80631d746d831461009657806324ce2917146100ab5780633398086a146100cb5780633ea053eb1461010857806345d6646b14610128575b600080fd5b6100a96100a43660046117a5565b610227565b005b3480156100b757600080fd5b506100a96100c63660046117e7565b6107a5565b3480156100d757600080fd5b506100eb6100e6366004611846565b6109d8565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011457600080fd5b506100a961012336600461185f565b610a02565b34801561013457600080fd5b506100a961014336600461187c565b610be1565b34801561015457600080fd5b50604051600181526020016100ff565b34801561017057600080fd5b5061018461017f36600461185f565b610dd1565b6040805197151588526001600160a01b039687166020890152941515948701949094526060860192909252608085015260a08401521660c082015260e0016100ff565b3480156101d357600080fd5b506100a96101e23660046118b5565b610f3a565b3480156101f357600080fd5b506001546100eb906001600160a01b031681565b34801561021357600080fd5b506100a961022236600461185f565b61116c565b6002600054141561027f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556001600160a01b0383166102aa5760405162461bcd60e51b8152600401610276906118ea565b6001600160a01b03831660009081526002602052604090205460ff166103095760405162461bcd60e51b815260206004820152601460248201527344697370656e736572206e6f742061637469766560601b6044820152606401610276565b6000821161034f5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081e995c9bc8185b5bdd5b9d606a1b6044820152606401610276565b6001600160a01b0383166000908152600260205260409020600101548211156103ac5760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b6044820152606401610276565b6001600160a01b03838116600090815260026020526040902060030154161561044d576001600160a01b0383811660009081526002602052604090206003015416331461044d5760405162461bcd60e51b815260206004820152602960248201527f546869732061646472657373206973206e6f7420616c6c6f77656420746f2072604482015268195c5d595cdd08111560ba1b6064820152608401610276565b6040516370a0823160e01b81526001600160a01b03828116600483015284916000918316906370a0823190602401602060405180830381865afa158015610498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bc9190611921565b6001600160a01b03861660009081526002602081905260409091200154909150811061052a5760405162461bcd60e51b815260206004820152601760248201527f43616c6c65722062616c616e636520746f6f20686967680000000000000000006044820152606401610276565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190611921565b9050848110801561060957506040516355138f0d60e11b81523060048201526001600160a01b0384169063aa271e1a90602401602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610609919061193a565b156106f1576001600160a01b0383166340c10f1930610628848961195c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201526001600160a01b03861692506370a082319150602401602060405180830381865afa1580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190611921565b90505b848110156107375760405162461bcd60e51b81526020600482015260136024820152724e6f7420656e6f75676820726573657276657360681b6044820152606401610276565b836001600160a01b0316866001600160a01b03167f63e223ff524bd93d4cbff98ef34405b39f63ded87f5a8d85e39ccda966f135438760405161077c91815260200190565b60405180910390a36107986001600160a01b03871685876113a4565b5050600160005550505050565b6001546001600160a01b031633146107f85760405162461bcd60e51b81526020600482015260166024820152752234b9b832b739b2b91d1037b7363c903937baba32b960511b6044820152606401610276565b6001600160a01b03851661081e5760405162461bcd60e51b8152600401610276906118ea565b6001600160a01b03858116600090815260026020526040902054610100900416158061086b57506001600160a01b0385811660009081526002602052604090205461010090048116908316145b6108b75760405162461bcd60e51b815260206004820152601960248201527f44617461746f6b656e20616c72656164792063726561746564000000000000006044820152606401610276565b6001600160a01b038581166000818152600260208181526040808420805489881661010081026001600160a81b031990921691909117600190811783558083018d90559482018b905560039182018054988a166001600160a01b0319998a16811790915582549586018355919095527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90930180549096168517909555845189815290810188905293840152917f7d0aa581e6eb87e15f58588ff20c39ff6622fc796ec9bb664df6ed3eb02442c99060600160405180910390a3806001600160a01b0316856001600160a01b03167fac5c7317d52e88de62aff4ba6869a4882a4556557b761158934d2fd32a8b2ca560405160405180910390a35050505050565b600381815481106109e857600080fd5b6000918252602090912001546001600160a01b0316905081565b806001600160a01b038116610a295760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a93919061193a565b80610b7a5750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190611981565b6001600160a01b0316145b610b965760405162461bcd60e51b81526004016102769061199e565b6001600160a01b038316600081815260026020526040808220805460ff19169055517f393f01061139648745ea000bb047bbe1785bd3a19d3a9c90f6747e1d2357d2b89190a2505050565b816001600160a01b038116610c085760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c72919061193a565b80610d595750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e9190611981565b6001600160a01b0316145b610d755760405162461bcd60e51b81526004016102769061199e565b6001600160a01b0384811660008181526002602052604080822060030180546001600160a01b0319169488169485179055517fac5c7317d52e88de62aff4ba6869a4882a4556557b761158934d2fd32a8b2ca59190a350505050565b60008080808080806001600160a01b038816610dff5760405162461bcd60e51b8152600401610276906118ea565b6001600160a01b0388811660008181526002602081905260409182902080546001820154919092015492516370a0823160e01b815230600482015260ff83169c506101009092049094169950929650945089916370a0823190602401602060405180830381865afa158015610e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9c9190611921565b6040516355138f0d60e11b81523060048201529093506001600160a01b0382169063aa271e1a90602401602060405180830381865afa158015610ee3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f07919061193a565b6001600160a01b03998a16600090815260026020526040902060030154989a979990989597949650929490921692915050565b826001600160a01b038116610f615760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb919061193a565b806110b25750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa158015611018573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103c9190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a79190611981565b6001600160a01b0316145b6110ce5760405162461bcd60e51b81526004016102769061199e565b6001600160a01b0385166000818152600260208190526040808320805460ff1916600190811782558181018a9055920187905560038054928301815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b03191684179055517fe9372084cb52c5392afee4b9d79d131e04b1e65676088d50a8f39fffb16a87459190a25050505050565b806001600160a01b0381166111935760405162461bcd60e51b8152600401610276906118ea565b6040516396fb3eaf60e01b815233600482015281906001600160a01b038216906396fb3eaf90602401602060405180830381865afa1580156111d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fd919061193a565b806112e45750336001600160a01b0316816001600160a01b0316627ffb786040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e9190611981565b6040516331a9108f60e11b8152600160048201526001600160a01b039190911690636352211e90602401602060405180830381865afa1580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190611981565b6001600160a01b0316145b806112f757506001600160a01b03821633145b6113135760405162461bcd60e51b81526004016102769061199e565b600260005414156113665760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610276565b60026000556001600160a01b0383166113915760405162461bcd60e51b8152600401610276906118ea565b61139a836113fb565b5050600160005550565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113f6908490611541565b505050565b60008190506000816001600160a01b031663e487c2e86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114649190611981565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190611921565b9050801561153b57816001600160a01b0316846001600160a01b03167f03185212530fcdce6b38fbf62ed27ab29b1b047f59b76b17401388a70a95f41b8360405161151f91815260200190565b60405180910390a361153b6001600160a01b03851683836113a4565b50505050565b6000611596826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116139092919063ffffffff16565b8051909150156113f657808060200190518101906115b4919061193a565b6113f65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610276565b6060611622848460008561162c565b90505b9392505050565b60608247101561168d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610276565b843b6116db5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610276565b600080866001600160a01b031685876040516116f791906119f1565b60006040518083038185875af1925050503d8060008114611734576040519150601f19603f3d011682016040523d82523d6000602084013e611739565b606091505b5091509150611749828286611754565b979650505050505050565b60608315611763575081611625565b8251156117735782518084602001fd5b8160405162461bcd60e51b81526004016102769190611a0d565b6001600160a01b03811681146117a257600080fd5b50565b6000806000606084860312156117ba57600080fd5b83356117c58161178d565b92506020840135915060408401356117dc8161178d565b809150509250925092565b600080600080600060a086880312156117ff57600080fd5b853561180a8161178d565b9450602086013593506040860135925060608601356118288161178d565b915060808601356118388161178d565b809150509295509295909350565b60006020828403121561185857600080fd5b5035919050565b60006020828403121561187157600080fd5b81356116258161178d565b6000806040838503121561188f57600080fd5b823561189a8161178d565b915060208301356118aa8161178d565b809150509250929050565b6000806000606084860312156118ca57600080fd5b83356118d58161178d565b95602085013595506040909401359392505050565b6020808252601e908201527f496e76616c696420746f6b656e20636f6e747261637420616464726573730000604082015260600190565b60006020828403121561193357600080fd5b5051919050565b60006020828403121561194c57600080fd5b8151801515811461162557600080fd5b60008282101561197c57634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561199357600080fd5b81516116258161178d565b6020808252600d908201526c24b73b30b634b21037bbb732b960991b604082015260600190565b60005b838110156119e05781810151838201526020016119c8565b8381111561153b5750506000910152565b60008251611a038184602087016119c5565b9190910192915050565b6020815260008251806020840152611a2c8160408501602087016119c5565b601f01601f1916919091016040019291505056fea264697066735822122009bd0b3e04c01144e62725e69286163444f0e8395824f39aaeccb9b0845d822064736f6c634300080c0033",
  "deployedSourceMap": "574:9887:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7989:1588;;;;;;:::i;:::-;;:::i;:::-;;5360:880;;;;;;;;;;-1:-1:-1;5360:880:39;;;;;:::i;:::-;;:::i;1121:31::-;;;;;;;;;;-1:-1:-1;1121:31:39;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1632:32:75;;;1614:51;;1602:2;1587:18;1121:31:39;;;;;;;;6973:167;;;;;;;;;;-1:-1:-1;6973:167:39;;;;;:::i;:::-;;:::i;7348:249::-;;;;;;;;;;-1:-1:-1;7348:249:39;;;;;:::i;:::-;;:::i;3560:70::-;;;;;;;;;;-1:-1:-1;3560:70:39;;3622:1;2463:36:75;;2451:2;2436:18;3560:70:39;2321:184:75;4276:752:39;;;;;;;;;;-1:-1:-1;4276:752:39;;;;;:::i;:::-;;:::i;:::-;;;;2838:14:75;;2831:22;2813:41;;-1:-1:-1;;;;;2928:15:75;;;2923:2;2908:18;;2901:43;2987:14;;2980:22;2960:18;;;2953:50;;;;3034:2;3019:18;;3012:34;;;;3077:3;3062:19;;3055:35;2881:3;3106:19;;3099:35;3171:15;3165:3;3150:19;;3143:44;2800:3;2785:19;4276:752:39;2510:683:75;6474:356:39;;;;;;;;;;-1:-1:-1;6474:356:39;;;;;:::i;:::-;;:::i;693:21::-;;;;;;;;;;-1:-1:-1;693:21:39;;;;-1:-1:-1;;;;;693:21:39;;;9771:248;;;;;;;;;;-1:-1:-1;9771:248:39;;;;;:::i;:::-;;:::i;7989:1588::-;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;3788:2:75;2251:63:2;;;3770:21:75;3827:2;3807:18;;;3800:30;3866:33;3846:18;;;3839:61;3917:18;;2251:63:2;;;;;;;;;1680:1;2389:7;:18;-1:-1:-1;;;;;8123:23:39;::::1;8102:100;;;;-1:-1:-1::0;;;8102:100:39::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8233:21:39;::::1;;::::0;;;:10:::1;:21;::::0;;;;:28;::::1;;8212:95;;;::::0;-1:-1:-1;;;8212:95:39;;4507:2:75;8212:95:39::1;::::0;::::1;4489:21:75::0;4546:2;4526:18;;;4519:30;-1:-1:-1;;;4565:18:75;;;4558:50;4625:18;;8212:95:39::1;4305:344:75::0;8212:95:39::1;8347:1;8338:6;:10;8317:76;;;::::0;-1:-1:-1;;;8317:76:39;;4856:2:75;8317:76:39::1;::::0;::::1;4838:21:75::0;4895:2;4875:18;;;4868:30;-1:-1:-1;;;4914:18:75;;;4907:49;4973:18;;8317:76:39::1;4654:343:75::0;8317:76:39::1;-1:-1:-1::0;;;;;8424:21:39;::::1;;::::0;;;:10:::1;:21;::::0;;;;:31:::1;;::::0;:41;-1:-1:-1;8424:41:39::1;8403:103;;;::::0;-1:-1:-1;;;8403:103:39;;5204:2:75;8403:103:39::1;::::0;::::1;5186:21:75::0;5243:2;5223:18;;;5216:30;-1:-1:-1;;;5262:18:75;;;5255:45;5317:18;;8403:103:39::1;5002:339:75::0;8403:103:39::1;-1:-1:-1::0;;;;;8519:21:39;;::::1;8567:1;8519:21:::0;;;:10:::1;:21;::::0;;;;:36:::1;;::::0;::::1;:50:::0;8516:229:::1;;-1:-1:-1::0;;;;;8609:21:39;;::::1;;::::0;;;:10:::1;:21;::::0;;;;:36:::1;;::::0;::::1;8649:10;8609:50;8584:150;;;::::0;-1:-1:-1;;;8584:150:39;;5548:2:75;8584:150:39::1;::::0;::::1;5530:21:75::0;5587:2;5567:18;;;5560:30;5626:34;5606:18;;;5599:62;-1:-1:-1;;;5677:18:75;;;5670:39;5726:19;;8584:150:39::1;5346:405:75::0;8584:150:39::1;8853:36;::::0;-1:-1:-1;;;8853:36:39;;-1:-1:-1;;;;;1632:32:75;;;8853:36:39::1;::::0;::::1;1614:51:75::0;8809:9:39;;8763:28:::1;::::0;8853:23;::::1;::::0;::::1;::::0;1587:18:75;;8853:36:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8934:21:39;::::1;;::::0;;;:10:::1;:21;::::0;;;;;;;:32:::1;::::0;8829:60;;-1:-1:-1;8920:46:39;::::1;8899:116;;;::::0;-1:-1:-1;;;8899:116:39;;6147:2:75;8899:116:39::1;::::0;::::1;6129:21:75::0;6186:2;6166:18;;;6159:30;6225:25;6205:18;;;6198:53;6268:18;;8899:116:39::1;5945:347:75::0;8899:116:39::1;9046:38;::::0;-1:-1:-1;;;9046:38:39;;9078:4:::1;9046:38;::::0;::::1;1614:51:75::0;9025:18:39::1;::::0;-1:-1:-1;;;;;9046:23:39;::::1;::::0;::::1;::::0;1587:18:75;;9046:38:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9025:59;;9108:6;9097:10;:17;:58;;;;-1:-1:-1::0;9118:37:39::1;::::0;-1:-1:-1;;;9118:37:39;;9149:4:::1;9118:37;::::0;::::1;1614:51:75::0;-1:-1:-1;;;;;9118:22:39;::::1;::::0;::::1;::::0;1587:18:75;;9118:37:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9094:261;;;-1:-1:-1::0;;;;;9226:18:39;::::1;;9253:4;9259:19;9268:10:::0;9259:6;:19:::1;:::i;:::-;9226:53;::::0;-1:-1:-1;;;;;;9226:53:39::1;::::0;;;;;;-1:-1:-1;;;;;6998:32:75;;;9226:53:39::1;::::0;::::1;6980:51:75::0;7047:18;;;7040:34;6953:18;;9226:53:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9306:38:39::1;::::0;-1:-1:-1;;;9306:38:39;;9338:4:::1;9306:38;::::0;::::1;1614:51:75::0;-1:-1:-1;;;;;9306:23:39;::::1;::::0;-1:-1:-1;9306:23:39::1;::::0;-1:-1:-1;1587:18:75;;9306:38:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9293:51;;9094:261;9397:6;9385:10;:18;;9364:84;;;::::0;-1:-1:-1;;;9364:84:39;;7287:2:75;9364:84:39::1;::::0;::::1;7269:21:75::0;7326:2;7306:18;;;7299:30;-1:-1:-1;;;7345:18:75;;;7338:49;7404:18;;9364:84:39::1;7085:343:75::0;9364:84:39::1;9490:11;-1:-1:-1::0;;;;;9463:47:39::1;9479:9;-1:-1:-1::0;;;;;9463:47:39::1;;9503:6;9463:47;;;;7579:25:75::0;;7567:2;7552:18;;7433:177;9463:47:39::1;;;;;;;;9520:50;-1:-1:-1::0;;;;;9520:30:39;::::1;9551:11:::0;9563:6;9520:30:::1;:50::i;:::-;-1:-1:-1::0;;1637:1:2;2562:7;:22;-1:-1:-1;;;;7989:1588:39:o;5360:880::-;2170:6;;-1:-1:-1;;;;;2170:6:39;2156:10;:20;2148:55;;;;-1:-1:-1;;;2148:55:39;;7817:2:75;2148:55:39;;;7799:21:75;7856:2;7836:18;;;7829:30;-1:-1:-1;;;7875:18:75;;;7868:52;7937:18;;2148:55:39;7615:346:75;2148:55:39;-1:-1:-1;;;;;5530:23:39;::::1;5509:100;;;;-1:-1:-1::0;;;5509:100:39::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5640:21:39;;::::1;5679:1;5640:21:::0;;;:10:::1;:21;::::0;;;;:27;::::1;::::0;::::1;;:41:::0;;:81:::1;;-1:-1:-1::0;;;;;;5685:21:39;;::::1;;::::0;;;:10:::1;:21;::::0;;;;:27;::::1;::::0;::::1;::::0;::::1;:36:::0;;::::1;;5640:81;5619:153;;;::::0;-1:-1:-1;;;5619:153:39;;8168:2:75;5619:153:39::1;::::0;::::1;8150:21:75::0;8207:2;8187:18;;;8180:30;8246:27;8226:18;;;8219:55;8291:18;;5619:153:39::1;7966:349:75::0;5619:153:39::1;-1:-1:-1::0;;;;;5782:21:39;;::::1;;::::0;;;:10:::1;:21;::::0;;;;;;;:35;;5827;;::::1;5782;5827::::0;::::1;-1:-1:-1::0;;;;;;5827:35:39;;;;;;;5813:4:::1;5827:35:::0;;;;;5872:31;;::::1;:43:::0;;;5925:32;;::::1;:45:::0;;;5980:36:::1;::::0;;::::1;:53:::0;;;;::::1;-1:-1:-1::0;;;;;;5980:53:39;;::::1;::::0;::::1;::::0;;;6043:30;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;6088:73;;8522:25:75;;;8563:18;;;8556:34;;;8606:18;;;8599:60;5827:35:39;6088:73:::1;::::0;8510:2:75;8495:18;6088:73:39::1;;;;;;;6218:14;-1:-1:-1::0;;;;;6176:57:39::1;6207:9;-1:-1:-1::0;;;;;6176:57:39::1;;;;;;;;;;;5360:880:::0;;;;;:::o;1121:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1121:31:39;;-1:-1:-1;1121:31:39;:::o;6973:167::-;7031:9;-1:-1:-1;;;;;2347:23:39;;2326:100;;;;-1:-1:-1;;;2326:100:39;;;;;;;:::i;:::-;2512:30;;-1:-1:-1;;;2512:30:39;;2531:10;2512:30;;;1614:51:75;2471:9:39;;-1:-1:-1;;;;;2512:18:39;;;;;1587::75;;2512:30:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;;;2612:10;-1:-1:-1;;;;;2559:63:39;2575:2;-1:-1:-1;;;;;2575:19:39;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2559:49;;-1:-1:-1;;;2559:49:39;;2606:1;2559:49;;;7579:25:75;-1:-1:-1;;;;;2559:46:39;;;;;;;7552:18:75;;2559:49:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2559:63:39;;2512:110;2491:183;;;;-1:-1:-1;;;2491:183:39;;;;;;;:::i;:::-;-1:-1:-1;;;;;7051:21:39;::::1;7082:5;7051:21:::0;;;:10:::1;:21;::::0;;;;;:36;;-1:-1:-1;;7051:36:39::1;::::0;;7102:31;::::1;::::0;7082:5;7102:31:::1;2265:427:::0;6973:167;;:::o;7348:249::-;7440:9;-1:-1:-1;;;;;2347:23:39;;2326:100;;;;-1:-1:-1;;;2326:100:39;;;;;;;:::i;:::-;2512:30;;-1:-1:-1;;;2512:30:39;;2531:10;2512:30;;;1614:51:75;2471:9:39;;-1:-1:-1;;;;;2512:18:39;;;;;1587::75;;2512:30:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;;;2612:10;-1:-1:-1;;;;;2559:63:39;2575:2;-1:-1:-1;;;;;2575:19:39;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2559:49;;-1:-1:-1;;;2559:49:39;;2606:1;2559:49;;;7579:25:75;-1:-1:-1;;;;;2559:46:39;;;;;;;7552:18:75;;2559:49:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2559:63:39;;2512:110;2491:183;;;;-1:-1:-1;;;2491:183:39;;;;;;;:::i;:::-;-1:-1:-1;;;;;7460:21:39;;::::1;;::::0;;;:10:::1;:21;::::0;;;;;:36:::1;;:55:::0;;-1:-1:-1;;;;;;7460:55:39::1;::::0;;::::1;::::0;;::::1;::::0;;7530:60;::::1;::::0;7460:21;7530:60:::1;2265:427:::0;7348:249;;;:::o;4276:752::-;4343:11;;;;;;;-1:-1:-1;;;;;4497:23:39;;4476:100;;;;-1:-1:-1;;;4476:100:39;;;;;;;:::i;:::-;-1:-1:-1;;;;;4595:21:39;;;;;;;:10;:21;;;;;;;;;:28;;;4690:31;;;4744:32;;;;;4862:38;;-1:-1:-1;;;4862:38:39;;4894:4;4862:38;;;1614:51:75;4595:28:39;;;;-1:-1:-1;4595:28:39;4641:27;;;;;;;-1:-1:-1;4690:31:39;;-1:-1:-1;4744:32:39;-1:-1:-1;4595:21:39;;4862:23;;1587:18:75;;4862:38:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4921:37;;-1:-1:-1;;;4921:37:39;;4952:4;4921:37;;;1614:51:75;4852:48:39;;-1:-1:-1;;;;;;4921:22:39;;;;;1587:18:75;;4921:37:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4985:21:39;;;;;;;:10;:21;;;;;:36;;;4276:752;;;;4910:48;;4276:752;;;;-1:-1:-1;4276:752:39;;4985:36;;;;4276:752;-1:-1:-1;;4276:752:39:o;6474:356::-;6576:9;-1:-1:-1;;;;;2347:23:39;;2326:100;;;;-1:-1:-1;;;2326:100:39;;;;;;;:::i;:::-;2512:30;;-1:-1:-1;;;2512:30:39;;2531:10;2512:30;;;1614:51:75;2471:9:39;;-1:-1:-1;;;;;2512:18:39;;;;;1587::75;;2512:30:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;;;2612:10;-1:-1:-1;;;;;2559:63:39;2575:2;-1:-1:-1;;;;;2575:19:39;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2559:49;;-1:-1:-1;;;2559:49:39;;2606:1;2559:49;;;7579:25:75;-1:-1:-1;;;;;2559:46:39;;;;;;;7552:18:75;;2559:49:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2559:63:39;;2512:110;2491:183;;;;-1:-1:-1;;;2491:183:39;;;;;;;:::i;:::-;-1:-1:-1;;;;;6596:21:39;::::1;;::::0;;;:10:::1;:21;::::0;;;;;;;:35;;-1:-1:-1;;6596:35:39::1;6627:4;6596:35:::0;;::::1;::::0;;6641:31;;::::1;:43:::0;;;6694:32;::::1;:45:::0;;;6749:14:::1;:30:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;6749:30:39::1;::::0;::::1;::::0;;6794:29;::::1;::::0;6596:21;6794:29:::1;2265:427:::0;6474:356;;;;:::o;9771:248::-;9843:9;-1:-1:-1;;;;;2829:23:39;;2808:100;;;;-1:-1:-1;;;2808:100:39;;;;;;;:::i;:::-;2994:30;;-1:-1:-1;;;2994:30:39;;3013:10;2994:30;;;1614:51:75;2953:9:39;;-1:-1:-1;;;;;2994:18:39;;;;;1587::75;;2994:30:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;;;3094:10;-1:-1:-1;;;;;3041:63:39;3057:2;-1:-1:-1;;;;;3057:19:39;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3041:49;;-1:-1:-1;;;3041:49:39;;3088:1;3041:49;;;7579:25:75;-1:-1:-1;;;;;3041:46:39;;;;;;;7552:18:75;;3041:49:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3041:63:39;;2994:110;:149;;;-1:-1:-1;;;;;;3120:23:39;;3133:10;3120:23;2994:149;2973:222;;;;-1:-1:-1;;;2973:222:39;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;::::0;-1:-1:-1;;;2251:63:2;;3788:2:75;2251:63:2::1;::::0;::::1;3770:21:75::0;3827:2;3807:18;;;3800:30;3866:33;3846:18;;;3839:61;3917:18;;2251:63:2::1;3586:355:75::0;2251:63:2::1;1680:1;2389:7;:18:::0;-1:-1:-1;;;;;9898:23:39;::::2;9877:100;;;;-1:-1:-1::0;;;9877:100:39::2;;;;;;;:::i;:::-;9987:25;10002:9;9987:14;:25::i;:::-;-1:-1:-1::0;;1637:1:2::1;2562:7;:22:::0;-1:-1:-1;9771:248:39:o;640:205:62:-;779:58;;;-1:-1:-1;;;;;6998:32:75;;779:58:62;;;6980:51:75;7047:18;;;;7040:34;;;779:58:62;;;;;;;;;;6953:18:75;;;;779:58:62;;;;;;;;-1:-1:-1;;;;;779:58:62;-1:-1:-1;;;779:58:62;;;752:86;;772:5;;752:19;:86::i;:::-;640:205;;;:::o;10025:434:39:-;10086:28;10132:9;10086:56;;10152:19;10174:13;-1:-1:-1;;;;;10174:33:39;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10240:38;;-1:-1:-1;;;10240:38:39;;10272:4;10240:38;;;1614:51:75;10152:57:39;;-1:-1:-1;10219:18:39;;-1:-1:-1;;;;;10240:23:39;;;;;1587:18:75;;10240:38:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10219:59;-1:-1:-1;10291:12:39;;10288:165;;10350:11;-1:-1:-1;;;;;10323:51:39;10339:9;-1:-1:-1;;;;;10323:51:39;;10363:10;10323:51;;;;7579:25:75;;7567:2;7552:18;;7433:177;10323:51:39;;;;;;;;10388:54;-1:-1:-1;;;;;10388:30:39;;10419:11;10431:10;10388:30;:54::i;:::-;10076:383;;;10025:434;:::o;3146:706:62:-;3565:23;3591:69;3619:4;3591:69;;;;;;;;;;;;;;;;;3599:5;-1:-1:-1;;;;;3591:27:62;;;:69;;;;;:::i;:::-;3674:17;;3565:95;;-1:-1:-1;3674:21:62;3670:176;;3769:10;3758:30;;;;;;;;;;;;:::i;:::-;3750:85;;;;-1:-1:-1;;;3750:85:62;;9660:2:75;3750:85:62;;;9642:21:75;9699:2;9679:18;;;9672:30;9738:34;9718:18;;;9711:62;-1:-1:-1;;;9789:18:75;;;9782:40;9839:19;;3750:85:62;9458:406:75;3596:193:47;3699:12;3730:52;3752:6;3760:4;3766:1;3769:12;3730:21;:52::i;:::-;3723:59;;3596:193;;;;;;:::o;4623:523::-;4750:12;4807:5;4782:21;:30;;4774:81;;;;-1:-1:-1;;;4774:81:47;;10071:2:75;4774:81:47;;;10053:21:75;10110:2;10090:18;;;10083:30;10149:34;10129:18;;;10122:62;-1:-1:-1;;;10200:18:75;;;10193:36;10246:19;;4774:81:47;9869:402:75;4774:81:47;1101:20;;4865:60;;;;-1:-1:-1;;;4865:60:47;;10478:2:75;4865:60:47;;;10460:21:75;10517:2;10497:18;;;10490:30;10556:31;10536:18;;;10529:59;10605:18;;4865:60:47;10276:353:75;4865:60:47;4996:12;5010:23;5037:6;-1:-1:-1;;;;;5037:11:47;5057:5;5065:4;5037:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4995:75;;;;5087:52;5105:7;5114:10;5126:12;5087:17;:52::i;:::-;5080:59;4623:523;-1:-1:-1;;;;;;;4623:523:47:o;7106:725::-;7221:12;7249:7;7245:580;;;-1:-1:-1;7279:10:47;7272:17;;7245:580;7390:17;;:21;7386:429;;7648:10;7642:17;7708:15;7695:10;7691:2;7687:19;7680:44;7386:429;7787:12;7780:20;;-1:-1:-1;;;7780:20:47;;;;;;;;:::i;14:131:75:-;-1:-1:-1;;;;;89:31:75;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:456::-;227:6;235;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;351:9;338:23;370:31;395:5;370:31;:::i;:::-;420:5;-1:-1:-1;472:2:75;457:18;;444:32;;-1:-1:-1;528:2:75;513:18;;500:32;541:33;500:32;541:33;:::i;:::-;593:7;583:17;;;150:456;;;;;:::o;611:667::-;706:6;714;722;730;738;791:3;779:9;770:7;766:23;762:33;759:53;;;808:1;805;798:12;759:53;847:9;834:23;866:31;891:5;866:31;:::i;:::-;916:5;-1:-1:-1;968:2:75;953:18;;940:32;;-1:-1:-1;1019:2:75;1004:18;;991:32;;-1:-1:-1;1075:2:75;1060:18;;1047:32;1088:33;1047:32;1088:33;:::i;:::-;1140:7;-1:-1:-1;1199:3:75;1184:19;;1171:33;1213;1171;1213;:::i;:::-;1265:7;1255:17;;;611:667;;;;;;;;:::o;1283:180::-;1342:6;1395:2;1383:9;1374:7;1370:23;1366:32;1363:52;;;1411:1;1408;1401:12;1363:52;-1:-1:-1;1434:23:75;;1283:180;-1:-1:-1;1283:180:75:o;1676:247::-;1735:6;1788:2;1776:9;1767:7;1763:23;1759:32;1756:52;;;1804:1;1801;1794:12;1756:52;1843:9;1830:23;1862:31;1887:5;1862:31;:::i;1928:388::-;1996:6;2004;2057:2;2045:9;2036:7;2032:23;2028:32;2025:52;;;2073:1;2070;2063:12;2025:52;2112:9;2099:23;2131:31;2156:5;2131:31;:::i;:::-;2181:5;-1:-1:-1;2238:2:75;2223:18;;2210:32;2251:33;2210:32;2251:33;:::i;:::-;2303:7;2293:17;;;1928:388;;;;;:::o;3198:383::-;3275:6;3283;3291;3344:2;3332:9;3323:7;3319:23;3315:32;3312:52;;;3360:1;3357;3350:12;3312:52;3399:9;3386:23;3418:31;3443:5;3418:31;:::i;:::-;3468:5;3520:2;3505:18;;3492:32;;-1:-1:-1;3571:2:75;3556:18;;;3543:32;;3198:383;-1:-1:-1;;;3198:383:75:o;3946:354::-;4148:2;4130:21;;;4187:2;4167:18;;;4160:30;4226:32;4221:2;4206:18;;4199:60;4291:2;4276:18;;3946:354::o;5756:184::-;5826:6;5879:2;5867:9;5858:7;5854:23;5850:32;5847:52;;;5895:1;5892;5885:12;5847:52;-1:-1:-1;5918:16:75;;5756:184;-1:-1:-1;5756:184:75:o;6297:277::-;6364:6;6417:2;6405:9;6396:7;6392:23;6388:32;6385:52;;;6433:1;6430;6423:12;6385:52;6465:9;6459:16;6518:5;6511:13;6504:21;6497:5;6494:32;6484:60;;6540:1;6537;6530:12;6579:222;6619:4;6647:1;6644;6641:8;6638:131;;;6691:10;6686:3;6682:20;6679:1;6672:31;6726:4;6723:1;6716:15;6754:4;6751:1;6744:15;6638:131;-1:-1:-1;6786:9:75;;6579:222::o;8670:251::-;8740:6;8793:2;8781:9;8772:7;8768:23;8764:32;8761:52;;;8809:1;8806;8799:12;8761:52;8841:9;8835:16;8860:31;8885:5;8860:31;:::i;9116:337::-;9318:2;9300:21;;;9357:2;9337:18;;;9330:30;-1:-1:-1;;;9391:2:75;9376:18;;9369:43;9444:2;9429:18;;9116:337::o;10634:258::-;10706:1;10716:113;10730:6;10727:1;10724:13;10716:113;;;10806:11;;;10800:18;10787:11;;;10780:39;10752:2;10745:10;10716:113;;;10847:6;10844:1;10841:13;10838:48;;;-1:-1:-1;;10882:1:75;10864:16;;10857:27;10634:258::o;10897:274::-;11026:3;11064:6;11058:13;11080:53;11126:6;11121:3;11114:4;11106:6;11102:17;11080:53;:::i;:::-;11149:16;;;;;10897:274;-1:-1:-1;;10897:274:75:o;11176:383::-;11325:2;11314:9;11307:21;11288:4;11357:6;11351:13;11400:6;11395:2;11384:9;11380:18;11373:34;11416:66;11475:6;11470:2;11459:9;11455:18;11450:2;11442:6;11438:15;11416:66;:::i;:::-;11543:2;11522:15;-1:-1:-1;;11518:29:75;11503:45;;;;11550:2;11499:54;;11176:383;-1:-1:-1;;11176:383:75:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "activate(address,uint256,uint256)": {
        "details": "activate      Activate a new dispenser",
        "params": {
          "datatoken": "refers to datatoken address.",
          "maxBalance": "- max balance of requester.",
          "maxTokens": "- max tokens to dispense"
        }
      },
      "create(address,uint256,uint256,address,address)": {
        "details": "create      Create a new dispenser",
        "params": {
          "allowedSwapper": "- if !=0, only this address can request DTs",
          "datatoken": "refers to datatoken address.",
          "maxBalance": "- max balance of requester.",
          "maxTokens": "- max tokens to dispense",
          "owner": "- owner"
        }
      },
      "deactivate(address)": {
        "details": "deactivate      Deactivate an existing dispenser",
        "params": {
          "datatoken": "refers to datatoken address."
        }
      },
      "dispense(address,uint256,address)": {
        "details": "dispense  Dispense datatokens to caller.   The dispenser must be active, hold enough DT (or be able to mint more)   and respect maxTokens/maxBalance requirements",
        "params": {
          "amount": "amount of datatokens required.",
          "datatoken": "refers to datatoken address.",
          "destination": "refers to who will receive the tokens"
        }
      },
      "getId()": {
        "details": "getId      Return template id in case we need different ABIs.       If you construct your own template, please make sure to change the hardcoded value"
      },
      "ownerWithdraw(address)": {
        "details": "ownerWithdraw      Withdraw all datatokens in this dispenser balance to ERC20.getPaymentCollector()",
        "params": {
          "datatoken": "refers to datatoken address."
        }
      },
      "setAllowedSwapper(address,address)": {
        "details": "setAllowedSwapper      Sets a new allowedSwapper",
        "params": {
          "datatoken": "refers to datatoken address.",
          "newAllowedSwapper": "refers to the new allowedSwapper"
        }
      },
      "status(address)": {
        "details": "status      Get information about a datatoken dispenser",
        "params": {
          "datatoken": "refers to datatoken address."
        },
        "returns": {
          "active": "- if the dispenser is active for this datatoken",
          "allowedSwapper": "- address allowed to request DT if != 0",
          "balance": "- internal balance of the contract (if any)",
          "isMinter": " - check the datatoken contract if the dispenser has mint roles",
          "maxBalance": "- max balance of requester. If the balance is higher, the dispense is rejected",
          "maxTokens": "- max tokens to dispense",
          "owner": "- owner of this dispenser"
        }
      }
    },
    "version": 1
  },
  "offset": [
    574,
    10461
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x645B8B1B EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x938D71D0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF9BFAA7D EQ PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D746D83 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x24CE2917 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3398086A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x3EA053EB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x45D6646B EQ PUSH2 0x128 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9 PUSH2 0xA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A5 JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x185F JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x187C JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x185F JUMP JUMPDEST PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 ISZERO ISZERO SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xEB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x185F JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x44697370656E736572206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x34F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081E995C9BC8185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x82DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND ISZERO PUSH2 0x44D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND CALLER EQ PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732061646472657373206973206E6F7420616C6C6F77656420746F2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195C5D595CDD081115 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 SWAP2 PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C65722062616C616E636520746F6F2068696768000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT DUP1 ISZERO PUSH2 0x609 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH4 0x40C10F19 ADDRESS PUSH2 0x628 DUP5 DUP10 PUSH2 0x195C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x682 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x737 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420656E6F756768207265736572766573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x63E223FF524BD93D4CBFF98EF34405B39F63DED87F5A8D85E39CCDA966F13543 DUP8 PUSH1 0x40 MLOAD PUSH2 0x77C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x798 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP6 DUP8 PUSH2 0x13A4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2234B9B832B739B2B91D1037B7363C903937BABA32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO DUP1 PUSH2 0x86B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV DUP2 AND SWAP1 DUP4 AND EQ JUMPDEST PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44617461746F6B656E20616C7265616479206372656174656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP10 DUP9 AND PUSH2 0x100 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 SWAP1 DUP2 OR DUP4 SSTORE DUP1 DUP4 ADD DUP14 SWAP1 SSTORE SWAP5 DUP3 ADD DUP12 SWAP1 SSTORE PUSH1 0x3 SWAP2 DUP3 ADD DUP1 SLOAD SWAP9 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP10 DUP11 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 SLOAD SWAP6 DUP7 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP7 AND DUP6 OR SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP10 DUP2 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE SWAP4 DUP5 ADD MSTORE SWAP2 PUSH32 0x7D0AA581E6EB87E15F58588FF20C39FF6622FC796EC9BB664DF6ED3EB02442C9 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC5C7317D52E88DE62AFF4BA6869A4882A4556557B761158934D2FD32A8B2CA5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96FB3EAF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x96FB3EAF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST DUP1 PUSH2 0xB7A JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x7FFB78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x393F01061139648745EA000BB047BBE1785BD3A19D3A9C90F6747E1D2357D2B8 SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96FB3EAF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x96FB3EAF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST DUP1 PUSH2 0xD59 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x7FFB78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xAC5C7317D52E88DE62AFF4BA6869A4882A4556557B761158934D2FD32A8B2CA5 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0xDFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xFF DUP4 AND SWAP13 POP PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP5 AND SWAP10 POP SWAP3 SWAP7 POP SWAP5 POP DUP10 SWAP2 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP9 SWAP11 SWAP8 SWAP10 SWAP1 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 POP SWAP3 SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96FB3EAF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x96FB3EAF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCB SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST DUP1 PUSH2 0x10B2 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x7FFB78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1018 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A7 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP2 DUP2 ADD DUP11 SWAP1 SSTORE SWAP3 ADD DUP8 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD PUSH32 0xE9372084CB52C5392AFEE4B9D79D131E04B1E65676088D50A8F39FFFB16A8745 SWAP2 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96FB3EAF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x96FB3EAF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FD SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST DUP1 PUSH2 0x12E4 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x7FFB78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126E SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x12F7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ JUMPDEST PUSH2 0x1313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x139A DUP4 PUSH2 0x13FB JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x13F6 SWAP1 DUP5 SWAP1 PUSH2 0x1541 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE487C2E8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1440 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1464 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x153B JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3185212530FCDCE6B38FBF62ED27AB29B1B047F59B76B17401388A70A95F41B DUP4 PUSH1 0x40 MLOAD PUSH2 0x151F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x153B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP4 PUSH2 0x13A4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1596 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1613 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x13F6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x15B4 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x13F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1622 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x162C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x276 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x16F7 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1734 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1749 DUP3 DUP3 DUP7 PUSH2 0x1754 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1763 JUMPI POP DUP2 PUSH2 0x1625 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1773 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x17C5 DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x17DC DUP2 PUSH2 0x178D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x180A DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1828 DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1838 DUP2 PUSH2 0x178D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1625 DUP2 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x189A DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18AA DUP2 PUSH2 0x178D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18D5 DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20636F6E747261637420616464726573730000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x197C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1625 DUP2 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19E0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19C8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x153B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A03 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x19C5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A2C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x19C5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBD SIGNEXTEND RETURNDATACOPY DIV 0xC0 GT DIFFICULTY 0xE6 0x27 0x25 0xE6 SWAP3 DUP7 AND CALLVALUE DIFFICULTY CREATE 0xE8 CODECOPY PC 0x24 RETURN SWAP11 0xAE 0xCC 0xB9 0xB0 DUP5 0x5D DUP3 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "8": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "LT",
      "path": "39"
    },
    "9": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x91"
    },
    "12": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "13": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "16": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "SHR",
      "path": "39"
    },
    "19": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "20": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x5D1CA631"
    },
    "25": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "GT",
      "path": "39"
    },
    "26": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "30": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "31": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x5D1CA631"
    },
    "36": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "37": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x148"
    },
    "40": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "41": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "42": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x645B8B1B"
    },
    "47": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "48": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x164"
    },
    "51": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "52": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "53": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x938D71D0"
    },
    "58": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "59": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1C7"
    },
    "62": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "63": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "64": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xF887EA40"
    },
    "69": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "70": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1E7"
    },
    "73": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "74": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "75": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xF9BFAA7D"
    },
    "80": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "81": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x207"
    },
    "84": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "85": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "88": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "REVERT",
      "path": "39"
    },
    "89": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "90": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "91": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x1D746D83"
    },
    "96": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "97": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x96"
    },
    "100": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "101": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "102": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x24CE2917"
    },
    "107": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "108": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xAB"
    },
    "111": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "112": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "113": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x3398086A"
    },
    "118": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "119": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xCB"
    },
    "122": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "123": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "124": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x3EA053EB"
    },
    "129": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "130": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x108"
    },
    "133": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "134": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "135": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x45D6646B"
    },
    "140": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "EQ",
      "path": "39"
    },
    "141": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x128"
    },
    "144": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "145": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "146": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "148": {
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "DUP1",
      "path": "39"
    },
    "149": {
      "first_revert": true,
      "fn": null,
      "offset": [
        574,
        10461
      ],
      "op": "REVERT",
      "path": "39"
    },
    "150": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "151": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA9"
    },
    "154": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA4"
    },
    "157": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "158": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "160": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x17A5"
    },
    "163": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMP",
      "path": "39"
    },
    "164": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "165": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x227"
    },
    "168": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMP",
      "path": "39"
    },
    "169": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "170": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "STOP",
      "path": "39"
    },
    "171": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "172": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "173": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "DUP1",
      "path": "39"
    },
    "174": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "175": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB7"
    },
    "178": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "179": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "181": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "DUP1",
      "path": "39"
    },
    "182": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "REVERT",
      "path": "39"
    },
    "183": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "184": {
      "op": "POP"
    },
    "185": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA9"
    },
    "188": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xC6"
    },
    "191": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "192": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "194": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x17E7"
    },
    "197": {
      "fn": "Dispenser.create",
      "jump": "i",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMP",
      "path": "39"
    },
    "198": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "199": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x7A5"
    },
    "202": {
      "fn": "Dispenser.create",
      "jump": "i",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMP",
      "path": "39"
    },
    "203": {
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "204": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "205": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP1",
      "path": "39"
    },
    "206": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "207": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD7"
    },
    "210": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "211": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "213": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP1",
      "path": "39"
    },
    "214": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "REVERT",
      "path": "39"
    },
    "215": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "216": {
      "op": "POP"
    },
    "217": {
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xEB"
    },
    "220": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE6"
    },
    "223": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "224": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "226": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1846"
    },
    "229": {
      "fn": "Dispenser.create",
      "jump": "i",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMP",
      "path": "39"
    },
    "230": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "231": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x9D8"
    },
    "234": {
      "fn": "Dispenser.create",
      "jump": "i",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMP",
      "path": "39"
    },
    "235": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "236": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "238": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "245": {
      "op": "SHL"
    },
    "246": {
      "op": "SUB"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "SWAP2"
    },
    "249": {
      "op": "AND"
    },
    "250": {
      "op": "DUP2"
    },
    "251": {
      "op": "MSTORE"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "254": {
      "op": "ADD"
    },
    "255": {
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "256": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "258": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "259": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP1",
      "path": "39"
    },
    "260": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "261": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SUB",
      "path": "39"
    },
    "262": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "263": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "RETURN",
      "path": "39"
    },
    "264": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "265": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "266": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "DUP1",
      "path": "39"
    },
    "267": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "268": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x114"
    },
    "271": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "272": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "274": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "DUP1",
      "path": "39"
    },
    "275": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "REVERT",
      "path": "39"
    },
    "276": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "277": {
      "op": "POP"
    },
    "278": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA9"
    },
    "281": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x123"
    },
    "284": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "285": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "287": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x185F"
    },
    "290": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMP",
      "path": "39"
    },
    "291": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "292": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA02"
    },
    "295": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMP",
      "path": "39"
    },
    "296": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "297": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "298": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "DUP1",
      "path": "39"
    },
    "299": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "300": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x134"
    },
    "303": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "304": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "306": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "DUP1",
      "path": "39"
    },
    "307": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "REVERT",
      "path": "39"
    },
    "308": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "309": {
      "op": "POP"
    },
    "310": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA9"
    },
    "313": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x143"
    },
    "316": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "317": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "319": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x187C"
    },
    "322": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMP",
      "path": "39"
    },
    "323": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "324": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xBE1"
    },
    "327": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMP",
      "path": "39"
    },
    "328": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "329": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "330": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "DUP1",
      "path": "39"
    },
    "331": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "332": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x154"
    },
    "335": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "336": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "338": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "DUP1",
      "path": "39"
    },
    "339": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "REVERT",
      "path": "39"
    },
    "340": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "341": {
      "op": "POP"
    },
    "342": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "344": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "345": {
      "fn": "Dispenser.getId",
      "offset": [
        3622,
        3623
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 0,
      "value": "0x1"
    },
    "347": {
      "op": "DUP2"
    },
    "348": {
      "op": "MSTORE"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "fn": "Dispenser.getId",
      "offset": [
        3560,
        3630
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFF"
    },
    "355": {
      "op": "JUMP"
    },
    "356": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "357": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "358": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "DUP1",
      "path": "39"
    },
    "359": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "360": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x170"
    },
    "363": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "364": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "366": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "DUP1",
      "path": "39"
    },
    "367": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "REVERT",
      "path": "39"
    },
    "368": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "369": {
      "op": "POP"
    },
    "370": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x184"
    },
    "373": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x17F"
    },
    "376": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "377": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "379": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x185F"
    },
    "382": {
      "fn": "Dispenser.status",
      "jump": "i",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMP",
      "path": "39"
    },
    "383": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "384": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDD1"
    },
    "387": {
      "fn": "Dispenser.status",
      "jump": "i",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMP",
      "path": "39"
    },
    "388": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "389": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "391": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "DUP1",
      "path": "39"
    },
    "392": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "393": {
      "op": "SWAP8"
    },
    "394": {
      "op": "ISZERO"
    },
    "395": {
      "op": "ISZERO"
    },
    "396": {
      "op": "DUP9"
    },
    "397": {
      "op": "MSTORE"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "404": {
      "op": "SHL"
    },
    "405": {
      "op": "SUB"
    },
    "406": {
      "op": "SWAP7"
    },
    "407": {
      "op": "DUP8"
    },
    "408": {
      "op": "AND"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "DUP10"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "SWAP5"
    },
    "415": {
      "op": "ISZERO"
    },
    "416": {
      "op": "ISZERO"
    },
    "417": {
      "op": "SWAP5"
    },
    "418": {
      "op": "DUP8"
    },
    "419": {
      "op": "ADD"
    },
    "420": {
      "op": "SWAP5"
    },
    "421": {
      "op": "SWAP1"
    },
    "422": {
      "op": "SWAP5"
    },
    "423": {
      "op": "MSTORE"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "426": {
      "op": "DUP7"
    },
    "427": {
      "op": "ADD"
    },
    "428": {
      "op": "SWAP3"
    },
    "429": {
      "op": "SWAP1"
    },
    "430": {
      "op": "SWAP3"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "434": {
      "op": "DUP6"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "439": {
      "op": "DUP5"
    },
    "440": {
      "op": "ADD"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "AND"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "445": {
      "op": "DUP3"
    },
    "446": {
      "op": "ADD"
    },
    "447": {
      "op": "MSTORE"
    },
    "448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFF"
    },
    "454": {
      "op": "JUMP"
    },
    "455": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "456": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "457": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "DUP1",
      "path": "39"
    },
    "458": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "459": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "463": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "465": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "DUP1",
      "path": "39"
    },
    "466": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "REVERT",
      "path": "39"
    },
    "467": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "468": {
      "op": "POP"
    },
    "469": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA9"
    },
    "472": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1E2"
    },
    "475": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "476": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "478": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18B5"
    },
    "481": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMP",
      "path": "39"
    },
    "482": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "483": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF3A"
    },
    "486": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMP",
      "path": "39"
    },
    "487": {
      "offset": [
        693,
        714
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "488": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "489": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "DUP1",
      "path": "39"
    },
    "490": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "491": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1F3"
    },
    "494": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "495": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "497": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "DUP1",
      "path": "39"
    },
    "498": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "REVERT",
      "path": "39"
    },
    "499": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "500": {
      "op": "POP"
    },
    "501": {
      "offset": [
        693,
        714
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "503": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "504": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xEB"
    },
    "507": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "offset": [
        693,
        714
      ],
      "op": "AND",
      "path": "39"
    },
    "517": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "DUP2",
      "path": "39"
    },
    "518": {
      "fn": "Dispenser.activate",
      "offset": [
        693,
        714
      ],
      "op": "JUMP",
      "path": "39"
    },
    "519": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "520": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "521": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "DUP1",
      "path": "39"
    },
    "522": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "523": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x213"
    },
    "526": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "527": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "529": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "DUP1",
      "path": "39"
    },
    "530": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "REVERT",
      "path": "39"
    },
    "531": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA9"
    },
    "536": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x222"
    },
    "539": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "540": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "542": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x185F"
    },
    "545": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMP",
      "path": "39"
    },
    "546": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "547": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x116C"
    },
    "550": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMP",
      "path": "39"
    },
    "551": {
      "fn": "Dispenser.dispense",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "552": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "554": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "556": {
      "fn": "Dispenser.dispense",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "557": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "558": {
      "fn": "Dispenser.dispense",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "559": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "562": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "563": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "565": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "574": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "577": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "579": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "580": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "581": {
      "op": "MSTORE"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "586": {
      "op": "DUP3"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "op": "MSTORE"
    },
    "589": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "624": {
      "op": "DUP3"
    },
    "625": {
      "op": "ADD"
    },
    "626": {
      "op": "MSTORE"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "629": {
      "op": "ADD"
    },
    "630": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "631": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "633": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "634": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "635": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "636": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "SUB",
      "path": "2"
    },
    "637": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "638": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "639": {
      "fn": "Dispenser.dispense",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "640": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "642": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "644": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "651": {
      "op": "SHL"
    },
    "652": {
      "op": "SUB"
    },
    "653": {
      "fn": "Dispenser.dispense",
      "offset": [
        8123,
        8146
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 1
    },
    "654": {
      "branch": 51,
      "fn": "Dispenser.dispense",
      "offset": [
        8123,
        8146
      ],
      "op": "AND",
      "path": "39"
    },
    "655": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2AA"
    },
    "658": {
      "branch": 51,
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "659": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "661": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "DUP2",
      "path": "39"
    },
    "670": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "671": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "673": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "ADD",
      "path": "39"
    },
    "674": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "677": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "678": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "681": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        8102,
        8202
      ],
      "op": "JUMP",
      "path": "39"
    },
    "682": {
      "fn": "Dispenser.dispense",
      "offset": [
        8102,
        8202
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "op": "SUB"
    },
    "691": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 2
    },
    "692": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "AND",
      "path": "39"
    },
    "693": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "695": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "696": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "DUP2",
      "path": "39"
    },
    "697": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "698": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8243
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "700": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "702": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "703": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "705": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "706": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8254
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "707": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8261
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "708": {
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8261
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "710": {
      "branch": 52,
      "fn": "Dispenser.dispense",
      "offset": [
        8233,
        8261
      ],
      "op": "AND",
      "path": "39"
    },
    "711": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x309"
    },
    "714": {
      "branch": 52,
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "715": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "717": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "724": {
      "op": "SHL"
    },
    "725": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "DUP2",
      "path": "39"
    },
    "726": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "729": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "731": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "DUP3",
      "path": "39"
    },
    "732": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "ADD",
      "path": "39"
    },
    "733": {
      "op": "MSTORE"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "738": {
      "op": "DUP3"
    },
    "739": {
      "op": "ADD"
    },
    "740": {
      "op": "MSTORE"
    },
    "741": {
      "op": "PUSH20",
      "value": "0x44697370656E736572206E6F7420616374697665"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "764": {
      "op": "SHL"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "767": {
      "op": "DUP3"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "776": {
      "op": "JUMP"
    },
    "777": {
      "fn": "Dispenser.dispense",
      "offset": [
        8212,
        8307
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "778": {
      "fn": "Dispenser.dispense",
      "offset": [
        8347,
        8348
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 3,
      "value": "0x0"
    },
    "780": {
      "fn": "Dispenser.dispense",
      "offset": [
        8338,
        8344
      ],
      "op": "DUP3",
      "path": "39"
    },
    "781": {
      "branch": 53,
      "fn": "Dispenser.dispense",
      "offset": [
        8338,
        8348
      ],
      "op": "GT",
      "path": "39"
    },
    "782": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x34F"
    },
    "785": {
      "branch": 53,
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "786": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "788": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "DUP2",
      "path": "39"
    },
    "797": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "802": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "DUP3",
      "path": "39"
    },
    "803": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "ADD",
      "path": "39"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "809": {
      "op": "DUP3"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "op": "PUSH19",
      "value": "0x125B9D985B1A59081E995C9BC8185B5BDD5B9D"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "837": {
      "op": "DUP3"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "MSTORE"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "846": {
      "op": "JUMP"
    },
    "847": {
      "fn": "Dispenser.dispense",
      "offset": [
        8317,
        8393
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "SHL"
    },
    "855": {
      "op": "SUB"
    },
    "856": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 4
    },
    "857": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "AND",
      "path": "39"
    },
    "858": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "860": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "861": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "DUP2",
      "path": "39"
    },
    "862": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "863": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8434
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "865": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "867": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "868": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "870": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "871": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8445
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "872": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8455
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "874": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8455
      ],
      "op": "ADD",
      "path": "39"
    },
    "875": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8455
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "876": {
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8465
      ],
      "op": "DUP3",
      "path": "39"
    },
    "877": {
      "op": "GT"
    },
    "878": {
      "branch": 54,
      "fn": "Dispenser.dispense",
      "offset": [
        8424,
        8465
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "879": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3AC"
    },
    "882": {
      "branch": 54,
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "883": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "885": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "DUP2",
      "path": "39"
    },
    "894": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "897": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "899": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "DUP3",
      "path": "39"
    },
    "900": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "ADD",
      "path": "39"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "906": {
      "op": "DUP3"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "PUSH15",
      "value": "0x82DADEEADCE840E8DEDE40D0D2CED"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "930": {
      "op": "DUP3"
    },
    "931": {
      "op": "ADD"
    },
    "932": {
      "op": "MSTORE"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "939": {
      "op": "JUMP"
    },
    "940": {
      "fn": "Dispenser.dispense",
      "offset": [
        8403,
        8506
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "op": "SUB"
    },
    "949": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "DUP4",
      "path": "39"
    },
    "950": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "DUP2",
      "path": "39"
    },
    "951": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "AND",
      "path": "39"
    },
    "952": {
      "fn": "Dispenser.dispense",
      "offset": [
        8567,
        8568
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "954": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "955": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "DUP2",
      "path": "39"
    },
    "956": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "957": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8529
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "959": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "961": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "962": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "964": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "965": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8540
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "966": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8555
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x3"
    },
    "968": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8555
      ],
      "op": "ADD",
      "path": "39"
    },
    "969": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8555
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "970": {
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8555
      ],
      "op": "AND",
      "path": "39"
    },
    "971": {
      "branch": 55,
      "fn": "Dispenser.dispense",
      "offset": [
        8519,
        8569
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "972": {
      "fn": "Dispenser.dispense",
      "offset": [
        8516,
        8745
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x44D"
    },
    "975": {
      "branch": 55,
      "fn": "Dispenser.dispense",
      "offset": [
        8516,
        8745
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "op": "SUB"
    },
    "984": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 5
    },
    "985": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "DUP2",
      "path": "39"
    },
    "986": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "AND",
      "path": "39"
    },
    "987": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "989": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "990": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "DUP2",
      "path": "39"
    },
    "991": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "992": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8619
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "994": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "996": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "997": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "999": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1000": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8630
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "1001": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8645
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x3"
    },
    "1003": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8645
      ],
      "op": "ADD",
      "path": "39"
    },
    "1004": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8645
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "1005": {
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8645
      ],
      "op": "AND",
      "path": "39"
    },
    "1006": {
      "fn": "Dispenser.dispense",
      "offset": [
        8649,
        8659
      ],
      "op": "CALLER",
      "path": "39"
    },
    "1007": {
      "branch": 56,
      "fn": "Dispenser.dispense",
      "offset": [
        8609,
        8659
      ],
      "op": "EQ",
      "path": "39"
    },
    "1008": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x44D"
    },
    "1011": {
      "branch": 56,
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1012": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1014": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1023": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1026": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1028": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1029": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "ADD",
      "path": "39"
    },
    "1030": {
      "op": "MSTORE"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH32",
      "value": "0x546869732061646472657373206973206E6F7420616C6C6F77656420746F2072"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1073": {
      "op": "DUP3"
    },
    "1074": {
      "op": "ADD"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "PUSH9",
      "value": "0x195C5D595CDD081115"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1091": {
      "op": "DUP3"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "MSTORE"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "1100": {
      "op": "JUMP"
    },
    "1101": {
      "fn": "Dispenser.dispense",
      "offset": [
        8584,
        8734
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1102": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1104": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1105": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1114": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "DUP2"
    },
    "1125": {
      "op": "AND"
    },
    "1126": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1128": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1129": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "ADD",
      "path": "39"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "fn": "Dispenser.dispense",
      "offset": [
        8809,
        8818
      ],
      "op": "DUP5",
      "path": "39"
    },
    "1132": {
      "fn": "Dispenser.dispense",
      "offset": [
        8809,
        8818
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1133": {
      "fn": "Dispenser.dispense",
      "offset": [
        8763,
        8791
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1135": {
      "fn": "Dispenser.dispense",
      "offset": [
        8763,
        8791
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1136": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8876
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1137": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8876
      ],
      "op": "AND",
      "path": "39"
    },
    "1138": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8876
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1139": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8876
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x70A08231"
    },
    "1144": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8876
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1150": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1152": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1153": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1154": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1155": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "SUB",
      "path": "39"
    },
    "1156": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1157": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1158": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "GAS",
      "path": "39"
    },
    "1159": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "1160": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1161": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1162": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1163": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x498"
    },
    "1166": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1167": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1168": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1170": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1171": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1172": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1173": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1175": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1176": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1177": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "POP",
      "path": "39"
    },
    "1178": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "POP",
      "path": "39"
    },
    "1179": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "POP",
      "path": "39"
    },
    "1180": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "POP",
      "path": "39"
    },
    "1181": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1183": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1184": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1185": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1187": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "NOT",
      "path": "39"
    },
    "1188": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1190": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1191": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "ADD",
      "path": "39"
    },
    "1192": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "AND",
      "path": "39"
    },
    "1193": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1194": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "ADD",
      "path": "39"
    },
    "1195": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1196": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1198": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1199": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "POP",
      "path": "39"
    },
    "1200": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1201": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "ADD",
      "path": "39"
    },
    "1202": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1203": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4BC"
    },
    "1206": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1207": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1208": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1921"
    },
    "1211": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        8853,
        8889
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1212": {
      "fn": "Dispenser.dispense",
      "offset": [
        8853,
        8889
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "DUP7",
      "path": "39",
      "statement": 6
    },
    "1222": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "AND",
      "path": "39"
    },
    "1223": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1225": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1226": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1227": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1228": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8944
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "1230": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1232": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1233": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1234": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1235": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1237": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1238": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1239": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8955
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "1240": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8966
      ],
      "op": "ADD",
      "path": "39"
    },
    "1241": {
      "fn": "Dispenser.dispense",
      "offset": [
        8934,
        8966
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "1242": {
      "fn": "Dispenser.dispense",
      "offset": [
        8829,
        8889
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1243": {
      "fn": "Dispenser.dispense",
      "offset": [
        8829,
        8889
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "fn": "Dispenser.dispense",
      "offset": [
        8920,
        8966
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1246": {
      "branch": 57,
      "fn": "Dispenser.dispense",
      "offset": [
        8920,
        8966
      ],
      "op": "LT",
      "path": "39"
    },
    "1247": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x52A"
    },
    "1250": {
      "branch": 57,
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1251": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1253": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1262": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1265": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1267": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1268": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "ADD",
      "path": "39"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1274": {
      "op": "DUP3"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH32",
      "value": "0x43616C6C65722062616C616E636520746F6F2068696768000000000000000000"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1312": {
      "op": "DUP3"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "1321": {
      "op": "JUMP"
    },
    "1322": {
      "fn": "Dispenser.dispense",
      "offset": [
        8899,
        9015
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1323": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1325": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1326": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1335": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1336": {
      "fn": "Dispenser.dispense",
      "offset": [
        9078,
        9082
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "1337": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1339": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1340": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "ADD",
      "path": "39"
    },
    "1341": {
      "op": "MSTORE"
    },
    "1342": {
      "fn": "Dispenser.dispense",
      "offset": [
        9025,
        9043
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1344": {
      "fn": "Dispenser.dispense",
      "offset": [
        9025,
        9043
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9069
      ],
      "op": "DUP5",
      "path": "39"
    },
    "1354": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9069
      ],
      "op": "AND",
      "path": "39"
    },
    "1355": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9069
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1356": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9069
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x70A08231"
    },
    "1361": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9069
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1367": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1369": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1370": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1371": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1372": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "SUB",
      "path": "39"
    },
    "1373": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1374": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1375": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "GAS",
      "path": "39"
    },
    "1376": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "1377": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1378": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1379": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1380": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x571"
    },
    "1383": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1384": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1385": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1387": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1388": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1389": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1390": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1392": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1393": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1394": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "POP",
      "path": "39"
    },
    "1395": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "POP",
      "path": "39"
    },
    "1396": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "POP",
      "path": "39"
    },
    "1397": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "POP",
      "path": "39"
    },
    "1398": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1400": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1401": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1402": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1404": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "NOT",
      "path": "39"
    },
    "1405": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1407": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1408": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "ADD",
      "path": "39"
    },
    "1409": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "AND",
      "path": "39"
    },
    "1410": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1411": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "ADD",
      "path": "39"
    },
    "1412": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1413": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1415": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1416": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "POP",
      "path": "39"
    },
    "1417": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1418": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "ADD",
      "path": "39"
    },
    "1419": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1420": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x595"
    },
    "1423": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1424": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1425": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1921"
    },
    "1428": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        9046,
        9084
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1429": {
      "fn": "Dispenser.dispense",
      "offset": [
        9046,
        9084
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1430": {
      "fn": "Dispenser.dispense",
      "offset": [
        9025,
        9084
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1431": {
      "fn": "Dispenser.dispense",
      "offset": [
        9025,
        9084
      ],
      "op": "POP",
      "path": "39"
    },
    "1432": {
      "fn": "Dispenser.dispense",
      "offset": [
        9108,
        9114
      ],
      "op": "DUP5",
      "path": "39"
    },
    "1433": {
      "fn": "Dispenser.dispense",
      "offset": [
        9097,
        9107
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1434": {
      "branch": 58,
      "fn": "Dispenser.dispense",
      "offset": [
        9097,
        9114
      ],
      "op": "LT",
      "path": "39"
    },
    "1435": {
      "fn": "Dispenser.dispense",
      "offset": [
        9097,
        9155
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1436": {
      "fn": "Dispenser.dispense",
      "offset": [
        9097,
        9155
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1437": {
      "fn": "Dispenser.dispense",
      "offset": [
        9097,
        9155
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x609"
    },
    "1440": {
      "branch": 58,
      "fn": "Dispenser.dispense",
      "offset": [
        9097,
        9155
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1444": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1445": {
      "op": "PUSH4",
      "value": "0x55138F0D"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1454": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1455": {
      "fn": "Dispenser.dispense",
      "offset": [
        9149,
        9153
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "1456": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1458": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1459": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "ADD",
      "path": "39"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9140
      ],
      "op": "DUP5",
      "path": "39"
    },
    "1470": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9140
      ],
      "op": "AND",
      "path": "39"
    },
    "1471": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9140
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1472": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9140
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xAA271E1A"
    },
    "1477": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9140
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1483": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1485": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1486": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1487": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1488": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "SUB",
      "path": "39"
    },
    "1489": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1490": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1491": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "GAS",
      "path": "39"
    },
    "1492": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "1493": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1494": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1495": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1496": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5E5"
    },
    "1499": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1500": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1501": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1503": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1504": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1505": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1506": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1508": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1509": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1510": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "POP",
      "path": "39"
    },
    "1511": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "POP",
      "path": "39"
    },
    "1512": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "POP",
      "path": "39"
    },
    "1513": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "POP",
      "path": "39"
    },
    "1514": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1516": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1517": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1518": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1520": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "NOT",
      "path": "39"
    },
    "1521": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1523": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1524": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "ADD",
      "path": "39"
    },
    "1525": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "AND",
      "path": "39"
    },
    "1526": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1527": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "ADD",
      "path": "39"
    },
    "1528": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1529": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1531": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1532": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "POP",
      "path": "39"
    },
    "1533": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1534": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "ADD",
      "path": "39"
    },
    "1535": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1536": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x609"
    },
    "1539": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1540": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1541": {
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x193A"
    },
    "1544": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        9118,
        9155
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1545": {
      "branch": 59,
      "fn": "Dispenser.dispense",
      "offset": [
        9118,
        9155
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1546": {
      "fn": "Dispenser.dispense",
      "offset": [
        9094,
        9355
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1547": {
      "fn": "Dispenser.dispense",
      "offset": [
        9094,
        9355
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6F1"
    },
    "1550": {
      "branch": 59,
      "fn": "Dispenser.dispense",
      "offset": [
        9094,
        9355
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "op": "SUB"
    },
    "1559": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9244
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 7
    },
    "1560": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9244
      ],
      "op": "AND",
      "path": "39"
    },
    "1561": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9244
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x40C10F19"
    },
    "1566": {
      "fn": "Dispenser.dispense",
      "offset": [
        9253,
        9257
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "1567": {
      "fn": "Dispenser.dispense",
      "offset": [
        9259,
        9278
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x628"
    },
    "1570": {
      "fn": "Dispenser.dispense",
      "offset": [
        9268,
        9278
      ],
      "op": "DUP5",
      "path": "39"
    },
    "1571": {
      "fn": "Dispenser.dispense",
      "offset": [
        9259,
        9265
      ],
      "op": "DUP10",
      "path": "39"
    },
    "1572": {
      "fn": "Dispenser.dispense",
      "offset": [
        9259,
        9278
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x195C"
    },
    "1575": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        9259,
        9278
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1576": {
      "fn": "Dispenser.dispense",
      "offset": [
        9259,
        9278
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1577": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1579": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "op": "SUB"
    },
    "1588": {
      "op": "NOT"
    },
    "1589": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "1591": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP6",
      "path": "39"
    },
    "1592": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1593": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "SHL",
      "path": "39"
    },
    "1594": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "AND",
      "path": "39"
    },
    "1595": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1596": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "op": "SWAP1"
    },
    "1606": {
      "op": "SWAP3"
    },
    "1607": {
      "op": "AND"
    },
    "1608": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1610": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1611": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "ADD",
      "path": "39"
    },
    "1612": {
      "op": "MSTORE"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1623": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1625": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1626": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1627": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1628": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "SUB",
      "path": "39"
    },
    "1629": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1630": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1632": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP8",
      "path": "39"
    },
    "1633": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1634": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "1635": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1636": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1637": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1638": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x66E"
    },
    "1641": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1642": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1644": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1645": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1646": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1647": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "POP",
      "path": "39"
    },
    "1648": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "GAS",
      "path": "39"
    },
    "1649": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "CALL",
      "path": "39"
    },
    "1650": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1651": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1652": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1653": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x682"
    },
    "1656": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1657": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1658": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1660": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1661": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1662": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1663": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1665": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1666": {
      "fn": "Dispenser.dispense",
      "offset": [
        9226,
        9279
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 8,
      "value": "0x40"
    },
    "1671": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1672": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1681": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1682": {
      "fn": "Dispenser.dispense",
      "offset": [
        9338,
        9342
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "1683": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1685": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1686": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "ADD",
      "path": "39"
    },
    "1687": {
      "op": "MSTORE"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9329
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1697": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9329
      ],
      "op": "AND",
      "path": "39"
    },
    "1698": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9329
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9329
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x70A08231"
    },
    "1705": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9329
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1712": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1714": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1715": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1716": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1717": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "SUB",
      "path": "39"
    },
    "1718": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1719": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1720": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "GAS",
      "path": "39"
    },
    "1721": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "1722": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1723": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1724": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1725": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6CA"
    },
    "1728": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1729": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1730": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1732": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1733": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1734": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1735": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1737": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1738": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1739": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "POP",
      "path": "39"
    },
    "1740": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "POP",
      "path": "39"
    },
    "1741": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "POP",
      "path": "39"
    },
    "1742": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "POP",
      "path": "39"
    },
    "1743": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1745": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1746": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1747": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1749": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "NOT",
      "path": "39"
    },
    "1750": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1752": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1753": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "ADD",
      "path": "39"
    },
    "1754": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "AND",
      "path": "39"
    },
    "1755": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1756": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "ADD",
      "path": "39"
    },
    "1757": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1758": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1760": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1761": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "POP",
      "path": "39"
    },
    "1762": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1763": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "ADD",
      "path": "39"
    },
    "1764": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1765": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6EE"
    },
    "1768": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1769": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1770": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1921"
    },
    "1773": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        9306,
        9344
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1774": {
      "fn": "Dispenser.dispense",
      "offset": [
        9306,
        9344
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1775": {
      "fn": "Dispenser.dispense",
      "offset": [
        9293,
        9344
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1776": {
      "fn": "Dispenser.dispense",
      "offset": [
        9293,
        9344
      ],
      "op": "POP",
      "path": "39"
    },
    "1777": {
      "fn": "Dispenser.dispense",
      "offset": [
        9094,
        9355
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1778": {
      "fn": "Dispenser.dispense",
      "offset": [
        9397,
        9403
      ],
      "op": "DUP5",
      "path": "39",
      "statement": 9
    },
    "1779": {
      "fn": "Dispenser.dispense",
      "offset": [
        9385,
        9395
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1780": {
      "fn": "Dispenser.dispense",
      "offset": [
        9385,
        9403
      ],
      "op": "LT",
      "path": "39"
    },
    "1781": {
      "branch": 60,
      "fn": "Dispenser.dispense",
      "offset": [
        9385,
        9403
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1782": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x737"
    },
    "1785": {
      "branch": 60,
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1786": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1788": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1797": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1800": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1802": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1803": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "ADD",
      "path": "39"
    },
    "1804": {
      "op": "MSTORE"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1809": {
      "op": "DUP3"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "op": "MSTORE"
    },
    "1812": {
      "op": "PUSH19",
      "value": "0x4E6F7420656E6F756768207265736572766573"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1837": {
      "op": "DUP3"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "MSTORE"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1842": {
      "op": "ADD"
    },
    "1843": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "1846": {
      "op": "JUMP"
    },
    "1847": {
      "fn": "Dispenser.dispense",
      "offset": [
        9364,
        9448
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1848": {
      "fn": "Dispenser.dispense",
      "offset": [
        9490,
        9501
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 10
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "AND",
      "path": "39"
    },
    "1858": {
      "fn": "Dispenser.dispense",
      "offset": [
        9479,
        9488
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "AND",
      "path": "39"
    },
    "1868": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x63E223FF524BD93D4CBFF98EF34405B39F63DED87F5A8D85E39CCDA966F13543"
    },
    "1901": {
      "fn": "Dispenser.dispense",
      "offset": [
        9503,
        9509
      ],
      "op": "DUP8",
      "path": "39"
    },
    "1902": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1904": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1905": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x77C"
    },
    "1908": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1909": {
      "op": "DUP2"
    },
    "1910": {
      "op": "MSTORE"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1913": {
      "op": "ADD"
    },
    "1914": {
      "op": "SWAP1"
    },
    "1915": {
      "op": "JUMP"
    },
    "1916": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1917": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1919": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1920": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1921": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1922": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "SUB",
      "path": "39"
    },
    "1923": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1924": {
      "fn": "Dispenser.dispense",
      "offset": [
        9463,
        9510
      ],
      "op": "LOG3",
      "path": "39"
    },
    "1925": {
      "fn": "Dispenser.dispense",
      "offset": [
        9520,
        9570
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 11,
      "value": "0x798"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1934": {
      "op": "SHL"
    },
    "1935": {
      "op": "SUB"
    },
    "1936": {
      "fn": "Dispenser.dispense",
      "offset": [
        9520,
        9550
      ],
      "op": "DUP8",
      "path": "39"
    },
    "1937": {
      "fn": "Dispenser.dispense",
      "offset": [
        9520,
        9550
      ],
      "op": "AND",
      "path": "39"
    },
    "1938": {
      "fn": "Dispenser.dispense",
      "offset": [
        9551,
        9562
      ],
      "op": "DUP6",
      "path": "39"
    },
    "1939": {
      "fn": "Dispenser.dispense",
      "offset": [
        9563,
        9569
      ],
      "op": "DUP8",
      "path": "39"
    },
    "1940": {
      "fn": "Dispenser.dispense",
      "offset": [
        9520,
        9550
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x13A4"
    },
    "1943": {
      "fn": "Dispenser.dispense",
      "jump": "i",
      "offset": [
        9520,
        9570
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1944": {
      "fn": "Dispenser.dispense",
      "offset": [
        9520,
        9570
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "op": "POP"
    },
    "1947": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1949": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1951": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "POP"
    },
    "1954": {
      "op": "POP"
    },
    "1955": {
      "op": "POP"
    },
    "1956": {
      "fn": "Dispenser.dispense",
      "jump": "o",
      "offset": [
        7989,
        9577
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1957": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1958": {
      "offset": [
        2170,
        2176
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "1960": {
      "fn": "Dispenser.create",
      "offset": [
        2170,
        2176
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "offset": [
        2170,
        2176
      ],
      "op": "AND",
      "path": "39"
    },
    "1970": {
      "offset": [
        2156,
        2166
      ],
      "op": "CALLER",
      "path": "39"
    },
    "1971": {
      "offset": [
        2156,
        2176
      ],
      "op": "EQ",
      "path": "39"
    },
    "1972": {
      "offset": [
        2148,
        2203
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x7F8"
    },
    "1975": {
      "offset": [
        2148,
        2203
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1976": {
      "fn": "Dispenser.create",
      "offset": [
        2148,
        2203
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1978": {
      "fn": "Dispenser.create",
      "offset": [
        2148,
        2203
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1979": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "offset": [
        2148,
        2203
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1987": {
      "fn": "Dispenser.create",
      "offset": [
        2148,
        2203
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1990": {
      "offset": [
        2148,
        2203
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1992": {
      "fn": "Dispenser.create",
      "offset": [
        2148,
        2203
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1993": {
      "fn": "Dispenser.create",
      "offset": [
        2148,
        2203
      ],
      "op": "ADD",
      "path": "39"
    },
    "1994": {
      "op": "MSTORE"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1999": {
      "op": "DUP3"
    },
    "2000": {
      "op": "ADD"
    },
    "2001": {
      "op": "MSTORE"
    },
    "2002": {
      "op": "PUSH22",
      "value": "0x2234B9B832B739B2B91D1037B7363C903937BABA32B9"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2027": {
      "op": "SHL"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2030": {
      "op": "DUP3"
    },
    "2031": {
      "op": "ADD"
    },
    "2032": {
      "op": "MSTORE"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2035": {
      "op": "ADD"
    },
    "2036": {
      "offset": [
        2148,
        2203
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "2039": {
      "op": "JUMP"
    },
    "2040": {
      "offset": [
        2148,
        2203
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2047": {
      "op": "SHL"
    },
    "2048": {
      "op": "SUB"
    },
    "2049": {
      "fn": "Dispenser.create",
      "offset": [
        5530,
        5553
      ],
      "op": "DUP6",
      "path": "39",
      "statement": 12
    },
    "2050": {
      "branch": 61,
      "fn": "Dispenser.create",
      "offset": [
        5530,
        5553
      ],
      "op": "AND",
      "path": "39"
    },
    "2051": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x81E"
    },
    "2054": {
      "branch": 61,
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2055": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2057": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2066": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2067": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2069": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "ADD",
      "path": "39"
    },
    "2070": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "2073": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2074": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "2077": {
      "fn": "Dispenser.create",
      "jump": "i",
      "offset": [
        5509,
        5609
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2078": {
      "fn": "Dispenser.create",
      "offset": [
        5509,
        5609
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "op": "SUB"
    },
    "2087": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "DUP6",
      "path": "39",
      "statement": 13
    },
    "2088": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2089": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "AND",
      "path": "39"
    },
    "2090": {
      "fn": "Dispenser.create",
      "offset": [
        5679,
        5680
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2092": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2093": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2094": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2095": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5650
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "2097": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2099": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2100": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2102": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2103": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5661
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "2104": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5667
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2105": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5667
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x100"
    },
    "2108": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5667
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2109": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5667
      ],
      "op": "DIV",
      "path": "39"
    },
    "2110": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5667
      ],
      "op": "AND",
      "path": "39"
    },
    "2111": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5681
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2112": {
      "branch": 62,
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5681
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2113": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5721
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x86B"
    },
    "2116": {
      "branch": 62,
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5721
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2124": {
      "op": "SHL"
    },
    "2125": {
      "op": "SUB"
    },
    "2126": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "DUP6",
      "path": "39"
    },
    "2127": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2128": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "AND",
      "path": "39"
    },
    "2129": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2131": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2132": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2133": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2134": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5695
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "2136": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2138": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2139": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2141": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2142": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5706
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "2143": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5712
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2144": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5712
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x100"
    },
    "2147": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5712
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2148": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5712
      ],
      "op": "DIV",
      "path": "39"
    },
    "2149": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5712
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2150": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5712
      ],
      "op": "AND",
      "path": "39"
    },
    "2151": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5721
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2152": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5721
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2153": {
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5721
      ],
      "op": "AND",
      "path": "39"
    },
    "2154": {
      "branch": 63,
      "fn": "Dispenser.create",
      "offset": [
        5685,
        5721
      ],
      "op": "EQ",
      "path": "39"
    },
    "2155": {
      "fn": "Dispenser.create",
      "offset": [
        5640,
        5721
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2156": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x8B7"
    },
    "2159": {
      "branch": 63,
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2160": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2162": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2171": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2174": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2176": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2177": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "ADD",
      "path": "39"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "ADD"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "op": "PUSH32",
      "value": "0x44617461746F6B656E20616C7265616479206372656174656400000000000000"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2221": {
      "op": "DUP3"
    },
    "2222": {
      "op": "ADD"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "fn": "Dispenser.create",
      "offset": [
        5619,
        5772
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "op": "SUB"
    },
    "2240": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP6",
      "path": "39",
      "statement": 14
    },
    "2241": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2242": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "AND",
      "path": "39"
    },
    "2243": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2245": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2246": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2247": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2248": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5792
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "2250": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2252": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2253": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2254": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2255": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2257": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2258": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "DUP5",
      "path": "39"
    },
    "2259": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5803
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "2260": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5817
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2261": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5817
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2262": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "DUP10",
      "path": "39",
      "statement": 15
    },
    "2263": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "DUP9",
      "path": "39"
    },
    "2264": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "AND",
      "path": "39"
    },
    "2265": {
      "fn": "Dispenser.create",
      "offset": [
        5782,
        5817
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x100"
    },
    "2268": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2269": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "MUL",
      "path": "39"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "op": "NOT"
    },
    "2279": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2280": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "2281": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "AND",
      "path": "39"
    },
    "2282": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2283": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2284": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2285": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "OR",
      "path": "39"
    },
    "2286": {
      "fn": "Dispenser.create",
      "offset": [
        5813,
        5817
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "2288": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2289": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2290": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "OR",
      "path": "39"
    },
    "2291": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2292": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2293": {
      "fn": "Dispenser.create",
      "offset": [
        5872,
        5903
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 16
    },
    "2294": {
      "fn": "Dispenser.create",
      "offset": [
        5872,
        5903
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2295": {
      "fn": "Dispenser.create",
      "offset": [
        5872,
        5903
      ],
      "op": "ADD",
      "path": "39"
    },
    "2296": {
      "fn": "Dispenser.create",
      "offset": [
        5872,
        5915
      ],
      "op": "DUP14",
      "path": "39"
    },
    "2297": {
      "fn": "Dispenser.create",
      "offset": [
        5872,
        5915
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2298": {
      "fn": "Dispenser.create",
      "offset": [
        5872,
        5915
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2299": {
      "fn": "Dispenser.create",
      "offset": [
        5925,
        5957
      ],
      "op": "SWAP5",
      "path": "39",
      "statement": 17
    },
    "2300": {
      "fn": "Dispenser.create",
      "offset": [
        5925,
        5957
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2301": {
      "fn": "Dispenser.create",
      "offset": [
        5925,
        5957
      ],
      "op": "ADD",
      "path": "39"
    },
    "2302": {
      "fn": "Dispenser.create",
      "offset": [
        5925,
        5970
      ],
      "op": "DUP12",
      "path": "39"
    },
    "2303": {
      "fn": "Dispenser.create",
      "offset": [
        5925,
        5970
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2304": {
      "fn": "Dispenser.create",
      "offset": [
        5925,
        5970
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2305": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6016
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 18,
      "value": "0x3"
    },
    "2307": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6016
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2308": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6016
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2309": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6016
      ],
      "op": "ADD",
      "path": "39"
    },
    "2310": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2311": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2312": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "SWAP9",
      "path": "39"
    },
    "2313": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "DUP11",
      "path": "39"
    },
    "2314": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "AND",
      "path": "39"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "op": "SUB"
    },
    "2323": {
      "op": "NOT"
    },
    "2324": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "SWAP10",
      "path": "39"
    },
    "2325": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "DUP11",
      "path": "39"
    },
    "2326": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "AND",
      "path": "39"
    },
    "2327": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2328": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "OR",
      "path": "39"
    },
    "2329": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2330": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2331": {
      "fn": "Dispenser.create",
      "offset": [
        5980,
        6033
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2332": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 19
    },
    "2333": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2334": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP6",
      "path": "39"
    },
    "2335": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "DUP7",
      "path": "39"
    },
    "2336": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "ADD",
      "path": "39"
    },
    "2337": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2338": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2339": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2340": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2341": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP6",
      "path": "39"
    },
    "2342": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2343": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "2376": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2377": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "2378": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "ADD",
      "path": "39"
    },
    "2379": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2380": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2381": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2382": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP7",
      "path": "39"
    },
    "2383": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "AND",
      "path": "39"
    },
    "2384": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "DUP6",
      "path": "39"
    },
    "2385": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "OR",
      "path": "39"
    },
    "2386": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2387": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SWAP6",
      "path": "39"
    },
    "2388": {
      "fn": "Dispenser.create",
      "offset": [
        6043,
        6073
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2389": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "DUP5",
      "path": "39",
      "statement": 20
    },
    "2390": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2391": {
      "op": "DUP10"
    },
    "2392": {
      "op": "DUP2"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "SWAP1"
    },
    "2395": {
      "op": "DUP2"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "DUP9"
    },
    "2398": {
      "op": "SWAP1"
    },
    "2399": {
      "op": "MSTORE"
    },
    "2400": {
      "op": "SWAP4"
    },
    "2401": {
      "op": "DUP5"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "fn": "Dispenser.create",
      "offset": [
        5827,
        5862
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2405": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x7D0AA581E6EB87E15F58588FF20C39FF6622FC796EC9BB664DF6ED3EB02442C9"
    },
    "2438": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2444": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2445": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2446": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2447": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "SUB",
      "path": "39"
    },
    "2448": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2449": {
      "fn": "Dispenser.create",
      "offset": [
        6088,
        6161
      ],
      "op": "LOG3",
      "path": "39"
    },
    "2450": {
      "fn": "Dispenser.create",
      "offset": [
        6218,
        6232
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 21
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "AND",
      "path": "39"
    },
    "2460": {
      "fn": "Dispenser.create",
      "offset": [
        6207,
        6216
      ],
      "op": "DUP6",
      "path": "39"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "AND",
      "path": "39"
    },
    "2470": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0xAC5C7317D52E88DE62AFF4BA6869A4882A4556557B761158934D2FD32A8B2CA5"
    },
    "2503": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2505": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2506": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2508": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2509": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2510": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2511": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "SUB",
      "path": "39"
    },
    "2512": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2513": {
      "fn": "Dispenser.create",
      "offset": [
        6176,
        6233
      ],
      "op": "LOG3",
      "path": "39"
    },
    "2514": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "POP",
      "path": "39"
    },
    "2515": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "POP",
      "path": "39"
    },
    "2516": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "POP",
      "path": "39"
    },
    "2517": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "POP",
      "path": "39"
    },
    "2518": {
      "fn": "Dispenser.create",
      "offset": [
        5360,
        6240
      ],
      "op": "POP",
      "path": "39"
    },
    "2519": {
      "fn": "Dispenser.create",
      "jump": "o",
      "offset": [
        5360,
        6240
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2520": {
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2521": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x3"
    },
    "2523": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2524": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2525": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2526": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2527": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "LT",
      "path": "39"
    },
    "2528": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x9E8"
    },
    "2531": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2532": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2534": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2535": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "REVERT",
      "path": "39"
    },
    "2536": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2537": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2539": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2540": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2541": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2542": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2544": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2545": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2546": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "2547": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "ADD",
      "path": "39"
    },
    "2548": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "SUB"
    },
    "2557": {
      "offset": [
        1121,
        1152
      ],
      "op": "AND",
      "path": "39"
    },
    "2558": {
      "fn": "Dispenser.create",
      "offset": [
        1121,
        1152
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2559": {
      "op": "POP"
    },
    "2560": {
      "offset": [
        1121,
        1152
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2561": {
      "fn": "Dispenser.create",
      "jump": "o",
      "offset": [
        1121,
        1152
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2562": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2563": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7031,
        7040
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2570": {
      "op": "SHL"
    },
    "2571": {
      "op": "SUB"
    },
    "2572": {
      "offset": [
        2347,
        2370
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2573": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2347,
        2370
      ],
      "op": "AND",
      "path": "39"
    },
    "2574": {
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA29"
    },
    "2577": {
      "offset": [
        2326,
        2426
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2578": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2580": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "offset": [
        2326,
        2426
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2589": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2590": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2592": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "ADD",
      "path": "39"
    },
    "2593": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "2596": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2597": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "2600": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        2326,
        2426
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2601": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2326,
        2426
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2602": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2604": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2605": {
      "op": "PUSH4",
      "value": "0x96FB3EAF"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2614": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2615": {
      "offset": [
        2531,
        2541
      ],
      "op": "CALLER",
      "path": "39"
    },
    "2616": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2618": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2619": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "offset": [
        2471,
        2480
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2622": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2471,
        2480
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2629": {
      "op": "SHL"
    },
    "2630": {
      "op": "SUB"
    },
    "2631": {
      "offset": [
        2512,
        2530
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2632": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2530
      ],
      "op": "AND",
      "path": "39"
    },
    "2633": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2634": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2530
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x96FB3EAF"
    },
    "2639": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2642": {
      "op": "ADD"
    },
    "2643": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2645": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2647": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2648": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2649": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2650": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "SUB",
      "path": "39"
    },
    "2651": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2652": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP7",
      "path": "39"
    },
    "2653": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "GAS",
      "path": "39"
    },
    "2654": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "2655": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2656": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2657": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2658": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA6F"
    },
    "2661": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2662": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2663": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2665": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2666": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "2667": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2668": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2670": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "REVERT",
      "path": "39"
    },
    "2671": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2672": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "2673": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "2674": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "2675": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "2676": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2678": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2679": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2680": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "2682": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "NOT",
      "path": "39"
    },
    "2683": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "2685": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2686": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "2687": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "AND",
      "path": "39"
    },
    "2688": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2689": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "2690": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2691": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2693": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2694": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "2695": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2696": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "2697": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2698": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA93"
    },
    "2701": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2702": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2703": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x193A"
    },
    "2706": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2707": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2708": {
      "offset": [
        2512,
        2622
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2709": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2622
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB7A"
    },
    "2712": {
      "offset": [
        2512,
        2622
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2713": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2512,
        2622
      ],
      "op": "POP",
      "path": "39"
    },
    "2714": {
      "offset": [
        2612,
        2622
      ],
      "op": "CALLER",
      "path": "39"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "offset": [
        2559,
        2622
      ],
      "op": "AND",
      "path": "39"
    },
    "2724": {
      "offset": [
        2575,
        2577
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2731": {
      "op": "SHL"
    },
    "2732": {
      "op": "SUB"
    },
    "2733": {
      "offset": [
        2575,
        2594
      ],
      "op": "AND",
      "path": "39"
    },
    "2734": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2594
      ],
      "op": "PUSH3",
      "path": "39",
      "value": "0x7FFB78"
    },
    "2738": {
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2740": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2741": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2742": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "2747": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "AND",
      "path": "39"
    },
    "2748": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "2750": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "SHL",
      "path": "39"
    },
    "2751": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2752": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2753": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2755": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "2756": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2758": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2760": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2761": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2762": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2763": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "SUB",
      "path": "39"
    },
    "2764": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2765": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP7",
      "path": "39"
    },
    "2766": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "GAS",
      "path": "39"
    },
    "2767": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "2768": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2769": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2770": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2771": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xAE0"
    },
    "2774": {
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2775": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2776": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2778": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2779": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "2780": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2781": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2783": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "REVERT",
      "path": "39"
    },
    "2784": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2785": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "2786": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "2787": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "2788": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "2789": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2791": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2792": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2793": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "2795": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "NOT",
      "path": "39"
    },
    "2796": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "2798": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2799": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "2800": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "AND",
      "path": "39"
    },
    "2801": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2802": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "2803": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2804": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2806": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2807": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "2808": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2809": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "2810": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2811": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB04"
    },
    "2814": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2815": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2816": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "2819": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2820": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2821": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2823": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2824": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2831": {
      "op": "SHL"
    },
    "2832": {
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2833": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2834": {
      "offset": [
        2606,
        2607
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "2836": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2838": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2839": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2847": {
      "op": "SHL"
    },
    "2848": {
      "op": "SUB"
    },
    "2849": {
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2850": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2851": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2852": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2605
      ],
      "op": "AND",
      "path": "39"
    },
    "2853": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2854": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2605
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6352211E"
    },
    "2859": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2862": {
      "op": "ADD"
    },
    "2863": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2865": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2867": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2868": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2869": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP4",
      "path": "39"
    },
    "2870": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "SUB",
      "path": "39"
    },
    "2871": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2872": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP7",
      "path": "39"
    },
    "2873": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "GAS",
      "path": "39"
    },
    "2874": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "2875": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2876": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2877": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2878": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB4B"
    },
    "2881": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2882": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2883": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2885": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2886": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "2887": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2888": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2890": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "REVERT",
      "path": "39"
    },
    "2891": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2892": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "2893": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "2894": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "2895": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "2896": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2898": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2899": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "2900": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "2902": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "NOT",
      "path": "39"
    },
    "2903": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "2905": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2906": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "2907": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "AND",
      "path": "39"
    },
    "2908": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2909": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "2910": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2911": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2913": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2914": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "2915": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2916": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "2917": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2918": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB6F"
    },
    "2921": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "2922": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2923": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "2926": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2927": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2934": {
      "op": "SHL"
    },
    "2935": {
      "op": "SUB"
    },
    "2936": {
      "offset": [
        2559,
        2622
      ],
      "op": "AND",
      "path": "39"
    },
    "2937": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2559,
        2622
      ],
      "op": "EQ",
      "path": "39"
    },
    "2938": {
      "offset": [
        2512,
        2622
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2939": {
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB96"
    },
    "2942": {
      "offset": [
        2491,
        2674
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2943": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2945": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "offset": [
        2491,
        2674
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2954": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2955": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2957": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "ADD",
      "path": "39"
    },
    "2958": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "2961": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2962": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x199E"
    },
    "2965": {
      "fn": "Dispenser.deactivate",
      "jump": "i",
      "offset": [
        2491,
        2674
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2966": {
      "fn": "Dispenser.deactivate",
      "offset": [
        2491,
        2674
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2973": {
      "op": "SHL"
    },
    "2974": {
      "op": "SUB"
    },
    "2975": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 22
    },
    "2976": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "AND",
      "path": "39"
    },
    "2977": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7082,
        7087
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2979": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2980": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2981": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2982": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7061
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "2984": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2986": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2987": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2989": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2990": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2991": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7072
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "2992": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7087
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2993": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7087
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2996": {
      "op": "NOT"
    },
    "2997": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7087
      ],
      "op": "AND",
      "path": "39"
    },
    "2998": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7087
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2999": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7051,
        7087
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3000": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7102,
        7133
      ],
      "op": "MLOAD",
      "path": "39",
      "statement": 23
    },
    "3001": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7102,
        7133
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x393F01061139648745EA000BB047BBE1785BD3A19D3A9C90F6747E1D2357D2B8"
    },
    "3034": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7102,
        7133
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3035": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7082,
        7087
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3036": {
      "fn": "Dispenser.deactivate",
      "offset": [
        7102,
        7133
      ],
      "op": "LOG2",
      "path": "39"
    },
    "3037": {
      "offset": [
        2265,
        2692
      ],
      "op": "POP",
      "path": "39"
    },
    "3038": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "POP",
      "path": "39"
    },
    "3039": {
      "fn": "Dispenser.deactivate",
      "offset": [
        6973,
        7140
      ],
      "op": "POP",
      "path": "39"
    },
    "3040": {
      "fn": "Dispenser.deactivate",
      "jump": "o",
      "offset": [
        6973,
        7140
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3041": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3042": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7440,
        7449
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "offset": [
        2347,
        2370
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3052": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2347,
        2370
      ],
      "op": "AND",
      "path": "39"
    },
    "3053": {
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xC08"
    },
    "3056": {
      "offset": [
        2326,
        2426
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3057": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3059": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "offset": [
        2326,
        2426
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3068": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3069": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3071": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "ADD",
      "path": "39"
    },
    "3072": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "3075": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3076": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "3079": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        2326,
        2426
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3080": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2326,
        2426
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3081": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3083": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3084": {
      "op": "PUSH4",
      "value": "0x96FB3EAF"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3091": {
      "op": "SHL"
    },
    "3092": {
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3093": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3094": {
      "offset": [
        2531,
        2541
      ],
      "op": "CALLER",
      "path": "39"
    },
    "3095": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3097": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3098": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "3099": {
      "op": "MSTORE"
    },
    "3100": {
      "offset": [
        2471,
        2480
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3101": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2471,
        2480
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "op": "SUB"
    },
    "3110": {
      "offset": [
        2512,
        2530
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3111": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2530
      ],
      "op": "AND",
      "path": "39"
    },
    "3112": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3113": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2530
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x96FB3EAF"
    },
    "3118": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3121": {
      "op": "ADD"
    },
    "3122": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3124": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3126": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3127": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3128": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3129": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "SUB",
      "path": "39"
    },
    "3130": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3131": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP7",
      "path": "39"
    },
    "3132": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "GAS",
      "path": "39"
    },
    "3133": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "3134": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3135": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3136": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3137": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xC4E"
    },
    "3140": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3141": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3142": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3144": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3145": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "3146": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3147": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3149": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3150": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3151": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "3152": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "3153": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "3154": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "3155": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3157": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3158": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3159": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3161": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "NOT",
      "path": "39"
    },
    "3162": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3164": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3165": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "3166": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "AND",
      "path": "39"
    },
    "3167": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3168": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "3169": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3170": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3172": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3173": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "3174": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3175": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "3176": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3177": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xC72"
    },
    "3180": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3181": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3182": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x193A"
    },
    "3185": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3186": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3187": {
      "offset": [
        2512,
        2622
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3188": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2622
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD59"
    },
    "3191": {
      "offset": [
        2512,
        2622
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3192": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2512,
        2622
      ],
      "op": "POP",
      "path": "39"
    },
    "3193": {
      "offset": [
        2612,
        2622
      ],
      "op": "CALLER",
      "path": "39"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3200": {
      "op": "SHL"
    },
    "3201": {
      "op": "SUB"
    },
    "3202": {
      "offset": [
        2559,
        2622
      ],
      "op": "AND",
      "path": "39"
    },
    "3203": {
      "offset": [
        2575,
        2577
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "SUB"
    },
    "3212": {
      "offset": [
        2575,
        2594
      ],
      "op": "AND",
      "path": "39"
    },
    "3213": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2594
      ],
      "op": "PUSH3",
      "path": "39",
      "value": "0x7FFB78"
    },
    "3217": {
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3219": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3220": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3221": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "3226": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "AND",
      "path": "39"
    },
    "3227": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "3229": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "SHL",
      "path": "39"
    },
    "3230": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3231": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3232": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3234": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "3235": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3237": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3239": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3240": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3241": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3242": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "SUB",
      "path": "39"
    },
    "3243": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3244": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP7",
      "path": "39"
    },
    "3245": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "GAS",
      "path": "39"
    },
    "3246": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "3247": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3248": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3249": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3250": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xCBF"
    },
    "3253": {
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3254": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3255": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3257": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3258": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "3259": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3260": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3262": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3263": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3264": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "3265": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "3266": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "3267": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "3268": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3270": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3271": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3272": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3274": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "NOT",
      "path": "39"
    },
    "3275": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3277": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3278": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "3279": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "AND",
      "path": "39"
    },
    "3280": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3281": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "3282": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3283": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3285": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3286": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "3287": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3288": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "3289": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3290": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xCE3"
    },
    "3293": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3294": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3295": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "3298": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3299": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3300": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3302": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3303": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3310": {
      "op": "SHL"
    },
    "3311": {
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3312": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3313": {
      "offset": [
        2606,
        2607
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "3315": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3317": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3318": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "3319": {
      "op": "MSTORE"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3326": {
      "op": "SHL"
    },
    "3327": {
      "op": "SUB"
    },
    "3328": {
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3329": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3330": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3331": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2605
      ],
      "op": "AND",
      "path": "39"
    },
    "3332": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3333": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2605
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6352211E"
    },
    "3338": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3344": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3346": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3347": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3348": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3349": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "SUB",
      "path": "39"
    },
    "3350": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3351": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP7",
      "path": "39"
    },
    "3352": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "GAS",
      "path": "39"
    },
    "3353": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "3354": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3355": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3356": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3357": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD2A"
    },
    "3360": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3361": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3362": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3364": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3365": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "3366": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3367": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3369": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3370": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3371": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "3372": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "3373": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "3374": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "3375": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3377": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3378": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3379": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3381": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "NOT",
      "path": "39"
    },
    "3382": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3384": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3385": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "3386": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "AND",
      "path": "39"
    },
    "3387": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3388": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "3389": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3390": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3392": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3393": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "3394": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3395": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "3396": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3397": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD4E"
    },
    "3400": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3401": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3402": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "3405": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3406": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "op": "SUB"
    },
    "3415": {
      "offset": [
        2559,
        2622
      ],
      "op": "AND",
      "path": "39"
    },
    "3416": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2559,
        2622
      ],
      "op": "EQ",
      "path": "39"
    },
    "3417": {
      "offset": [
        2512,
        2622
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3418": {
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD75"
    },
    "3421": {
      "offset": [
        2491,
        2674
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3422": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3424": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3431": {
      "op": "SHL"
    },
    "3432": {
      "offset": [
        2491,
        2674
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3433": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3434": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3436": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "ADD",
      "path": "39"
    },
    "3437": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "3440": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3441": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x199E"
    },
    "3444": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "i",
      "offset": [
        2491,
        2674
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3445": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        2491,
        2674
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "DUP5",
      "path": "39",
      "statement": 24
    },
    "3455": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3456": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "AND",
      "path": "39"
    },
    "3457": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3459": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3460": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3461": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3462": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7470
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "3464": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3466": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3467": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3469": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3470": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3471": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3472": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7496
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x3"
    },
    "3474": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7496
      ],
      "op": "ADD",
      "path": "39"
    },
    "3475": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3476": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3483": {
      "op": "SHL"
    },
    "3484": {
      "op": "SUB"
    },
    "3485": {
      "op": "NOT"
    },
    "3486": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "AND",
      "path": "39"
    },
    "3487": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "3488": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "DUP9",
      "path": "39"
    },
    "3489": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "AND",
      "path": "39"
    },
    "3490": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "3491": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "DUP6",
      "path": "39"
    },
    "3492": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "OR",
      "path": "39"
    },
    "3493": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3494": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7515
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3495": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7530,
        7590
      ],
      "op": "MLOAD",
      "path": "39",
      "statement": 25
    },
    "3496": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7530,
        7590
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0xAC5C7317D52E88DE62AFF4BA6869A4882A4556557B761158934D2FD32A8B2CA5"
    },
    "3529": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7530,
        7590
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3530": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7460,
        7481
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3531": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7530,
        7590
      ],
      "op": "LOG3",
      "path": "39"
    },
    "3532": {
      "offset": [
        2265,
        2692
      ],
      "op": "POP",
      "path": "39"
    },
    "3533": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "POP",
      "path": "39"
    },
    "3534": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "POP",
      "path": "39"
    },
    "3535": {
      "fn": "Dispenser.setAllowedSwapper",
      "offset": [
        7348,
        7597
      ],
      "op": "POP",
      "path": "39"
    },
    "3536": {
      "fn": "Dispenser.setAllowedSwapper",
      "jump": "o",
      "offset": [
        7348,
        7597
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3537": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3538": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3540": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3541": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3542": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3543": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3544": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3545": {
      "fn": "Dispenser.status",
      "offset": [
        4343,
        4354
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "op": "SUB"
    },
    "3554": {
      "fn": "Dispenser.status",
      "offset": [
        4497,
        4520
      ],
      "op": "DUP9",
      "path": "39",
      "statement": 26
    },
    "3555": {
      "branch": 64,
      "fn": "Dispenser.status",
      "offset": [
        4497,
        4520
      ],
      "op": "AND",
      "path": "39"
    },
    "3556": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDFF"
    },
    "3559": {
      "branch": 64,
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3560": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3562": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3569": {
      "op": "SHL"
    },
    "3570": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3571": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3572": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3574": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "ADD",
      "path": "39"
    },
    "3575": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "3578": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3579": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "3582": {
      "fn": "Dispenser.status",
      "jump": "i",
      "offset": [
        4476,
        4576
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3583": {
      "fn": "Dispenser.status",
      "offset": [
        4476,
        4576
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP9",
      "path": "39",
      "statement": 27
    },
    "3593": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3594": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "AND",
      "path": "39"
    },
    "3595": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3597": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3598": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3599": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3600": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4605
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "3602": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3604": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3605": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3606": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3607": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3609": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3610": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3611": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3612": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3613": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3614": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3615": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "3617": {
      "fn": "Dispenser.status",
      "offset": [
        4690,
        4721
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 28
    },
    "3618": {
      "fn": "Dispenser.status",
      "offset": [
        4690,
        4721
      ],
      "op": "ADD",
      "path": "39"
    },
    "3619": {
      "fn": "Dispenser.status",
      "offset": [
        4690,
        4721
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3620": {
      "fn": "Dispenser.status",
      "offset": [
        4744,
        4776
      ],
      "op": "SWAP2",
      "path": "39",
      "statement": 29
    },
    "3621": {
      "fn": "Dispenser.status",
      "offset": [
        4744,
        4776
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3622": {
      "fn": "Dispenser.status",
      "offset": [
        4744,
        4776
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3623": {
      "fn": "Dispenser.status",
      "offset": [
        4744,
        4776
      ],
      "op": "ADD",
      "path": "39"
    },
    "3624": {
      "fn": "Dispenser.status",
      "offset": [
        4744,
        4776
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3625": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "SWAP3",
      "path": "39",
      "statement": 30
    },
    "3626": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3627": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3634": {
      "op": "SHL"
    },
    "3635": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3636": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3637": {
      "fn": "Dispenser.status",
      "offset": [
        4894,
        4898
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "3638": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3640": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3641": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "39"
    },
    "3642": {
      "op": "MSTORE"
    },
    "3643": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "3645": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3646": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "AND",
      "path": "39"
    },
    "3647": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "SWAP13",
      "path": "39"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4623
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x100"
    },
    "3652": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP1",
      "path": "39",
      "statement": 31
    },
    "3653": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3654": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "DIV",
      "path": "39"
    },
    "3655": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3656": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "3657": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "AND",
      "path": "39"
    },
    "3658": {
      "fn": "Dispenser.status",
      "offset": [
        4641,
        4668
      ],
      "op": "SWAP10",
      "path": "39"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "fn": "Dispenser.status",
      "offset": [
        4690,
        4721
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3661": {
      "fn": "Dispenser.status",
      "offset": [
        4690,
        4721
      ],
      "op": "SWAP7",
      "path": "39"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "fn": "Dispenser.status",
      "offset": [
        4744,
        4776
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "DUP10",
      "path": "39"
    },
    "3666": {
      "fn": "Dispenser.status",
      "offset": [
        4595,
        4616
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3667": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4885
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x70A08231"
    },
    "3672": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4885
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3678": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3680": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3681": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3682": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3683": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "SUB",
      "path": "39"
    },
    "3684": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3685": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP7",
      "path": "39"
    },
    "3686": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "GAS",
      "path": "39"
    },
    "3687": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "3688": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3689": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3690": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3691": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE78"
    },
    "3694": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3695": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3696": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3698": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3699": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "3700": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3701": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3703": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3704": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3705": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "39"
    },
    "3706": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "39"
    },
    "3707": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "39"
    },
    "3708": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "39"
    },
    "3709": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3711": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3712": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3713": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3715": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "NOT",
      "path": "39"
    },
    "3716": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3718": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3719": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "39"
    },
    "3720": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "AND",
      "path": "39"
    },
    "3721": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3722": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "39"
    },
    "3723": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3724": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3726": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3727": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "39"
    },
    "3728": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3729": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "39"
    },
    "3730": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3731": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE9C"
    },
    "3734": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3735": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3736": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1921"
    },
    "3739": {
      "fn": "Dispenser.status",
      "jump": "i",
      "offset": [
        4862,
        4900
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3740": {
      "fn": "Dispenser.status",
      "offset": [
        4862,
        4900
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3741": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 32,
      "value": "0x40"
    },
    "3743": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3744": {
      "op": "PUSH4",
      "value": "0x55138F0D"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3753": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3754": {
      "fn": "Dispenser.status",
      "offset": [
        4952,
        4956
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "3755": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3757": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3758": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "ADD",
      "path": "39"
    },
    "3759": {
      "op": "MSTORE"
    },
    "3760": {
      "fn": "Dispenser.status",
      "offset": [
        4852,
        4900
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3761": {
      "fn": "Dispenser.status",
      "offset": [
        4852,
        4900
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "op": "SUB"
    },
    "3771": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4943
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3772": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4943
      ],
      "op": "AND",
      "path": "39"
    },
    "3773": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4943
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3774": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4943
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xAA271E1A"
    },
    "3779": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4943
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3782": {
      "op": "ADD"
    },
    "3783": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3785": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3787": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3788": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3789": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3790": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "SUB",
      "path": "39"
    },
    "3791": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3792": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP7",
      "path": "39"
    },
    "3793": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "GAS",
      "path": "39"
    },
    "3794": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "3795": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3796": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3797": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3798": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xEE3"
    },
    "3801": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3802": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3803": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3805": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3806": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "3807": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3808": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3810": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3811": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3812": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "POP",
      "path": "39"
    },
    "3813": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "POP",
      "path": "39"
    },
    "3814": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "POP",
      "path": "39"
    },
    "3815": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "POP",
      "path": "39"
    },
    "3816": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3818": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3819": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3820": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3822": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "NOT",
      "path": "39"
    },
    "3823": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "3825": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3826": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "ADD",
      "path": "39"
    },
    "3827": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "AND",
      "path": "39"
    },
    "3828": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3829": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "ADD",
      "path": "39"
    },
    "3830": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3831": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3833": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3834": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "POP",
      "path": "39"
    },
    "3835": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3836": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "ADD",
      "path": "39"
    },
    "3837": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3838": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF07"
    },
    "3841": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3842": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3843": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x193A"
    },
    "3846": {
      "fn": "Dispenser.status",
      "jump": "i",
      "offset": [
        4921,
        4958
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3847": {
      "fn": "Dispenser.status",
      "offset": [
        4921,
        4958
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3854": {
      "op": "SHL"
    },
    "3855": {
      "op": "SUB"
    },
    "3856": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "SWAP10",
      "path": "39",
      "statement": 33
    },
    "3857": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "DUP11",
      "path": "39"
    },
    "3858": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "AND",
      "path": "39"
    },
    "3859": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3861": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3862": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3863": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3864": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        4995
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "3866": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3868": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3869": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3871": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3872": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5006
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3873": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x3"
    },
    "3875": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "ADD",
      "path": "39"
    },
    "3876": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3877": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP9",
      "path": "39"
    },
    "3878": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP11",
      "path": "39"
    },
    "3879": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP8",
      "path": "39"
    },
    "3880": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP10",
      "path": "39"
    },
    "3881": {
      "fn": "Dispenser.status",
      "offset": [
        4910,
        4958
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3882": {
      "fn": "Dispenser.status",
      "offset": [
        4910,
        4958
      ],
      "op": "SWAP9",
      "path": "39"
    },
    "3883": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP6",
      "path": "39"
    },
    "3884": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP8",
      "path": "39"
    },
    "3885": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "3886": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP7",
      "path": "39"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3889": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "3890": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3891": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3892": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "AND",
      "path": "39"
    },
    "3893": {
      "fn": "Dispenser.status",
      "offset": [
        4985,
        5021
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3894": {
      "fn": "Dispenser.status",
      "offset": [
        4276,
        5028
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "fn": "Dispenser.status",
      "jump": "o",
      "offset": [
        4276,
        5028
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3898": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3899": {
      "fn": "Dispenser.activate",
      "offset": [
        6576,
        6585
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "op": "SUB"
    },
    "3908": {
      "offset": [
        2347,
        2370
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3909": {
      "branch": 65,
      "fn": "Dispenser.activate",
      "offset": [
        2347,
        2370
      ],
      "op": "AND",
      "path": "39"
    },
    "3910": {
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF61"
    },
    "3913": {
      "branch": 65,
      "offset": [
        2326,
        2426
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3914": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3916": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3923": {
      "op": "SHL"
    },
    "3924": {
      "offset": [
        2326,
        2426
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3925": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3926": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3928": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "ADD",
      "path": "39"
    },
    "3929": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "3932": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3933": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "3936": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        2326,
        2426
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3937": {
      "fn": "Dispenser.activate",
      "offset": [
        2326,
        2426
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3938": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3940": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3941": {
      "op": "PUSH4",
      "value": "0x96FB3EAF"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3948": {
      "op": "SHL"
    },
    "3949": {
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3950": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3951": {
      "offset": [
        2531,
        2541
      ],
      "op": "CALLER",
      "path": "39"
    },
    "3952": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3954": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3955": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "offset": [
        2471,
        2480
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3958": {
      "fn": "Dispenser.activate",
      "offset": [
        2471,
        2480
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3965": {
      "op": "SHL"
    },
    "3966": {
      "op": "SUB"
    },
    "3967": {
      "offset": [
        2512,
        2530
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3968": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2530
      ],
      "op": "AND",
      "path": "39"
    },
    "3969": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3970": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2530
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x96FB3EAF"
    },
    "3975": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3981": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3983": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3984": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3985": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3986": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "SUB",
      "path": "39"
    },
    "3987": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3988": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP7",
      "path": "39"
    },
    "3989": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "GAS",
      "path": "39"
    },
    "3990": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "3991": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3992": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3993": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3994": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFA7"
    },
    "3997": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3998": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3999": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4001": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4002": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4003": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4004": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4006": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4007": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4008": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "4009": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "4010": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "4011": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "4012": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4014": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4015": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4016": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4018": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "NOT",
      "path": "39"
    },
    "4019": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4021": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4022": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "4023": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "AND",
      "path": "39"
    },
    "4024": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4025": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "4026": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4027": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4029": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4030": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "POP",
      "path": "39"
    },
    "4031": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4032": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "ADD",
      "path": "39"
    },
    "4033": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4034": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFCB"
    },
    "4037": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4038": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4039": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x193A"
    },
    "4042": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4043": {
      "branch": 66,
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2542
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4044": {
      "offset": [
        2512,
        2622
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4045": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2622
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10B2"
    },
    "4048": {
      "branch": 66,
      "offset": [
        2512,
        2622
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4049": {
      "fn": "Dispenser.activate",
      "offset": [
        2512,
        2622
      ],
      "op": "POP",
      "path": "39"
    },
    "4050": {
      "offset": [
        2612,
        2622
      ],
      "op": "CALLER",
      "path": "39"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "op": "SUB"
    },
    "4059": {
      "offset": [
        2559,
        2622
      ],
      "op": "AND",
      "path": "39"
    },
    "4060": {
      "offset": [
        2575,
        2577
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4067": {
      "op": "SHL"
    },
    "4068": {
      "op": "SUB"
    },
    "4069": {
      "offset": [
        2575,
        2594
      ],
      "op": "AND",
      "path": "39"
    },
    "4070": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2594
      ],
      "op": "PUSH3",
      "path": "39",
      "value": "0x7FFB78"
    },
    "4074": {
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4076": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4077": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4078": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "4083": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "AND",
      "path": "39"
    },
    "4084": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "4086": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "SHL",
      "path": "39"
    },
    "4087": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4088": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4089": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4091": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "4092": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4094": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4096": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4097": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4098": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4099": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "SUB",
      "path": "39"
    },
    "4100": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4101": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP7",
      "path": "39"
    },
    "4102": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "GAS",
      "path": "39"
    },
    "4103": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "4104": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4105": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4106": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4107": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1018"
    },
    "4110": {
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4111": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4112": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4114": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4115": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4116": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4117": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4119": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4120": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4121": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "4122": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "4123": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "4124": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "4125": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4127": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4128": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4129": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4131": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "NOT",
      "path": "39"
    },
    "4132": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4134": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4135": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "4136": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "AND",
      "path": "39"
    },
    "4137": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4138": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "4139": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4140": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4142": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4143": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "POP",
      "path": "39"
    },
    "4144": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4145": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "39"
    },
    "4146": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4147": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x103C"
    },
    "4150": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4151": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4152": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "4155": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4156": {
      "fn": "Dispenser.activate",
      "offset": [
        2575,
        2596
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4157": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4159": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4160": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4167": {
      "op": "SHL"
    },
    "4168": {
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4169": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4170": {
      "offset": [
        2606,
        2607
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "4172": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4174": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4175": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "4176": {
      "op": "MSTORE"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4183": {
      "op": "SHL"
    },
    "4184": {
      "op": "SUB"
    },
    "4185": {
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4186": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4187": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4188": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2605
      ],
      "op": "AND",
      "path": "39"
    },
    "4189": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4190": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2605
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6352211E"
    },
    "4195": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4201": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4203": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4204": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4205": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4206": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "SUB",
      "path": "39"
    },
    "4207": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4208": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP7",
      "path": "39"
    },
    "4209": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "GAS",
      "path": "39"
    },
    "4210": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "4211": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4212": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4213": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4214": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1083"
    },
    "4217": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4218": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4219": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4221": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4222": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4223": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4224": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4226": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4227": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4228": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "4229": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "4230": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "4231": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "4232": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4234": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4235": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4236": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4238": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "NOT",
      "path": "39"
    },
    "4239": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4241": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4242": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "4243": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "AND",
      "path": "39"
    },
    "4244": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4245": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "4246": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4247": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4249": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4250": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "POP",
      "path": "39"
    },
    "4251": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4252": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "ADD",
      "path": "39"
    },
    "4253": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4254": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10A7"
    },
    "4257": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4258": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4259": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "4262": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4263": {
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2608
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4270": {
      "op": "SHL"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "offset": [
        2559,
        2622
      ],
      "op": "AND",
      "path": "39"
    },
    "4273": {
      "branch": 67,
      "fn": "Dispenser.activate",
      "offset": [
        2559,
        2622
      ],
      "op": "EQ",
      "path": "39"
    },
    "4274": {
      "offset": [
        2512,
        2622
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4275": {
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10CE"
    },
    "4278": {
      "branch": 67,
      "offset": [
        2491,
        2674
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4279": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4281": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4288": {
      "op": "SHL"
    },
    "4289": {
      "offset": [
        2491,
        2674
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4290": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4291": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4293": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "ADD",
      "path": "39"
    },
    "4294": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "4297": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4298": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x199E"
    },
    "4301": {
      "fn": "Dispenser.activate",
      "jump": "i",
      "offset": [
        2491,
        2674
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4302": {
      "fn": "Dispenser.activate",
      "offset": [
        2491,
        2674
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "op": "SUB"
    },
    "4311": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "DUP6",
      "path": "39",
      "statement": 34
    },
    "4312": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "AND",
      "path": "39"
    },
    "4313": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4315": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4316": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4317": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4318": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6606
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "4320": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4322": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4323": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4324": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4325": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4327": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4328": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4329": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "4330": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4331": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4334": {
      "op": "NOT"
    },
    "4335": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "AND",
      "path": "39"
    },
    "4336": {
      "fn": "Dispenser.activate",
      "offset": [
        6627,
        6631
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "4338": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4339": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4340": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "OR",
      "path": "39"
    },
    "4341": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4342": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6631
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4343": {
      "fn": "Dispenser.activate",
      "offset": [
        6641,
        6672
      ],
      "op": "DUP2",
      "path": "39",
      "statement": 35
    },
    "4344": {
      "fn": "Dispenser.activate",
      "offset": [
        6641,
        6672
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4345": {
      "fn": "Dispenser.activate",
      "offset": [
        6641,
        6672
      ],
      "op": "ADD",
      "path": "39"
    },
    "4346": {
      "fn": "Dispenser.activate",
      "offset": [
        6641,
        6684
      ],
      "op": "DUP11",
      "path": "39"
    },
    "4347": {
      "fn": "Dispenser.activate",
      "offset": [
        6641,
        6684
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4348": {
      "fn": "Dispenser.activate",
      "offset": [
        6641,
        6684
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4349": {
      "fn": "Dispenser.activate",
      "offset": [
        6694,
        6726
      ],
      "op": "SWAP3",
      "path": "39",
      "statement": 36
    },
    "4350": {
      "fn": "Dispenser.activate",
      "offset": [
        6694,
        6726
      ],
      "op": "ADD",
      "path": "39"
    },
    "4351": {
      "fn": "Dispenser.activate",
      "offset": [
        6694,
        6739
      ],
      "op": "DUP8",
      "path": "39"
    },
    "4352": {
      "fn": "Dispenser.activate",
      "offset": [
        6694,
        6739
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4353": {
      "fn": "Dispenser.activate",
      "offset": [
        6694,
        6739
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4354": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6763
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 37,
      "value": "0x3"
    },
    "4356": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4357": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4358": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "4359": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4360": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "ADD",
      "path": "39"
    },
    "4361": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4362": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4363": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4364": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4365": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "4398": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4399": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4400": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "ADD",
      "path": "39"
    },
    "4401": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4402": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4409": {
      "op": "SHL"
    },
    "4410": {
      "op": "SUB"
    },
    "4411": {
      "op": "NOT"
    },
    "4412": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "AND",
      "path": "39"
    },
    "4413": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "DUP5",
      "path": "39"
    },
    "4414": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "OR",
      "path": "39"
    },
    "4415": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4416": {
      "fn": "Dispenser.activate",
      "offset": [
        6749,
        6779
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4417": {
      "fn": "Dispenser.activate",
      "offset": [
        6794,
        6823
      ],
      "op": "MLOAD",
      "path": "39",
      "statement": 38
    },
    "4418": {
      "fn": "Dispenser.activate",
      "offset": [
        6794,
        6823
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0xE9372084CB52C5392AFEE4B9D79D131E04B1E65676088D50A8F39FFFB16A8745"
    },
    "4451": {
      "fn": "Dispenser.activate",
      "offset": [
        6794,
        6823
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4452": {
      "fn": "Dispenser.activate",
      "offset": [
        6596,
        6617
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4453": {
      "fn": "Dispenser.activate",
      "offset": [
        6794,
        6823
      ],
      "op": "LOG2",
      "path": "39"
    },
    "4454": {
      "offset": [
        2265,
        2692
      ],
      "op": "POP",
      "path": "39"
    },
    "4455": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "POP",
      "path": "39"
    },
    "4456": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "POP",
      "path": "39"
    },
    "4457": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "POP",
      "path": "39"
    },
    "4458": {
      "fn": "Dispenser.activate",
      "offset": [
        6474,
        6830
      ],
      "op": "POP",
      "path": "39"
    },
    "4459": {
      "fn": "Dispenser.activate",
      "jump": "o",
      "offset": [
        6474,
        6830
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4460": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4461": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9843,
        9852
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4468": {
      "op": "SHL"
    },
    "4469": {
      "op": "SUB"
    },
    "4470": {
      "offset": [
        2829,
        2852
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4471": {
      "branch": 68,
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2829,
        2852
      ],
      "op": "AND",
      "path": "39"
    },
    "4472": {
      "offset": [
        2808,
        2908
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1193"
    },
    "4475": {
      "branch": 68,
      "offset": [
        2808,
        2908
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4476": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4478": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4485": {
      "op": "SHL"
    },
    "4486": {
      "offset": [
        2808,
        2908
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4487": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4488": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4490": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "ADD",
      "path": "39"
    },
    "4491": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "4494": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4495": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "4498": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        2808,
        2908
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4499": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2808,
        2908
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4500": {
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4502": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4503": {
      "op": "PUSH4",
      "value": "0x96FB3EAF"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4510": {
      "op": "SHL"
    },
    "4511": {
      "offset": [
        2994,
        3024
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4512": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4513": {
      "offset": [
        3013,
        3023
      ],
      "op": "CALLER",
      "path": "39"
    },
    "4514": {
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4516": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4517": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "ADD",
      "path": "39"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "offset": [
        2953,
        2962
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4520": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2953,
        2962
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "SUB"
    },
    "4529": {
      "offset": [
        2994,
        3012
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4530": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3012
      ],
      "op": "AND",
      "path": "39"
    },
    "4531": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3012
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4532": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3012
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x96FB3EAF"
    },
    "4537": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3012
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4540": {
      "op": "ADD"
    },
    "4541": {
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4543": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4545": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4546": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4547": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4548": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "SUB",
      "path": "39"
    },
    "4549": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4550": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP7",
      "path": "39"
    },
    "4551": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "GAS",
      "path": "39"
    },
    "4552": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "4553": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4554": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4555": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4556": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x11D9"
    },
    "4559": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4560": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4561": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4563": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4564": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4565": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4566": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4568": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4569": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4570": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "POP",
      "path": "39"
    },
    "4571": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "POP",
      "path": "39"
    },
    "4572": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "POP",
      "path": "39"
    },
    "4573": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "POP",
      "path": "39"
    },
    "4574": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4576": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4577": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4578": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4580": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "NOT",
      "path": "39"
    },
    "4581": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4583": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4584": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "ADD",
      "path": "39"
    },
    "4585": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "AND",
      "path": "39"
    },
    "4586": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4587": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "ADD",
      "path": "39"
    },
    "4588": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4589": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4591": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4592": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "POP",
      "path": "39"
    },
    "4593": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4594": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "ADD",
      "path": "39"
    },
    "4595": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4596": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x11FD"
    },
    "4599": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4600": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4601": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x193A"
    },
    "4604": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        2994,
        3024
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4605": {
      "branch": 69,
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3024
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4606": {
      "offset": [
        2994,
        3104
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4607": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3104
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x12E4"
    },
    "4610": {
      "branch": 69,
      "offset": [
        2994,
        3104
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4611": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3104
      ],
      "op": "POP",
      "path": "39"
    },
    "4612": {
      "offset": [
        3094,
        3104
      ],
      "op": "CALLER",
      "path": "39"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4619": {
      "op": "SHL"
    },
    "4620": {
      "op": "SUB"
    },
    "4621": {
      "offset": [
        3041,
        3104
      ],
      "op": "AND",
      "path": "39"
    },
    "4622": {
      "offset": [
        3057,
        3059
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4629": {
      "op": "SHL"
    },
    "4630": {
      "op": "SUB"
    },
    "4631": {
      "offset": [
        3057,
        3076
      ],
      "op": "AND",
      "path": "39"
    },
    "4632": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3076
      ],
      "op": "PUSH3",
      "path": "39",
      "value": "0x7FFB78"
    },
    "4636": {
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4638": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4639": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4640": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "4645": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "AND",
      "path": "39"
    },
    "4646": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "4648": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "SHL",
      "path": "39"
    },
    "4649": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4650": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4651": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4653": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "ADD",
      "path": "39"
    },
    "4654": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4656": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4658": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4659": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4660": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4661": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "SUB",
      "path": "39"
    },
    "4662": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4663": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP7",
      "path": "39"
    },
    "4664": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "GAS",
      "path": "39"
    },
    "4665": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "4666": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4667": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4668": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4669": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x124A"
    },
    "4672": {
      "offset": [
        3057,
        3078
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4673": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4674": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4676": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4677": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4678": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4679": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4681": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4682": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4683": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "POP",
      "path": "39"
    },
    "4684": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "POP",
      "path": "39"
    },
    "4685": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "POP",
      "path": "39"
    },
    "4686": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "POP",
      "path": "39"
    },
    "4687": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4689": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4690": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4691": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4693": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "NOT",
      "path": "39"
    },
    "4694": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4696": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4697": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "ADD",
      "path": "39"
    },
    "4698": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "AND",
      "path": "39"
    },
    "4699": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4700": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "ADD",
      "path": "39"
    },
    "4701": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4702": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4704": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4705": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "POP",
      "path": "39"
    },
    "4706": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4707": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "ADD",
      "path": "39"
    },
    "4708": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4709": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x126E"
    },
    "4712": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4713": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4714": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "4717": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        3057,
        3078
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4718": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3057,
        3078
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4719": {
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4721": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4722": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "offset": [
        3041,
        3090
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4731": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4732": {
      "offset": [
        3088,
        3089
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "4734": {
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4736": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4737": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "ADD",
      "path": "39"
    },
    "4738": {
      "op": "MSTORE"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "op": "SUB"
    },
    "4747": {
      "offset": [
        3041,
        3087
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4748": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3087
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4749": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3087
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4750": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3087
      ],
      "op": "AND",
      "path": "39"
    },
    "4751": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3087
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4752": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3087
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6352211E"
    },
    "4757": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3087
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4763": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4765": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4766": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4767": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4768": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "SUB",
      "path": "39"
    },
    "4769": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4770": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP7",
      "path": "39"
    },
    "4771": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "GAS",
      "path": "39"
    },
    "4772": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "4773": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4774": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4775": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4776": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x12B5"
    },
    "4779": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4780": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4781": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4783": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4784": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4785": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4786": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4788": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4789": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4790": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "POP",
      "path": "39"
    },
    "4791": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "POP",
      "path": "39"
    },
    "4792": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "POP",
      "path": "39"
    },
    "4793": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "POP",
      "path": "39"
    },
    "4794": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4796": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4797": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4798": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4800": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "NOT",
      "path": "39"
    },
    "4801": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "4803": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4804": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "ADD",
      "path": "39"
    },
    "4805": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "AND",
      "path": "39"
    },
    "4806": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4807": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "ADD",
      "path": "39"
    },
    "4808": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4809": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4811": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4812": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "POP",
      "path": "39"
    },
    "4813": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4814": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "ADD",
      "path": "39"
    },
    "4815": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4816": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x12D9"
    },
    "4819": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4820": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4821": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "4824": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        3041,
        3090
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4825": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3090
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4832": {
      "op": "SHL"
    },
    "4833": {
      "op": "SUB"
    },
    "4834": {
      "offset": [
        3041,
        3104
      ],
      "op": "AND",
      "path": "39"
    },
    "4835": {
      "branch": 70,
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3041,
        3104
      ],
      "op": "EQ",
      "path": "39"
    },
    "4836": {
      "offset": [
        2994,
        3104
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4837": {
      "offset": [
        2994,
        3143
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4838": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2994,
        3143
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x12F7"
    },
    "4841": {
      "branch": 70,
      "offset": [
        2994,
        3143
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4842": {
      "op": "POP"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "offset": [
        3120,
        3143
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4852": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        3120,
        3143
      ],
      "op": "AND",
      "path": "39"
    },
    "4853": {
      "offset": [
        3133,
        3143
      ],
      "op": "CALLER",
      "path": "39"
    },
    "4854": {
      "offset": [
        3120,
        3143
      ],
      "op": "EQ",
      "path": "39"
    },
    "4855": {
      "offset": [
        2994,
        3143
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4856": {
      "offset": [
        2973,
        3195
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1313"
    },
    "4859": {
      "offset": [
        2973,
        3195
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4860": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4862": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "offset": [
        2973,
        3195
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4871": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4872": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4874": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "ADD",
      "path": "39"
    },
    "4875": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "4878": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4879": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x199E"
    },
    "4882": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        2973,
        3195
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4883": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2973,
        3195
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4884": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4886": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4888": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4889": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "4890": {
      "branch": 76,
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4891": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1366"
    },
    "4894": {
      "branch": 76,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4895": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4897": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4904": {
      "op": "SHL"
    },
    "4905": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4906": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4909": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4911": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4912": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "4913": {
      "op": "MSTORE"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4918": {
      "op": "DUP3"
    },
    "4919": {
      "op": "ADD"
    },
    "4920": {
      "op": "MSTORE"
    },
    "4921": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "MSTORE"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "4965": {
      "op": "JUMP"
    },
    "4966": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4967": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4969": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4971": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4978": {
      "op": "SHL"
    },
    "4979": {
      "op": "SUB"
    },
    "4980": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9898,
        9921
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 39
    },
    "4981": {
      "branch": 71,
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9898,
        9921
      ],
      "op": "AND",
      "path": "39"
    },
    "4982": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1391"
    },
    "4985": {
      "branch": 71,
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4986": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4988": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4995": {
      "op": "SHL"
    },
    "4996": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4997": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4998": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5000": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "ADD",
      "path": "39"
    },
    "5001": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x276"
    },
    "5004": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5005": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x18EA"
    },
    "5008": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        9877,
        9977
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5009": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9877,
        9977
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5010": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9987,
        10012
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 40,
      "value": "0x139A"
    },
    "5013": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        10002,
        10011
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5014": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9987,
        10001
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x13FB"
    },
    "5017": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "i",
      "offset": [
        9987,
        10012
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5018": {
      "fn": "Dispenser.ownerWithdraw",
      "offset": [
        9987,
        10012
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5019": {
      "op": "POP"
    },
    "5020": {
      "op": "POP"
    },
    "5021": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5023": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5025": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5026": {
      "op": "POP"
    },
    "5027": {
      "fn": "Dispenser.ownerWithdraw",
      "jump": "o",
      "offset": [
        9771,
        10019
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5028": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        640,
        845
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "5029": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "statement": 41,
      "value": "0x40"
    },
    "5031": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5032": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5039": {
      "op": "SHL"
    },
    "5040": {
      "op": "SUB"
    },
    "5041": {
      "op": "DUP5"
    },
    "5042": {
      "op": "AND"
    },
    "5043": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x24"
    },
    "5045": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP3",
      "path": "62"
    },
    "5046": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "ADD",
      "path": "62"
    },
    "5047": {
      "op": "MSTORE"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5050": {
      "op": "DUP1"
    },
    "5051": {
      "op": "DUP3"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "DUP5"
    },
    "5054": {
      "op": "SWAP1"
    },
    "5055": {
      "op": "MSTORE"
    },
    "5056": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP3",
      "path": "62"
    },
    "5057": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5058": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5059": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP4",
      "path": "62"
    },
    "5060": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SUB",
      "path": "62"
    },
    "5061": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5062": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "5063": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "ADD",
      "path": "62"
    },
    "5064": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP2",
      "path": "62"
    },
    "5065": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5068": {
      "op": "SWAP1"
    },
    "5069": {
      "op": "SWAP2"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5072": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "5073": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5074": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "5076": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP2",
      "path": "62"
    },
    "5077": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "ADD",
      "path": "62"
    },
    "5078": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5079": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5086": {
      "op": "SHL"
    },
    "5087": {
      "op": "SUB"
    },
    "5088": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "AND",
      "path": "62"
    },
    "5089": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5096": {
      "op": "SHL"
    },
    "5097": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "OR",
      "path": "62"
    },
    "5098": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5099": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5100": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        838
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x13F6"
    },
    "5103": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        838
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5104": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        772,
        777
      ],
      "op": "DUP5",
      "path": "62"
    },
    "5105": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        772,
        777
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5106": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        771
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x1541"
    },
    "5109": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        752,
        838
      ],
      "op": "JUMP",
      "path": "62"
    },
    "5110": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        838
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "5111": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        640,
        845
      ],
      "op": "POP",
      "path": "62"
    },
    "5112": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        640,
        845
      ],
      "op": "POP",
      "path": "62"
    },
    "5113": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        640,
        845
      ],
      "op": "POP",
      "path": "62"
    },
    "5114": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        640,
        845
      ],
      "op": "JUMP",
      "path": "62"
    },
    "5115": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10025,
        10459
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5116": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10086,
        10114
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5118": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10132,
        10141
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5119": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10086,
        10142
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5120": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10086,
        10142
      ],
      "op": "POP",
      "path": "39"
    },
    "5121": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10152,
        10171
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5123": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10187
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5130": {
      "op": "SHL"
    },
    "5131": {
      "op": "SUB"
    },
    "5132": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10207
      ],
      "op": "AND",
      "path": "39"
    },
    "5133": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10207
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xE487C2E8"
    },
    "5138": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5140": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5141": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5142": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "5147": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "AND",
      "path": "39"
    },
    "5148": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "5150": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "SHL",
      "path": "39"
    },
    "5151": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5152": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5153": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5155": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "ADD",
      "path": "39"
    },
    "5156": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "5158": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5160": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5161": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5162": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5163": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "SUB",
      "path": "39"
    },
    "5164": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5165": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5166": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "GAS",
      "path": "39"
    },
    "5167": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "5168": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5169": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5170": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5171": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1440"
    },
    "5174": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5175": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "5176": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5178": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5179": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "5180": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "5181": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5183": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "REVERT",
      "path": "39"
    },
    "5184": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5185": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "POP",
      "path": "39"
    },
    "5186": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "POP",
      "path": "39"
    },
    "5187": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "POP",
      "path": "39"
    },
    "5188": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "POP",
      "path": "39"
    },
    "5189": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5191": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5192": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "5193": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "5195": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "NOT",
      "path": "39"
    },
    "5196": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "5198": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5199": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "ADD",
      "path": "39"
    },
    "5200": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "AND",
      "path": "39"
    },
    "5201": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5202": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "ADD",
      "path": "39"
    },
    "5203": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5204": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5206": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5207": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "POP",
      "path": "39"
    },
    "5208": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5209": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "ADD",
      "path": "39"
    },
    "5210": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5211": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1464"
    },
    "5214": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "5215": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5216": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1981"
    },
    "5219": {
      "fn": "Dispenser._ownerWithdraw",
      "jump": "i",
      "offset": [
        10174,
        10209
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5220": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10174,
        10209
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5221": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5223": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5224": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5231": {
      "op": "SHL"
    },
    "5232": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5233": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5234": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10272,
        10276
      ],
      "op": "ADDRESS",
      "path": "39"
    },
    "5235": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5237": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5238": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "ADD",
      "path": "39"
    },
    "5239": {
      "op": "MSTORE"
    },
    "5240": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10152,
        10209
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5241": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10152,
        10209
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5245": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10219,
        10237
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5252": {
      "op": "SHL"
    },
    "5253": {
      "op": "SUB"
    },
    "5254": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10263
      ],
      "op": "DUP5",
      "path": "39"
    },
    "5255": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10263
      ],
      "op": "AND",
      "path": "39"
    },
    "5256": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10263
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5257": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10263
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x70A08231"
    },
    "5262": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10263
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "5268": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5270": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5271": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5272": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5273": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "SUB",
      "path": "39"
    },
    "5274": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5275": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5276": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "GAS",
      "path": "39"
    },
    "5277": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "5278": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5279": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5280": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5281": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x14AE"
    },
    "5284": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5285": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "5286": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5288": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5289": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "5290": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "5291": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5293": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "REVERT",
      "path": "39"
    },
    "5294": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5295": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "POP",
      "path": "39"
    },
    "5296": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "POP",
      "path": "39"
    },
    "5297": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "POP",
      "path": "39"
    },
    "5298": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "POP",
      "path": "39"
    },
    "5299": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5301": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5302": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "5303": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "5305": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "NOT",
      "path": "39"
    },
    "5306": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "5308": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5309": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "ADD",
      "path": "39"
    },
    "5310": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "AND",
      "path": "39"
    },
    "5311": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5312": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "ADD",
      "path": "39"
    },
    "5313": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5314": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5316": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5317": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "POP",
      "path": "39"
    },
    "5318": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5319": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "ADD",
      "path": "39"
    },
    "5320": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5321": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x14D2"
    },
    "5324": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "5325": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5326": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1921"
    },
    "5329": {
      "fn": "Dispenser._ownerWithdraw",
      "jump": "i",
      "offset": [
        10240,
        10278
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5330": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10240,
        10278
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5331": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10219,
        10278
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10291,
        10303
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5334": {
      "branch": 72,
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10291,
        10303
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5335": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10288,
        10453
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x153B"
    },
    "5338": {
      "branch": 72,
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10288,
        10453
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5339": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10350,
        10361
      ],
      "op": "DUP2",
      "path": "39",
      "statement": 42
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5346": {
      "op": "SHL"
    },
    "5347": {
      "op": "SUB"
    },
    "5348": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "AND",
      "path": "39"
    },
    "5349": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10339,
        10348
      ],
      "op": "DUP5",
      "path": "39"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5356": {
      "op": "SHL"
    },
    "5357": {
      "op": "SUB"
    },
    "5358": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "AND",
      "path": "39"
    },
    "5359": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x3185212530FCDCE6B38FBF62ED27AB29B1B047F59B76B17401388A70A95F41B"
    },
    "5392": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10363,
        10373
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5393": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5395": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5396": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x151F"
    },
    "5399": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "5400": {
      "op": "DUP2"
    },
    "5401": {
      "op": "MSTORE"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5404": {
      "op": "ADD"
    },
    "5405": {
      "op": "SWAP1"
    },
    "5406": {
      "op": "JUMP"
    },
    "5407": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5408": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5410": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5411": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5412": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "5413": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "SUB",
      "path": "39"
    },
    "5414": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5415": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10323,
        10374
      ],
      "op": "LOG3",
      "path": "39"
    },
    "5416": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10388,
        10442
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 43,
      "value": "0x153B"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5425": {
      "op": "SHL"
    },
    "5426": {
      "op": "SUB"
    },
    "5427": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10388,
        10418
      ],
      "op": "DUP6",
      "path": "39"
    },
    "5428": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10388,
        10418
      ],
      "op": "AND",
      "path": "39"
    },
    "5429": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10419,
        10430
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5430": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10431,
        10441
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5431": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10388,
        10418
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x13A4"
    },
    "5434": {
      "fn": "Dispenser._ownerWithdraw",
      "jump": "i",
      "offset": [
        10388,
        10442
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5435": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10388,
        10442
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5436": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10076,
        10459
      ],
      "op": "POP",
      "path": "39"
    },
    "5437": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10076,
        10459
      ],
      "op": "POP",
      "path": "39"
    },
    "5438": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10076,
        10459
      ],
      "op": "POP",
      "path": "39"
    },
    "5439": {
      "fn": "Dispenser._ownerWithdraw",
      "offset": [
        10025,
        10459
      ],
      "op": "POP",
      "path": "39"
    },
    "5440": {
      "fn": "Dispenser._ownerWithdraw",
      "jump": "o",
      "offset": [
        10025,
        10459
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5441": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3146,
        3852
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "5442": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "5444": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x1596"
    },
    "5447": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3619,
        3623
      ],
      "op": "DUP3",
      "path": "62"
    },
    "5448": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "5450": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5451": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5452": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "5454": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "ADD",
      "path": "62"
    },
    "5455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "5457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5459": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "5461": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP2",
      "path": "62"
    },
    "5462": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5463": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "5465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "ADD",
      "path": "62"
    },
    "5466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH32",
      "path": "62",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP2",
      "path": "62"
    },
    "5500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "POP",
      "path": "62"
    },
    "5502": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3599,
        3604
      ],
      "op": "DUP6",
      "path": "62"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5509": {
      "op": "SHL"
    },
    "5510": {
      "op": "SUB"
    },
    "5511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3618
      ],
      "op": "AND",
      "path": "62"
    },
    "5512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3618
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x1613"
    },
    "5515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3618
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5516": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "SWAP3",
      "path": "62"
    },
    "5517": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "5518": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5519": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0xFFFFFFFF"
    },
    "5524": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "AND",
      "path": "62"
    },
    "5525": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3591,
        3660
      ],
      "op": "JUMP",
      "path": "62"
    },
    "5526": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "5527": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3674,
        3691
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5528": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3674,
        3691
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5529": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3565,
        3660
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5530": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3565,
        3660
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "branch": 77,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3674,
        3695
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "5533": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3670,
        3846
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x13F6"
    },
    "5536": {
      "branch": 77,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3670,
        3846
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "5537": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3769,
        3779
      ],
      "op": "DUP1",
      "path": "62",
      "statement": 44
    },
    "5538": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "DUP1",
      "path": "62"
    },
    "5539": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "5541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "ADD",
      "path": "62"
    },
    "5542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5543": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5544": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "DUP2",
      "path": "62"
    },
    "5545": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "ADD",
      "path": "62"
    },
    "5546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5547": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x15B4"
    },
    "5550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "5551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "5552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x193A"
    },
    "5555": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3758,
        3788
      ],
      "op": "JUMP",
      "path": "62"
    },
    "5556": {
      "branch": 78,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "5557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x13F6"
    },
    "5560": {
      "branch": 78,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "5561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "5563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "5564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5570": {
      "op": "SHL"
    },
    "5571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "DUP2",
      "path": "62"
    },
    "5572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "5577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "DUP3",
      "path": "62"
    },
    "5578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "ADD",
      "path": "62"
    },
    "5579": {
      "op": "MSTORE"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5584": {
      "op": "DUP3"
    },
    "5585": {
      "op": "ADD"
    },
    "5586": {
      "op": "MSTORE"
    },
    "5587": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5622": {
      "op": "DUP3"
    },
    "5623": {
      "op": "ADD"
    },
    "5624": {
      "op": "MSTORE"
    },
    "5625": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "5638": {
      "op": "SHL"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5641": {
      "op": "DUP3"
    },
    "5642": {
      "op": "ADD"
    },
    "5643": {
      "op": "MSTORE"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5646": {
      "op": "ADD"
    },
    "5647": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x276"
    },
    "5650": {
      "op": "JUMP"
    },
    "5651": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5652": {
      "fn": "Address.functionCall",
      "offset": [
        3699,
        3711
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "5654": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3782
      ],
      "op": "PUSH2",
      "path": "47",
      "statement": 45,
      "value": "0x1622"
    },
    "5657": {
      "fn": "Address.functionCall",
      "offset": [
        3752,
        3758
      ],
      "op": "DUP5",
      "path": "47"
    },
    "5658": {
      "fn": "Address.functionCall",
      "offset": [
        3760,
        3764
      ],
      "op": "DUP5",
      "path": "47"
    },
    "5659": {
      "fn": "Address.functionCall",
      "offset": [
        3766,
        3767
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "5661": {
      "fn": "Address.functionCall",
      "offset": [
        3769,
        3781
      ],
      "op": "DUP6",
      "path": "47"
    },
    "5662": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3751
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x162C"
    },
    "5665": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3730,
        3782
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5666": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3782
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5667": {
      "fn": "Address.functionCall",
      "offset": [
        3723,
        3782
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "5668": {
      "fn": "Address.functionCall",
      "offset": [
        3723,
        3782
      ],
      "op": "POP",
      "path": "47"
    },
    "5669": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5670": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "5671": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "5672": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "POP",
      "path": "47"
    },
    "5673": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "POP",
      "path": "47"
    },
    "5674": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "POP",
      "path": "47"
    },
    "5675": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3596,
        3789
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4623,
        5146
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4750,
        4762
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "5679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4807,
        4812
      ],
      "op": "DUP3",
      "path": "47",
      "statement": 46
    },
    "5680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4782,
        4803
      ],
      "op": "SELFBALANCE",
      "path": "47"
    },
    "5681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4782,
        4812
      ],
      "op": "LT",
      "path": "47"
    },
    "5682": {
      "branch": 73,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4782,
        4812
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "5683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x168D"
    },
    "5686": {
      "branch": 73,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "5687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "5689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "DUP2",
      "path": "47"
    },
    "5698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "5703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "ADD",
      "path": "47"
    },
    "5705": {
      "op": "MSTORE"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5710": {
      "op": "DUP3"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "op": "MSTORE"
    },
    "5713": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5748": {
      "op": "DUP3"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "MSTORE"
    },
    "5751": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5760": {
      "op": "SHL"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5763": {
      "op": "DUP3"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5768": {
      "op": "ADD"
    },
    "5769": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x276"
    },
    "5772": {
      "op": "JUMP"
    },
    "5773": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4774,
        4855
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5774": {
      "fn": "Address.isContract",
      "offset": [
        1101,
        1121
      ],
      "op": "DUP5",
      "path": "47"
    },
    "5775": {
      "fn": "Address.isContract",
      "offset": [
        1101,
        1121
      ],
      "op": "EXTCODESIZE",
      "path": "47"
    },
    "5776": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH2",
      "path": "47",
      "statement": 47,
      "value": "0x16DB"
    },
    "5779": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "5780": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "5782": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5789": {
      "op": "SHL"
    },
    "5790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "DUP2",
      "path": "47"
    },
    "5791": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "5796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "ADD",
      "path": "47"
    },
    "5798": {
      "op": "MSTORE"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5803": {
      "op": "DUP3"
    },
    "5804": {
      "op": "ADD"
    },
    "5805": {
      "op": "MSTORE"
    },
    "5806": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5841": {
      "op": "DUP3"
    },
    "5842": {
      "op": "ADD"
    },
    "5843": {
      "op": "MSTORE"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5846": {
      "op": "ADD"
    },
    "5847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x276"
    },
    "5850": {
      "op": "JUMP"
    },
    "5851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4996,
        5008
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "5854": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5010,
        5033
      ],
      "op": "DUP1",
      "path": "47"
    },
    "5855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5043
      ],
      "op": "DUP7",
      "path": "47"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5862": {
      "op": "SHL"
    },
    "5863": {
      "op": "SUB"
    },
    "5864": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5048
      ],
      "op": "AND",
      "path": "47"
    },
    "5865": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5062
      ],
      "op": "DUP6",
      "path": "47"
    },
    "5866": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5069
      ],
      "op": "DUP8",
      "path": "47"
    },
    "5867": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "5869": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x16F7"
    },
    "5873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "5874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "5875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x19F1"
    },
    "5878": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5879": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "5882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "5884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP1",
      "path": "47"
    },
    "5886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP4",
      "path": "47"
    },
    "5887": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SUB",
      "path": "47"
    },
    "5888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP2",
      "path": "47"
    },
    "5889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP6",
      "path": "47"
    },
    "5890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP8",
      "path": "47"
    },
    "5891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "GAS",
      "path": "47"
    },
    "5892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "CALL",
      "path": "47"
    },
    "5893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "5894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "5898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP1",
      "path": "47"
    },
    "5899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "5901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP2",
      "path": "47"
    },
    "5902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "EQ",
      "path": "47"
    },
    "5903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1734"
    },
    "5906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "5907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "5909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "5911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "5914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "NOT",
      "path": "47"
    },
    "5915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3F"
    },
    "5917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "5918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "ADD",
      "path": "47"
    },
    "5919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "AND",
      "path": "47"
    },
    "5920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "ADD",
      "path": "47"
    },
    "5922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "5924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "5925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "5926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "5928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "5929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "5931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "5933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP5",
      "path": "47"
    },
    "5934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "ADD",
      "path": "47"
    },
    "5935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATACOPY",
      "path": "47"
    },
    "5936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1739"
    },
    "5939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "5943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "5944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "5948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "5950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "5951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5087,
        5139
      ],
      "op": "PUSH2",
      "path": "47",
      "statement": 48,
      "value": "0x1749"
    },
    "5954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5105,
        5112
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5114,
        5124
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5126,
        5138
      ],
      "op": "DUP7",
      "path": "47"
    },
    "5957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5087,
        5104
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1754"
    },
    "5960": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5087,
        5139
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5087,
        5139
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5080,
        5139
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "5963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4623,
        5146
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "5964": {
      "op": "POP"
    },
    "5965": {
      "op": "POP"
    },
    "5966": {
      "op": "POP"
    },
    "5967": {
      "op": "POP"
    },
    "5968": {
      "op": "POP"
    },
    "5969": {
      "op": "POP"
    },
    "5970": {
      "op": "POP"
    },
    "5971": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4623,
        5146
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5972": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7106,
        7831
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5973": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7221,
        7233
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "5975": {
      "branch": 74,
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7256
      ],
      "op": "DUP4",
      "path": "47"
    },
    "5976": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "5977": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1763"
    },
    "5980": {
      "branch": 74,
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "5981": {
      "op": "POP"
    },
    "5982": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7279,
        7289
      ],
      "op": "DUP2",
      "path": "47",
      "statement": 49
    },
    "5983": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7272,
        7289
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1625"
    },
    "5986": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7272,
        7289
      ],
      "op": "JUMP",
      "path": "47"
    },
    "5987": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "5988": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7390,
        7407
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5989": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7390,
        7407
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5990": {
      "branch": 75,
      "fn": "Address._verifyCallResult",
      "offset": [
        7390,
        7411
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "5991": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7386,
        7815
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1773"
    },
    "5994": {
      "branch": 75,
      "fn": "Address._verifyCallResult",
      "offset": [
        7386,
        7815
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "5995": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7648,
        7658
      ],
      "op": "DUP3",
      "path": "47"
    },
    "5996": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7642,
        7659
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "5997": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7708,
        7723
      ],
      "op": "DUP1",
      "path": "47"
    },
    "5998": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7695,
        7705
      ],
      "op": "DUP5",
      "path": "47"
    },
    "5999": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7691,
        7693
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6001": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7687,
        7706
      ],
      "op": "ADD",
      "path": "47"
    },
    "6002": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7724
      ],
      "op": "REVERT",
      "path": "47"
    },
    "6003": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7386,
        7815
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6004": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7787,
        7799
      ],
      "op": "DUP2",
      "path": "47",
      "statement": 50
    },
    "6005": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6007": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "6008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6014": {
      "op": "SHL"
    },
    "6015": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6016": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6017": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "6019": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "ADD",
      "path": "47"
    },
    "6020": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x276"
    },
    "6023": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6024": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6025": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A0D"
    },
    "6028": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7780,
        7800
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6029": {
      "op": "JUMPDEST"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6036": {
      "op": "SHL"
    },
    "6037": {
      "op": "SUB"
    },
    "6038": {
      "op": "DUP2"
    },
    "6039": {
      "op": "AND"
    },
    "6040": {
      "op": "DUP2"
    },
    "6041": {
      "op": "EQ"
    },
    "6042": {
      "op": "PUSH2",
      "value": "0x17A2"
    },
    "6045": {
      "op": "JUMPI"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6048": {
      "op": "DUP1"
    },
    "6049": {
      "op": "REVERT"
    },
    "6050": {
      "op": "JUMPDEST"
    },
    "6051": {
      "op": "POP"
    },
    "6052": {
      "jump": "o",
      "op": "JUMP"
    },
    "6053": {
      "op": "JUMPDEST"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6056": {
      "op": "DUP1"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6061": {
      "op": "DUP5"
    },
    "6062": {
      "op": "DUP7"
    },
    "6063": {
      "op": "SUB"
    },
    "6064": {
      "op": "SLT"
    },
    "6065": {
      "op": "ISZERO"
    },
    "6066": {
      "op": "PUSH2",
      "value": "0x17BA"
    },
    "6069": {
      "op": "JUMPI"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6072": {
      "op": "DUP1"
    },
    "6073": {
      "op": "REVERT"
    },
    "6074": {
      "op": "JUMPDEST"
    },
    "6075": {
      "op": "DUP4"
    },
    "6076": {
      "op": "CALLDATALOAD"
    },
    "6077": {
      "op": "PUSH2",
      "value": "0x17C5"
    },
    "6080": {
      "op": "DUP2"
    },
    "6081": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6084": {
      "jump": "i",
      "op": "JUMP"
    },
    "6085": {
      "op": "JUMPDEST"
    },
    "6086": {
      "op": "SWAP3"
    },
    "6087": {
      "op": "POP"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6090": {
      "op": "DUP5"
    },
    "6091": {
      "op": "ADD"
    },
    "6092": {
      "op": "CALLDATALOAD"
    },
    "6093": {
      "op": "SWAP2"
    },
    "6094": {
      "op": "POP"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6097": {
      "op": "DUP5"
    },
    "6098": {
      "op": "ADD"
    },
    "6099": {
      "op": "CALLDATALOAD"
    },
    "6100": {
      "op": "PUSH2",
      "value": "0x17DC"
    },
    "6103": {
      "op": "DUP2"
    },
    "6104": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6107": {
      "jump": "i",
      "op": "JUMP"
    },
    "6108": {
      "op": "JUMPDEST"
    },
    "6109": {
      "op": "DUP1"
    },
    "6110": {
      "op": "SWAP2"
    },
    "6111": {
      "op": "POP"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "op": "SWAP3"
    },
    "6114": {
      "op": "POP"
    },
    "6115": {
      "op": "SWAP3"
    },
    "6116": {
      "op": "POP"
    },
    "6117": {
      "op": "SWAP3"
    },
    "6118": {
      "jump": "o",
      "op": "JUMP"
    },
    "6119": {
      "op": "JUMPDEST"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6122": {
      "op": "DUP1"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6125": {
      "op": "DUP1"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6130": {
      "op": "DUP7"
    },
    "6131": {
      "op": "DUP9"
    },
    "6132": {
      "op": "SUB"
    },
    "6133": {
      "op": "SLT"
    },
    "6134": {
      "op": "ISZERO"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x17FF"
    },
    "6138": {
      "op": "JUMPI"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6141": {
      "op": "DUP1"
    },
    "6142": {
      "op": "REVERT"
    },
    "6143": {
      "op": "JUMPDEST"
    },
    "6144": {
      "op": "DUP6"
    },
    "6145": {
      "op": "CALLDATALOAD"
    },
    "6146": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6149": {
      "op": "DUP2"
    },
    "6150": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6153": {
      "jump": "i",
      "op": "JUMP"
    },
    "6154": {
      "op": "JUMPDEST"
    },
    "6155": {
      "op": "SWAP5"
    },
    "6156": {
      "op": "POP"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6159": {
      "op": "DUP7"
    },
    "6160": {
      "op": "ADD"
    },
    "6161": {
      "op": "CALLDATALOAD"
    },
    "6162": {
      "op": "SWAP4"
    },
    "6163": {
      "op": "POP"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6166": {
      "op": "DUP7"
    },
    "6167": {
      "op": "ADD"
    },
    "6168": {
      "op": "CALLDATALOAD"
    },
    "6169": {
      "op": "SWAP3"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6173": {
      "op": "DUP7"
    },
    "6174": {
      "op": "ADD"
    },
    "6175": {
      "op": "CALLDATALOAD"
    },
    "6176": {
      "op": "PUSH2",
      "value": "0x1828"
    },
    "6179": {
      "op": "DUP2"
    },
    "6180": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6183": {
      "jump": "i",
      "op": "JUMP"
    },
    "6184": {
      "op": "JUMPDEST"
    },
    "6185": {
      "op": "SWAP2"
    },
    "6186": {
      "op": "POP"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6189": {
      "op": "DUP7"
    },
    "6190": {
      "op": "ADD"
    },
    "6191": {
      "op": "CALLDATALOAD"
    },
    "6192": {
      "op": "PUSH2",
      "value": "0x1838"
    },
    "6195": {
      "op": "DUP2"
    },
    "6196": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6199": {
      "jump": "i",
      "op": "JUMP"
    },
    "6200": {
      "op": "JUMPDEST"
    },
    "6201": {
      "op": "DUP1"
    },
    "6202": {
      "op": "SWAP2"
    },
    "6203": {
      "op": "POP"
    },
    "6204": {
      "op": "POP"
    },
    "6205": {
      "op": "SWAP3"
    },
    "6206": {
      "op": "SWAP6"
    },
    "6207": {
      "op": "POP"
    },
    "6208": {
      "op": "SWAP3"
    },
    "6209": {
      "op": "SWAP6"
    },
    "6210": {
      "op": "SWAP1"
    },
    "6211": {
      "op": "SWAP4"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "jump": "o",
      "op": "JUMP"
    },
    "6214": {
      "op": "JUMPDEST"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6219": {
      "op": "DUP3"
    },
    "6220": {
      "op": "DUP5"
    },
    "6221": {
      "op": "SUB"
    },
    "6222": {
      "op": "SLT"
    },
    "6223": {
      "op": "ISZERO"
    },
    "6224": {
      "op": "PUSH2",
      "value": "0x1858"
    },
    "6227": {
      "op": "JUMPI"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6230": {
      "op": "DUP1"
    },
    "6231": {
      "op": "REVERT"
    },
    "6232": {
      "op": "JUMPDEST"
    },
    "6233": {
      "op": "POP"
    },
    "6234": {
      "op": "CALLDATALOAD"
    },
    "6235": {
      "op": "SWAP2"
    },
    "6236": {
      "op": "SWAP1"
    },
    "6237": {
      "op": "POP"
    },
    "6238": {
      "jump": "o",
      "op": "JUMP"
    },
    "6239": {
      "op": "JUMPDEST"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6244": {
      "op": "DUP3"
    },
    "6245": {
      "op": "DUP5"
    },
    "6246": {
      "op": "SUB"
    },
    "6247": {
      "op": "SLT"
    },
    "6248": {
      "op": "ISZERO"
    },
    "6249": {
      "op": "PUSH2",
      "value": "0x1871"
    },
    "6252": {
      "op": "JUMPI"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6255": {
      "op": "DUP1"
    },
    "6256": {
      "op": "REVERT"
    },
    "6257": {
      "op": "JUMPDEST"
    },
    "6258": {
      "op": "DUP2"
    },
    "6259": {
      "op": "CALLDATALOAD"
    },
    "6260": {
      "op": "PUSH2",
      "value": "0x1625"
    },
    "6263": {
      "op": "DUP2"
    },
    "6264": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6267": {
      "jump": "i",
      "op": "JUMP"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6271": {
      "op": "DUP1"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6274": {
      "op": "DUP4"
    },
    "6275": {
      "op": "DUP6"
    },
    "6276": {
      "op": "SUB"
    },
    "6277": {
      "op": "SLT"
    },
    "6278": {
      "op": "ISZERO"
    },
    "6279": {
      "op": "PUSH2",
      "value": "0x188F"
    },
    "6282": {
      "op": "JUMPI"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6285": {
      "op": "DUP1"
    },
    "6286": {
      "op": "REVERT"
    },
    "6287": {
      "op": "JUMPDEST"
    },
    "6288": {
      "op": "DUP3"
    },
    "6289": {
      "op": "CALLDATALOAD"
    },
    "6290": {
      "op": "PUSH2",
      "value": "0x189A"
    },
    "6293": {
      "op": "DUP2"
    },
    "6294": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6297": {
      "jump": "i",
      "op": "JUMP"
    },
    "6298": {
      "op": "JUMPDEST"
    },
    "6299": {
      "op": "SWAP2"
    },
    "6300": {
      "op": "POP"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6303": {
      "op": "DUP4"
    },
    "6304": {
      "op": "ADD"
    },
    "6305": {
      "op": "CALLDATALOAD"
    },
    "6306": {
      "op": "PUSH2",
      "value": "0x18AA"
    },
    "6309": {
      "op": "DUP2"
    },
    "6310": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6313": {
      "jump": "i",
      "op": "JUMP"
    },
    "6314": {
      "op": "JUMPDEST"
    },
    "6315": {
      "op": "DUP1"
    },
    "6316": {
      "op": "SWAP2"
    },
    "6317": {
      "op": "POP"
    },
    "6318": {
      "op": "POP"
    },
    "6319": {
      "op": "SWAP3"
    },
    "6320": {
      "op": "POP"
    },
    "6321": {
      "op": "SWAP3"
    },
    "6322": {
      "op": "SWAP1"
    },
    "6323": {
      "op": "POP"
    },
    "6324": {
      "jump": "o",
      "op": "JUMP"
    },
    "6325": {
      "op": "JUMPDEST"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6328": {
      "op": "DUP1"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6333": {
      "op": "DUP5"
    },
    "6334": {
      "op": "DUP7"
    },
    "6335": {
      "op": "SUB"
    },
    "6336": {
      "op": "SLT"
    },
    "6337": {
      "op": "ISZERO"
    },
    "6338": {
      "op": "PUSH2",
      "value": "0x18CA"
    },
    "6341": {
      "op": "JUMPI"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6344": {
      "op": "DUP1"
    },
    "6345": {
      "op": "REVERT"
    },
    "6346": {
      "op": "JUMPDEST"
    },
    "6347": {
      "op": "DUP4"
    },
    "6348": {
      "op": "CALLDATALOAD"
    },
    "6349": {
      "op": "PUSH2",
      "value": "0x18D5"
    },
    "6352": {
      "op": "DUP2"
    },
    "6353": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6356": {
      "jump": "i",
      "op": "JUMP"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "SWAP6"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6361": {
      "op": "DUP6"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "CALLDATALOAD"
    },
    "6364": {
      "op": "SWAP6"
    },
    "6365": {
      "op": "POP"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6368": {
      "op": "SWAP1"
    },
    "6369": {
      "op": "SWAP5"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "CALLDATALOAD"
    },
    "6372": {
      "op": "SWAP4"
    },
    "6373": {
      "op": "SWAP3"
    },
    "6374": {
      "op": "POP"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "op": "POP"
    },
    "6377": {
      "jump": "o",
      "op": "JUMP"
    },
    "6378": {
      "op": "JUMPDEST"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6381": {
      "op": "DUP1"
    },
    "6382": {
      "op": "DUP3"
    },
    "6383": {
      "op": "MSTORE"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6386": {
      "op": "SWAP1"
    },
    "6387": {
      "op": "DUP3"
    },
    "6388": {
      "op": "ADD"
    },
    "6389": {
      "op": "MSTORE"
    },
    "6390": {
      "op": "PUSH32",
      "value": "0x496E76616C696420746F6B656E20636F6E747261637420616464726573730000"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6425": {
      "op": "DUP3"
    },
    "6426": {
      "op": "ADD"
    },
    "6427": {
      "op": "MSTORE"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6430": {
      "op": "ADD"
    },
    "6431": {
      "op": "SWAP1"
    },
    "6432": {
      "jump": "o",
      "op": "JUMP"
    },
    "6433": {
      "op": "JUMPDEST"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6438": {
      "op": "DUP3"
    },
    "6439": {
      "op": "DUP5"
    },
    "6440": {
      "op": "SUB"
    },
    "6441": {
      "op": "SLT"
    },
    "6442": {
      "op": "ISZERO"
    },
    "6443": {
      "op": "PUSH2",
      "value": "0x1933"
    },
    "6446": {
      "op": "JUMPI"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6449": {
      "op": "DUP1"
    },
    "6450": {
      "op": "REVERT"
    },
    "6451": {
      "op": "JUMPDEST"
    },
    "6452": {
      "op": "POP"
    },
    "6453": {
      "op": "MLOAD"
    },
    "6454": {
      "op": "SWAP2"
    },
    "6455": {
      "op": "SWAP1"
    },
    "6456": {
      "op": "POP"
    },
    "6457": {
      "jump": "o",
      "op": "JUMP"
    },
    "6458": {
      "op": "JUMPDEST"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6463": {
      "op": "DUP3"
    },
    "6464": {
      "op": "DUP5"
    },
    "6465": {
      "op": "SUB"
    },
    "6466": {
      "op": "SLT"
    },
    "6467": {
      "op": "ISZERO"
    },
    "6468": {
      "op": "PUSH2",
      "value": "0x194C"
    },
    "6471": {
      "op": "JUMPI"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6474": {
      "op": "DUP1"
    },
    "6475": {
      "op": "REVERT"
    },
    "6476": {
      "op": "JUMPDEST"
    },
    "6477": {
      "op": "DUP2"
    },
    "6478": {
      "op": "MLOAD"
    },
    "6479": {
      "op": "DUP1"
    },
    "6480": {
      "op": "ISZERO"
    },
    "6481": {
      "op": "ISZERO"
    },
    "6482": {
      "op": "DUP2"
    },
    "6483": {
      "op": "EQ"
    },
    "6484": {
      "op": "PUSH2",
      "value": "0x1625"
    },
    "6487": {
      "op": "JUMPI"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6490": {
      "op": "DUP1"
    },
    "6491": {
      "op": "REVERT"
    },
    "6492": {
      "op": "JUMPDEST"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6495": {
      "op": "DUP3"
    },
    "6496": {
      "op": "DUP3"
    },
    "6497": {
      "op": "LT"
    },
    "6498": {
      "op": "ISZERO"
    },
    "6499": {
      "op": "PUSH2",
      "value": "0x197C"
    },
    "6502": {
      "op": "JUMPI"
    },
    "6503": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6510": {
      "op": "SHL"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6513": {
      "op": "MSTORE"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6518": {
      "op": "MSTORE"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6523": {
      "op": "REVERT"
    },
    "6524": {
      "op": "JUMPDEST"
    },
    "6525": {
      "op": "POP"
    },
    "6526": {
      "op": "SUB"
    },
    "6527": {
      "op": "SWAP1"
    },
    "6528": {
      "jump": "o",
      "op": "JUMP"
    },
    "6529": {
      "op": "JUMPDEST"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6534": {
      "op": "DUP3"
    },
    "6535": {
      "op": "DUP5"
    },
    "6536": {
      "op": "SUB"
    },
    "6537": {
      "op": "SLT"
    },
    "6538": {
      "op": "ISZERO"
    },
    "6539": {
      "op": "PUSH2",
      "value": "0x1993"
    },
    "6542": {
      "op": "JUMPI"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6545": {
      "op": "DUP1"
    },
    "6546": {
      "op": "REVERT"
    },
    "6547": {
      "op": "JUMPDEST"
    },
    "6548": {
      "op": "DUP2"
    },
    "6549": {
      "op": "MLOAD"
    },
    "6550": {
      "op": "PUSH2",
      "value": "0x1625"
    },
    "6553": {
      "op": "DUP2"
    },
    "6554": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6557": {
      "jump": "i",
      "op": "JUMP"
    },
    "6558": {
      "op": "JUMPDEST"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6561": {
      "op": "DUP1"
    },
    "6562": {
      "op": "DUP3"
    },
    "6563": {
      "op": "MSTORE"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6566": {
      "op": "SWAP1"
    },
    "6567": {
      "op": "DUP3"
    },
    "6568": {
      "op": "ADD"
    },
    "6569": {
      "op": "MSTORE"
    },
    "6570": {
      "op": "PUSH13",
      "value": "0x24B73B30B634B21037BBB732B9"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "6586": {
      "op": "SHL"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6589": {
      "op": "DUP3"
    },
    "6590": {
      "op": "ADD"
    },
    "6591": {
      "op": "MSTORE"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6594": {
      "op": "ADD"
    },
    "6595": {
      "op": "SWAP1"
    },
    "6596": {
      "jump": "o",
      "op": "JUMP"
    },
    "6597": {
      "op": "JUMPDEST"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6600": {
      "op": "JUMPDEST"
    },
    "6601": {
      "op": "DUP4"
    },
    "6602": {
      "op": "DUP2"
    },
    "6603": {
      "op": "LT"
    },
    "6604": {
      "op": "ISZERO"
    },
    "6605": {
      "op": "PUSH2",
      "value": "0x19E0"
    },
    "6608": {
      "op": "JUMPI"
    },
    "6609": {
      "op": "DUP2"
    },
    "6610": {
      "op": "DUP2"
    },
    "6611": {
      "op": "ADD"
    },
    "6612": {
      "op": "MLOAD"
    },
    "6613": {
      "op": "DUP4"
    },
    "6614": {
      "op": "DUP3"
    },
    "6615": {
      "op": "ADD"
    },
    "6616": {
      "op": "MSTORE"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6619": {
      "op": "ADD"
    },
    "6620": {
      "op": "PUSH2",
      "value": "0x19C8"
    },
    "6623": {
      "op": "JUMP"
    },
    "6624": {
      "op": "JUMPDEST"
    },
    "6625": {
      "op": "DUP4"
    },
    "6626": {
      "op": "DUP2"
    },
    "6627": {
      "op": "GT"
    },
    "6628": {
      "op": "ISZERO"
    },
    "6629": {
      "op": "PUSH2",
      "value": "0x153B"
    },
    "6632": {
      "op": "JUMPI"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6637": {
      "op": "SWAP2"
    },
    "6638": {
      "op": "ADD"
    },
    "6639": {
      "op": "MSTORE"
    },
    "6640": {
      "jump": "o",
      "op": "JUMP"
    },
    "6641": {
      "op": "JUMPDEST"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6644": {
      "op": "DUP3"
    },
    "6645": {
      "op": "MLOAD"
    },
    "6646": {
      "op": "PUSH2",
      "value": "0x1A03"
    },
    "6649": {
      "op": "DUP2"
    },
    "6650": {
      "op": "DUP5"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6653": {
      "op": "DUP8"
    },
    "6654": {
      "op": "ADD"
    },
    "6655": {
      "op": "PUSH2",
      "value": "0x19C5"
    },
    "6658": {
      "jump": "i",
      "op": "JUMP"
    },
    "6659": {
      "op": "JUMPDEST"
    },
    "6660": {
      "op": "SWAP2"
    },
    "6661": {
      "op": "SWAP1"
    },
    "6662": {
      "op": "SWAP2"
    },
    "6663": {
      "op": "ADD"
    },
    "6664": {
      "op": "SWAP3"
    },
    "6665": {
      "op": "SWAP2"
    },
    "6666": {
      "op": "POP"
    },
    "6667": {
      "op": "POP"
    },
    "6668": {
      "jump": "o",
      "op": "JUMP"
    },
    "6669": {
      "op": "JUMPDEST"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6672": {
      "op": "DUP2"
    },
    "6673": {
      "op": "MSTORE"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6676": {
      "op": "DUP3"
    },
    "6677": {
      "op": "MLOAD"
    },
    "6678": {
      "op": "DUP1"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6681": {
      "op": "DUP5"
    },
    "6682": {
      "op": "ADD"
    },
    "6683": {
      "op": "MSTORE"
    },
    "6684": {
      "op": "PUSH2",
      "value": "0x1A2C"
    },
    "6687": {
      "op": "DUP2"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6690": {
      "op": "DUP6"
    },
    "6691": {
      "op": "ADD"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6694": {
      "op": "DUP8"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "PUSH2",
      "value": "0x19C5"
    },
    "6699": {
      "jump": "i",
      "op": "JUMP"
    },
    "6700": {
      "op": "JUMPDEST"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6703": {
      "op": "ADD"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6706": {
      "op": "NOT"
    },
    "6707": {
      "op": "AND"
    },
    "6708": {
      "op": "SWAP2"
    },
    "6709": {
      "op": "SWAP1"
    },
    "6710": {
      "op": "SWAP2"
    },
    "6711": {
      "op": "ADD"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6714": {
      "op": "ADD"
    },
    "6715": {
      "op": "SWAP3"
    },
    "6716": {
      "op": "SWAP2"
    },
    "6717": {
      "op": "POP"
    },
    "6718": {
      "op": "POP"
    },
    "6719": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "bfd198afe9669b29a9e96e89ddb9267fe11a2bf4",
  "source": "pragma solidity 0.8.12;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport \"../../interfaces/IDispenser.sol\";\nimport \"../../interfaces/IERC20.sol\";\nimport \"../../interfaces/IERC20Template.sol\";\nimport \"../../interfaces/IERC721Template.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol\";\n\nimport \"../../utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol\";\n\ncontract Dispenser is ReentrancyGuard, IDispenser{\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    address public router;\n\n    struct DataToken {\n        bool active;  // if the dispenser is active for this datatoken\n        address owner; // owner of this dispenser\n        uint256 maxTokens; // max tokens to dispense\n        uint256 maxBalance; // max balance of requester. \n        address allowedSwapper;\n        //If the balance is higher, the dispense is rejected\n    }\n    mapping(address => DataToken) datatokens;\n    address[] public datatokensList;\n    \n    \n    event DispenserCreated(  // emited when a dispenser is created\n        address indexed datatokenAddress,\n        address indexed owner,\n        uint256 maxTokens,\n        uint256 maxBalance,\n        address allowedSwapper\n    );\n    event DispenserActivated(  // emited when a dispenser is activated\n        address indexed datatokenAddress\n    );\n\n    event DispenserDeactivated( // emited when a dispenser is deactivated\n        address indexed datatokenAddress\n    );\n    event DispenserAllowedSwapperChanged( // emited when allowedSwapper is changed\n        address indexed datatoken,\n        address indexed newAllowedSwapper);\n    \n    event TokensDispensed( \n        // emited when tokens are dispended\n        address indexed datatokenAddress,\n        address indexed userAddress,\n        uint256 amount\n    );\n\n    event OwnerWithdrawed(\n        address indexed datatoken,\n        address indexed owner,\n        uint256 amount\n    );\n\n    modifier onlyRouter() {\n        require(msg.sender == router, \"Dispenser: only router\");\n        _;\n    }\n\n    modifier onlyOwner(address datatoken) {\n        // allow only ERC20 Deployers or NFT Owner\n        require(\n            datatoken != address(0),\n            'Invalid token contract address'\n        );\n        IERC20Template dt = IERC20Template(datatoken);\n        require(\n            dt.isERC20Deployer(msg.sender) || \n            IERC721Template(dt.getERC721Address()).ownerOf(1) == msg.sender\n            ,\n            \"Invalid owner\"\n        );\n        _;\n    }\n\n    modifier onlyOwnerAndTemplate(address datatoken) {\n        // allow only ERC20 Deployers or NFT Owner\n        require(\n            datatoken != address(0),\n            'Invalid token contract address'\n        );\n        IERC20Template dt = IERC20Template(datatoken);\n        require(\n            dt.isERC20Deployer(msg.sender) || \n            IERC721Template(dt.getERC721Address()).ownerOf(1) == msg.sender ||\n            datatoken == msg.sender\n            ,\n            \"Invalid owner\"\n        );\n        _;\n    }\n\n    \n    constructor(address _router) {\n        require(_router != address(0), \"Dispenser: Wrong Router address\");\n        router = _router;\n    }\n\n    /**\n     * @dev getId\n     *      Return template id in case we need different ABIs. \n     *      If you construct your own template, please make sure to change the hardcoded value\n     */\n    function getId() pure public returns (uint8) {\n        return 1;\n    }\n    /**\n     * @dev status\n     *      Get information about a datatoken dispenser\n     * @param datatoken refers to datatoken address.\n     * @return active - if the dispenser is active for this datatoken\n     * @return owner - owner of this dispenser\n     * @return isMinter  - check the datatoken contract if the dispenser has mint roles\n     * @return maxTokens - max tokens to dispense\n     * @return maxBalance - max balance of requester. If the balance is higher, the dispense is rejected\n     * @return balance - internal balance of the contract (if any)\n     * @return allowedSwapper - address allowed to request DT if != 0\n     */\n    function status(address datatoken) \n    external view \n    returns(bool active,address owner,\n    bool isMinter,uint256 maxTokens,uint256 maxBalance, uint256 balance, address allowedSwapper){\n        require(\n            datatoken != address(0),\n            'Invalid token contract address'\n        );\n        active = datatokens[datatoken].active;\n        owner = datatokens[datatoken].owner;\n        maxTokens = datatokens[datatoken].maxTokens;\n        maxBalance = datatokens[datatoken].maxBalance;\n        IERC20Template tokenInstance = IERC20Template(datatoken);\n        balance = tokenInstance.balanceOf(address(this));\n        isMinter = tokenInstance.isMinter(address(this));\n        allowedSwapper = datatokens[datatoken].allowedSwapper;\n    }\n\n    /**\n     * @dev create\n     *      Create a new dispenser\n     * @param datatoken refers to datatoken address.\n     * @param maxTokens - max tokens to dispense\n     * @param maxBalance - max balance of requester.\n     * @param owner - owner\n     * @param allowedSwapper - if !=0, only this address can request DTs\n     */\n    function create(address datatoken,uint256 maxTokens, uint256 maxBalance, address owner, address allowedSwapper)\n        external onlyRouter{\n        require(\n            datatoken != address(0),\n            'Invalid token contract address'\n        );\n        require(\n            datatokens[datatoken].owner == address(0) || datatokens[datatoken].owner == owner,\n            'Datatoken already created'\n        );\n        datatokens[datatoken].active = true;\n        datatokens[datatoken].owner = owner;\n        datatokens[datatoken].maxTokens = maxTokens;\n        datatokens[datatoken].maxBalance = maxBalance;\n        datatokens[datatoken].allowedSwapper = allowedSwapper;\n        datatokensList.push(datatoken);\n        emit DispenserCreated(datatoken, owner, maxTokens, maxBalance, allowedSwapper);\n        emit DispenserAllowedSwapperChanged(datatoken, allowedSwapper);\n    }\n    /**\n     * @dev activate\n     *      Activate a new dispenser\n     * @param datatoken refers to datatoken address.\n     * @param maxTokens - max tokens to dispense\n     * @param maxBalance - max balance of requester.\n     */\n    function activate(address datatoken,uint256 maxTokens, uint256 maxBalance)\n        external onlyOwner(datatoken){\n        datatokens[datatoken].active = true;\n        datatokens[datatoken].maxTokens = maxTokens;\n        datatokens[datatoken].maxBalance = maxBalance;\n        datatokensList.push(datatoken);\n        emit DispenserActivated(datatoken);\n    }\n\n    /**\n     * @dev deactivate\n     *      Deactivate an existing dispenser\n     * @param datatoken refers to datatoken address.\n     */\n    function deactivate(address datatoken) external onlyOwner(datatoken){\n        datatokens[datatoken].active = false;\n        emit DispenserDeactivated(datatoken);\n    }\n\n    /**\n     * @dev setAllowedSwapper\n     *      Sets a new allowedSwapper\n     * @param datatoken refers to datatoken address.\n     * @param newAllowedSwapper refers to the new allowedSwapper\n     */\n    function setAllowedSwapper(address datatoken, address newAllowedSwapper) external onlyOwner(datatoken){\n        datatokens[datatoken].allowedSwapper= newAllowedSwapper;\n        emit DispenserAllowedSwapperChanged(datatoken, newAllowedSwapper);\n    }\n\n    \n\n    /**\n     * @dev dispense\n     *  Dispense datatokens to caller. \n     *  The dispenser must be active, hold enough DT (or be able to mint more) \n     *  and respect maxTokens/maxBalance requirements\n     * @param datatoken refers to datatoken address.\n     * @param amount amount of datatokens required.\n     * @param destination refers to who will receive the tokens\n     */\n    function dispense(address datatoken, uint256 amount, address destination) external nonReentrant payable{\n        require(\n            datatoken != address(0),\n            'Invalid token contract address'\n        );\n        require(\n            datatokens[datatoken].active,\n            'Dispenser not active'\n        );\n        require(\n            amount > 0,\n            'Invalid zero amount'\n        );\n        require(\n            datatokens[datatoken].maxTokens >= amount,\n            'Amount too high'\n        );\n        if(datatokens[datatoken].allowedSwapper != address(0)){\n            require(\n                datatokens[datatoken].allowedSwapper == msg.sender,\n                \"This address is not allowed to request DT\"\n            );\n        }\n        \n        IERC20Template tokenInstance = IERC20Template(datatoken);\n        uint256 callerBalance = tokenInstance.balanceOf(destination);\n        require(\n            callerBalance<datatokens[datatoken].maxBalance,\n            'Caller balance too high'\n        );\n        uint256 ourBalance = tokenInstance.balanceOf(address(this));\n        if(ourBalance<amount && tokenInstance.isMinter(address(this))){ \n            //we need to mint the difference if we can\n            tokenInstance.mint(address(this),amount - ourBalance);\n            ourBalance = tokenInstance.balanceOf(address(this));\n        }\n        require(\n            ourBalance>=amount,\n            'Not enough reserves'\n        );\n        emit TokensDispensed(datatoken, destination, amount);\n        IERC20(datatoken).safeTransfer(destination,amount);\n    }\n\n    /**\n     * @dev ownerWithdraw\n     *      Withdraw all datatokens in this dispenser balance to ERC20.getPaymentCollector()\n     * @param datatoken refers to datatoken address.\n     */\n    function ownerWithdraw(address datatoken) external onlyOwnerAndTemplate(datatoken) nonReentrant {\n        require(\n            datatoken != address(0),\n            'Invalid token contract address'\n        );\n        _ownerWithdraw(datatoken);\n    }\n\n    function _ownerWithdraw(address datatoken) internal{\n        IERC20Template tokenInstance = IERC20Template(datatoken);\n        address destination = tokenInstance.getPaymentCollector();\n        uint256 ourBalance = tokenInstance.balanceOf(address(this));\n        if(ourBalance>0){\n            emit OwnerWithdrawed(datatoken, destination, ourBalance);\n            IERC20(datatoken).safeTransfer(destination,ourBalance);\n        }\n    }\n}",
  "sourceMap": "574:9887:39:-:0;;;3224:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1637:1:2;1742:7;:22;-1:-1:-1;;;;;3271:21:39;;3263:65;;;;-1:-1:-1;;;3263:65:39;;511:2:75;3263:65:39;;;493:21:75;550:2;530:18;;;523:30;589:33;569:18;;;562:61;640:18;;3263:65:39;;;;;;;;3338:6;:16;;-1:-1:-1;;;;;;3338:16:39;-1:-1:-1;;;;;3338:16:39;;;;;;;;;;574:9887;;14:290:75;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:75;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:75:o;309:355::-;574:9887:39;;;;;;",
  "sourcePath": "contracts/oceanv4/pools/dispenser/Dispenser.sol",
  "type": "contract"
}